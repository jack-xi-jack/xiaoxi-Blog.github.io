<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Istio Basic</title>
      <link href="/2025/03/08/Istio%20Basic/"/>
      <url>/2025/03/08/Istio%20Basic/</url>
      
        <content type="html"><![CDATA[<h2 id="istio-简介"><font style="background-color:rgba(255, 255, 255, 0);">Istio 简介</font></h2><font style="background-color:rgba(255, 255, 255, 0);">Connect, secure, control, and observe services.</font><p><font style="background-color:rgba(255, 255, 255, 0);">连接、安全加固、控制和观察服务的开放平台。</font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">连接（Connect）：智能控制服务之间的调用流量，能够实现灰度升级、AB 测试和红黑部署等功能；</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">安全加固（Secure）：自动为服务之间的调用提供认证、授权和加密；</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">控制（Control）：应用用户定义的 policy，保证资源在消费者中公平分配；</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">观察（Observe）：查看服务运行期间的各种数据，比如日志、监控和 tracing，了解服务的运行情况。</font></li></ul><h2 id="service-mesh"><font style="background-color:rgba(255, 255, 255, 0);">Service Mesh</font></h2>`<font style="background-color:rgba(255, 255, 255, 0);">Service Mesh</font>`<font style="background-color:rgba(255, 255, 255, 0);">(服务网格)可以简单理解为</font>**<font style="background-color:rgba(255, 255, 255, 0);">"分布式代理"</font>**<font style="background-color:rgba(255, 255, 255, 0);">.</font><p><img src="https://cdn.nlark.com/yuque/0/2025/gif/43141749/1741444376203-46e720d6-3fb5-4672-b8ad-01e6eedd677f.gif"></p><h2 id="istio-架构"><font style="background-color:rgba(255, 255, 255, 0);">Istio 架构</font></h2>![](https://cdn.nlark.com/yuque/0/2025/svg/43141749/1741444377049-daa84c0b-0834-4f07-9510-5202b4a8617a.svg)<h2 id="istio-安装部署"><font style="background-color:rgba(255, 255, 255, 0);">Istio 安装部署</font></h2><h3 id="使用istioctl安装"><font style="background-color:rgba(255, 255, 255, 0);">使用</font>`<font style="background-color:rgba(255, 255, 255, 0);">istioctl</font>`<font style="background-color:rgba(255, 255, 255, 0);">安装</font></h3><font style="background-color:rgba(255, 255, 255, 0);">官方详细中文安装文档:</font><font style="background-color:rgba(255, 255, 255, 0);"> </font>[<font style="background-color:rgba(255, 255, 255, 0);">https://istio.io/latest/zh/docs/setup/install/istioctl/</font>](https://istio.io/latest/zh/docs/setup/install/istioctl/)<p><font style="background-color:rgba(255, 255, 255, 0);">以下只记录相关命令:</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L https://istio.io/downloadIstio | sh -</span><br><span class="line"><span class="comment"># 也可以从官方github仓库进行获取release包, https://github.com/istio/istio/releases/tag/1.7.3</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> istio-1.7.3/</span><br><span class="line"><span class="comment"># 输出环境变量, 以便直接使用</span></span><br><span class="line">$ <span class="built_in">export</span> PATH=<span class="variable">$PWD</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># 添加自动补全功能(需要子命令时按下TAB键激活)</span></span><br><span class="line">$ <span class="built_in">cp</span> ./tools/istioctl.bash ~ &amp;&amp; <span class="built_in">source</span> ~/istioctl.bash</span><br><span class="line"><span class="comment"># 安装demo配置</span></span><br><span class="line">$ istioctl manifest install --<span class="built_in">set</span> profile=demo</span><br><span class="line"><span class="comment"># 为了验证是否安装成功，需要先确保以下 Kubernetes 服务正确部署，然后验证除 jaeger-agent 服务外的其他服务，是否均有正确的 CLUSTER-IP：</span></span><br><span class="line">$ kubectl get svc -n istio-system</span><br><span class="line"><span class="comment"># 请确保关联的 Kubernetes pod 已经部署，并且 STATUS 为 Running</span></span><br><span class="line">$ kubectl get pods -n istio-system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">$ istioctl manifest generate --<span class="built_in">set</span> profile=demo | kubectl delete -f -</span><br></pre></td></tr></table></figure><h3 id="使用helm-chart安装"><font style="background-color:rgba(255, 255, 255, 0);">使用</font>`<font style="background-color:rgba(255, 255, 255, 0);">helm chart</font>`<font style="background-color:rgba(255, 255, 255, 0);">安装</font></h3><font style="background-color:rgba(255, 255, 255, 0);">已被启用, 推荐使用</font>`<font style="background-color:rgba(255, 255, 255, 0);">istioctl</font>`<font style="background-color:rgba(255, 255, 255, 0);">安装.</font><p><font style="background-color:rgba(255, 255, 255, 0);">部分内容筛选自:</font><font style="background-color:rgba(255, 255, 255, 0);"> </font><a href="https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS8MgskBbNKMg1jd_UAgBBtBgbuW-CnWsI1qXa8Fplpd9M2HsHPtL_uGFwcB-LoRjg8V_MfAw8Wg3k70j_V31ZLuJMytP8qR2YRnycg--9VFPkkNS1gPt1QyTqAvLDpSkyT_ezw95tL17tyKO1qlVHvGS8DMVBk6NX30KCpE-80kRTqGhvjHCpURaK6ytIf8OgoTKJs_5u3vtMjWlhLQ8AEgCYioxHkzTmA..&type=2&query=istio&token=empty&k=91&h=L"><font style="background-color:rgba(255, 255, 255, 0);">Istio 是啥?一文带你彻底了解</font></a></p><h2 id="参考链接"><font style="background-color:rgba(255, 255, 255, 0);">参考链接</font></h2>+ <font style="background-color:rgba(255, 255, 255, 0);">Istio Documentation:</font><font style="background-color:rgba(255, 255, 255, 0);"> </font>[<font style="background-color:rgba(255, 255, 255, 0);">https://istio.io/latest/docs/</font>](https://istio.io/latest/docs/)+ <font style="background-color:rgba(255, 255, 255, 0);">Istio Arch:</font><font style="background-color:rgba(255, 255, 255, 0);"> </font>[<font style="background-color:rgba(255, 255, 255, 0);">https://istio.io/latest/docs/ops/deployment/architecture/</font>](https://istio.io/latest/docs/ops/deployment/architecture/)+ <font style="background-color:rgba(255, 255, 255, 0);">Istio 入门:</font><font style="background-color:rgba(255, 255, 255, 0);"> </font>[<font style="background-color:rgba(255, 255, 255, 0);">Istio 是啥?一文带你彻底了解</font>](https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS8MgskBbNKMg1jd_UAgBBtBgbuW-CnWsI1qXa8Fplpd9M2HsHPtL_uGFwcB-LoRjg8V_MfAw8Wg3k70j_V31ZLuJMytP8qR2YRnycg--9VFPkkNS1gPt1QyTqAvLDpSkyT_ezw95tL17tyKO1qlVHvGS8DMVBk6NX30KCpE-80kRTqGhvjHCpURaK6ytIf8OgoTKJs_5u3vtMjWlhLQ8AEgCYioxHkzTmA..&type=2&query=istio&token=empty&k=91&h=L)+ <font style="background-color:rgba(255, 255, 255, 0);">Istio Installation: </font>[<font style="background-color:rgba(255, 255, 255, 0);">https://istio.io/latest/zh/docs/setup/getting-started/</font>](https://istio.io/latest/zh/docs/setup/getting-started/)]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Istio</title>
      <link href="/2025/03/08/Istio/"/>
      <url>/2025/03/08/Istio/</url>
      
        <content type="html"><![CDATA[<h2 id="istio-简介"><font style="background-color:rgba(255, 255, 255, 0);">Istio 简介</font></h2><font style="background-color:rgba(255, 255, 255, 0);">Connect, secure, control, and observe services.</font><p><font style="background-color:rgba(255, 255, 255, 0);">连接、安全加固、控制和观察服务的开放平台。</font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">连接（Connect）：智能控制服务之间的调用流量，能够实现灰度升级、AB 测试和红黑部署等功能；</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">安全加固（Secure）：自动为服务之间的调用提供认证、授权和加密；</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">控制（Control）：应用用户定义的 policy，保证资源在消费者中公平分配；</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">观察（Observe）：查看服务运行期间的各种数据，比如日志、监控和 tracing，了解服务的运行情况。</font></li></ul><h2 id="service-mesh"><font style="background-color:rgba(255, 255, 255, 0);">Service Mesh</font></h2>`<font style="background-color:rgba(255, 255, 255, 0);">Service Mesh</font>`<font style="background-color:rgba(255, 255, 255, 0);">(服务网格)可以简单理解为</font>**<font style="background-color:rgba(255, 255, 255, 0);">"分布式代理"</font>**<font style="background-color:rgba(255, 255, 255, 0);">.</font><p><img src="https://cdn.nlark.com/yuque/0/2025/gif/43141749/1741444376203-46e720d6-3fb5-4672-b8ad-01e6eedd677f.gif"></p><h2 id="istio-架构"><font style="background-color:rgba(255, 255, 255, 0);">Istio 架构</font></h2>![](https://cdn.nlark.com/yuque/0/2025/svg/43141749/1741444377049-daa84c0b-0834-4f07-9510-5202b4a8617a.svg)<h2 id="istio-安装部署"><font style="background-color:rgba(255, 255, 255, 0);">Istio 安装部署</font></h2><h3 id="使用istioctl安装"><font style="background-color:rgba(255, 255, 255, 0);">使用</font>`<font style="background-color:rgba(255, 255, 255, 0);">istioctl</font>`<font style="background-color:rgba(255, 255, 255, 0);">安装</font></h3><font style="background-color:rgba(255, 255, 255, 0);">官方详细中文安装文档:</font><font style="background-color:rgba(255, 255, 255, 0);"> </font>[<font style="background-color:rgba(255, 255, 255, 0);">https://istio.io/latest/zh/docs/setup/install/istioctl/</font>](https://istio.io/latest/zh/docs/setup/install/istioctl/)<p><font style="background-color:rgba(255, 255, 255, 0);">以下只记录相关命令:</font></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L https://istio.io/downloadIstio | sh -</span><br><span class="line"><span class="comment"># 也可以从官方github仓库进行获取release包, https://github.com/istio/istio/releases/tag/1.7.3</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span> istio-1.7.3/</span><br><span class="line"><span class="comment"># 输出环境变量, 以便直接使用</span></span><br><span class="line">$ <span class="built_in">export</span> PATH=<span class="variable">$PWD</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># 添加自动补全功能(需要子命令时按下TAB键激活)</span></span><br><span class="line">$ <span class="built_in">cp</span> ./tools/istioctl.bash ~ &amp;&amp; <span class="built_in">source</span> ~/istioctl.bash</span><br><span class="line"><span class="comment"># 安装demo配置</span></span><br><span class="line">$ istioctl manifest install --<span class="built_in">set</span> profile=demo</span><br><span class="line"><span class="comment"># 为了验证是否安装成功，需要先确保以下 Kubernetes 服务正确部署，然后验证除 jaeger-agent 服务外的其他服务，是否均有正确的 CLUSTER-IP：</span></span><br><span class="line">$ kubectl get svc -n istio-system</span><br><span class="line"><span class="comment"># 请确保关联的 Kubernetes pod 已经部署，并且 STATUS 为 Running</span></span><br><span class="line">$ kubectl get pods -n istio-system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">$ istioctl manifest generate --<span class="built_in">set</span> profile=demo | kubectl delete -f -</span><br></pre></td></tr></table></figure><h3 id="使用helm-chart安装"><font style="background-color:rgba(255, 255, 255, 0);">使用</font>`<font style="background-color:rgba(255, 255, 255, 0);">helm chart</font>`<font style="background-color:rgba(255, 255, 255, 0);">安装</font></h3><font style="background-color:rgba(255, 255, 255, 0);">已被启用, 推荐使用</font>`<font style="background-color:rgba(255, 255, 255, 0);">istioctl</font>`<font style="background-color:rgba(255, 255, 255, 0);">安装.</font><p><font style="background-color:rgba(255, 255, 255, 0);">部分内容筛选自:</font><font style="background-color:rgba(255, 255, 255, 0);"> </font><a href="https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS8MgskBbNKMg1jd_UAgBBtBgbuW-CnWsI1qXa8Fplpd9M2HsHPtL_uGFwcB-LoRjg8V_MfAw8Wg3k70j_V31ZLuJMytP8qR2YRnycg--9VFPkkNS1gPt1QyTqAvLDpSkyT_ezw95tL17tyKO1qlVHvGS8DMVBk6NX30KCpE-80kRTqGhvjHCpURaK6ytIf8OgoTKJs_5u3vtMjWlhLQ8AEgCYioxHkzTmA..&type=2&query=istio&token=empty&k=91&h=L"><font style="background-color:rgba(255, 255, 255, 0);">Istio 是啥?一文带你彻底了解</font></a></p><h2 id="参考链接"><font style="background-color:rgba(255, 255, 255, 0);">参考链接</font></h2>+ <font style="background-color:rgba(255, 255, 255, 0);">Istio Documentation:</font><font style="background-color:rgba(255, 255, 255, 0);"> </font>[<font style="background-color:rgba(255, 255, 255, 0);">https://istio.io/latest/docs/</font>](https://istio.io/latest/docs/)+ <font style="background-color:rgba(255, 255, 255, 0);">Istio Arch:</font><font style="background-color:rgba(255, 255, 255, 0);"> </font>[<font style="background-color:rgba(255, 255, 255, 0);">https://istio.io/latest/docs/ops/deployment/architecture/</font>](https://istio.io/latest/docs/ops/deployment/architecture/)+ <font style="background-color:rgba(255, 255, 255, 0);">Istio 入门:</font><font style="background-color:rgba(255, 255, 255, 0);"> </font>[<font style="background-color:rgba(255, 255, 255, 0);">Istio 是啥?一文带你彻底了解</font>](https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS8MgskBbNKMg1jd_UAgBBtBgbuW-CnWsI1qXa8Fplpd9M2HsHPtL_uGFwcB-LoRjg8V_MfAw8Wg3k70j_V31ZLuJMytP8qR2YRnycg--9VFPkkNS1gPt1QyTqAvLDpSkyT_ezw95tL17tyKO1qlVHvGS8DMVBk6NX30KCpE-80kRTqGhvjHCpURaK6ytIf8OgoTKJs_5u3vtMjWlhLQ8AEgCYioxHkzTmA..&type=2&query=istio&token=empty&k=91&h=L)+ <font style="background-color:rgba(255, 255, 255, 0);">Istio Installation: </font>[<font style="background-color:rgba(255, 255, 255, 0);">https://istio.io/latest/zh/docs/setup/getting-started/</font>](https://istio.io/latest/zh/docs/setup/getting-started/)]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>入门服务注册中心————consul</title>
      <link href="/2025/03/08/%E5%85%A5%E9%97%A8%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E2%80%94%E2%80%94consul/"/>
      <url>/2025/03/08/%E5%85%A5%E9%97%A8%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E2%80%94%E2%80%94consul/</url>
      
        <content type="html"><![CDATA[<h1 id="8519e085"><font style="background-color:rgba(255, 255, 255, 0);">基础概念</font></h1>---<h2 id="5e372583"><font style="background-color:rgba(255, 255, 255, 0);">什么是注册中心</font></h2><font style="background-color:rgba(255, 255, 255, 0);">随着微服务理论发展的成熟，越来越多互联网公司采用微服务架构来支持业务发展。各个微服务之间都需要通过注册中心来实现自动化的注册和发现。  </font>![](https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738900841329-403a2378-9696-4410-a98b-791e28e3ccf0.jpeg)<font style="background-color:rgba(255, 255, 255, 0);">  </font><font style="background-color:rgba(255, 255, 255, 0);">注册中心主要有三种角色：</font><ul><li><strong><font style="background-color:rgba(255, 255, 255, 0);">服务提供者（RPC Server）</font></strong><font style="background-color:rgba(255, 255, 255, 0);">：在启动时，向 Registry 注册自身服务，并向 Registry 定期发送心跳汇报存活状态。</font></li><li><strong><font style="background-color:rgba(255, 255, 255, 0);">服务消费者（RPC Client）</font></strong><font style="background-color:rgba(255, 255, 255, 0);">：在启动时，向 Registry 订阅服务，把 Registry 返回的服务节点列表缓存在本地内存中，并与 RPC Sever 建立连接。</font></li><li><strong><font style="background-color:rgba(255, 255, 255, 0);">服务注册中心（Registry）</font></strong><font style="background-color:rgba(255, 255, 255, 0);">：用于保存 RPC Server 的注册信息，当 RPC Server 节点发生变更时，Registry 会同步变更，RPC Client 感知后会刷新本地 内存中缓存的服务节点列表。</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">最后，RPC Client 从本地缓存的服务节点列表中，基于负载均衡算法选择一台 RPC Sever 发起调用。<br></font><font style="background-color:rgba(255, 255, 255, 0);">目前常见的注册中心有Consul、ETCD、Zookeeper、Eureka、Nacos等。</font></p><h2 id="9cfc6012"><font style="background-color:rgba(255, 255, 255, 0);">什么是Consul</font></h2><font style="background-color:rgba(255, 255, 255, 0);">Consul是HashiCorp公司推出的开源工具，Consul由Go语言开发，部署起来非常容易，只需要极少的可执行程序和配置文件，具有绿色、轻量级的特点。Consul是分布式的、高可用的、 可横向扩展的用于实现分布式系统的服务发现与配置。</font><h2 id="22750ec8"><font style="background-color:rgba(255, 255, 255, 0);">Consul特点</font></h2>+ <font style="background-color:rgba(255, 255, 255, 0);">服务发现（Service Discovery）：Consul提供了通过DNS或者HTTP接口的方式来注册服务和发现服务。一些外部的服务通过Consul很容易的找到它所依赖的服务。</font>+ <font style="background-color:rgba(255, 255, 255, 0);">健康检查（Health Checking）：Consul的Client可以提供任意数量的健康检查，既可以与给定的服务相关联(“webserver是否返回200 OK”)，也可以与本地节点相关联(“内存利用率是否低于90%”)。操作员可以使用这些信息来监视集群的健康状况，服务发现组件可以使用这些信息将流量从不健康的主机路由出去。</font>+ <font style="background-color:rgba(255, 255, 255, 0);">Key/Value存储：应用程序可以根据自己的需要使用Consul提供的Key/Value存储。 Consul提供了简单易用的HTTP接口，结合其他工具可以实现动态配置、功能标记、领袖选举等等功能。</font>+ <font style="background-color:rgba(255, 255, 255, 0);">安全服务通信：Consul可以为服务生成和分发TLS证书，以建立相互的TLS连接。意图可用于定义允许哪些服务通信。服务分割可以很容易地进行管理，其目的是可以实时更改的，而不是使用复杂的网络拓扑和静态防火墙规则。</font>+ <font style="background-color:rgba(255, 255, 255, 0);">多数据中心：Consul支持开箱即用的多数据中心. 这意味着用户不需要担心需要建立额外的抽象层让业务扩展到多个区域。</font><h2 id="73539e88"><font style="background-color:rgba(255, 255, 255, 0);">consul组件</font></h2>+ <font style="background-color:rgba(255, 255, 255, 0);">Agent：是在 Consul 集群的每个成员上长期运行的守护进程，通过命令 consul agent 启动运行。由于所有节点都必须运行一个 Agent，因此 Agent 可以分为 client 或 Server。所有的 Agent 都可以运行DNS或HTTP接口，并负责运行监测和保持服务同步</font>+ <font style="background-color:rgba(255, 255, 255, 0);">Client：是将所有RPC转发到 Server 的 Agent。Client 是相对无状态的，Client 唯一执行的后台活动是加入 LAN gossip 池。这只有最小的资源开销，且只消耗少量的网络带宽</font>+ <font style="background-color:rgba(255, 255, 255, 0);">Server：是一个有一组扩展功能的 Agent，这些功能包括参与 Raft 选举、维护集群状态、响应RPC查询、与其他数据中心交互 WAN gossip 和转发查询给 leader 或远程的数据中心</font>+ <font style="background-color:rgba(255, 255, 255, 0);">Datacenter：是一个私有的、低延迟和高带宽的网络环境。这不包括通过公网的通信，但就目的而言，单个 EC2 中的多个可用区域被视为数据中心的一部分</font>+ <font style="background-color:rgba(255, 255, 255, 0);">Consensus：一致性。Consul 使用 Consensus 协议（具体由 Raft 算法实现）来提供一致性（由 CAP 定义），表明 leader 选举和事务的顺序达成一致</font>+ <font style="background-color:rgba(255, 255, 255, 0);">Gossip：Consul 使用 Gossip 协议来管理成员资格并向集群广播消息。Serf 提供了完整的 Gossip 协议，可用于多种目的，而 Consul 建立在 Serf 之上。Gossip 涉及节点到节点的随机通信，主要是通过UDP。Gossip 协议也被称为 Epidemic 协议（流行病协议）</font>+ <font style="background-color:rgba(255, 255, 255, 0);">LAN Gossip：指包含所有位于同一局域网或数据中心的节点的 LAN gossip 池</font>+ <font style="background-color:rgba(255, 255, 255, 0);">WAN Gossip：指仅包含 Server 的 WAN gossip 池。这些 Server 主要分布在不同的数据中心，通常通过Internet或者广域网进行通信</font>+ <font style="background-color:rgba(255, 255, 255, 0);">RPC：远程过程调用。一种 请求/响应 机制，允许 Client 向 Server 发起请求</font><h2 id="641185e8"><font style="background-color:rgba(255, 255, 255, 0);">Consul 架构图</font></h2>![](https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738900841304-0599a640-bce7-44a1-8834-3b42cbe90ad9.jpeg)<font style="background-color:rgba(255, 255, 255, 0);">  </font><font style="background-color:rgba(255, 255, 255, 0);">每个为Consul提供服务的节点都会运行一个Consul Agent进程。运行代理不需要发现其他服务或获取/设置密钥/值数据。Agent负责对节点上的服务以及节点本身进行健康检查。  </font><font style="background-color:rgba(255, 255, 255, 0);">Consul Agent 分为两种模式， Server 和 Client模式，一般部署模型是 Server + Client的模式（当然也可以纯Server）, Server 具有Client的全部功能， 但是由于Server负责存储数据，并且强一致性模型的缘故， Server数是有限的（3-5个Server节点，Client可以无限扩展的）。  </font><font style="background-color:rgba(255, 255, 255, 0);">Agent与一个或多个Consul Server对话。Consul Server是</font>**<font style="background-color:rgba(255, 255, 255, 0);">存储</font>**<font style="background-color:rgba(255, 255, 255, 0);">和</font>**<font style="background-color:rgba(255, 255, 255, 0);">复制数据</font>**<font style="background-color:rgba(255, 255, 255, 0);">的地方。Server本身会选出一个Leader。虽然Consul可以用一台Server来运作，但建议使用3到5台，以避免故障情况导致数据丢失。建议每个数据中心采用Consul服务器集群。  </font><font style="background-color:rgba(255, 255, 255, 0);">Server Agent维护着一个目录（Catalog），这个目录（Catalog）是由Agent提交的信息汇总形成的。目录维护着集群的高层视图，包括哪些服务可用，哪些节点运行这些服务，健康信息等。  </font><font style="background-color:rgba(255, 255, 255, 0);">需要发现其他服务或节点的基础结构组件可以查询任何Consul Server或任何Consul Agent。Agent将查询自动转发到Server。  </font><font style="background-color:rgba(255, 255, 255, 0);">Agent会自动将查询转发给Server Agent。 每个数据中心都运行一个Consul Server集群。当有跨数据中心的服务发现或配置请求时，本地Consul Server将请求转发到远程数据中心并返回结果。</font><h2 id="236bb442"><font style="background-color:rgba(255, 255, 255, 0);">Consul的使用场景</font></h2><font style="background-color:rgba(255, 255, 255, 0);">Consul的应用场景包括服务发现、服务隔离、服务配置：</font><ul><li><font style="background-color:rgba(255, 255, 255, 0);">服务发现场景中consul作为注册中心，服务地址被注册到consul中以后，可以使用consul提供的dns、http接口查询，consul支持health check。</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">服务隔离场景中consul支持以服务为单位设置访问策略，能同时支持经典的平台和新兴的平台，支持tls证书分发，service-to-service加密。</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">服务配置场景中consul提供key-value数据存储功能，并且能将变动迅速地通知出去，借助Consul可以实现配置共享，需要读取配置的服务可以从Consul中读取到准确的配置信息。</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">Consul可以帮助系统管理者更清晰的了解复杂系统内部的系统架构，运维人员可以将Consul看成一种监控软件，也可以看成一种资产（资源）管理系统。</font></li></ul><h1 id="039d392c"><font style="background-color:rgba(255, 255, 255, 0);">安装部署</font></h1>---<p><font style="background-color:rgba(255, 255, 255, 0);">参考文档：</font><a href="https://developer.hashicorp.com/consul/downloads?host=www.consul.io"><font style="background-color:rgba(255, 255, 255, 0);">https://developer.hashicorp.com/consul/downloads?host=www.consul.io</font></a></p><h2 id="62a5d2da"><font style="background-color:rgba(255, 255, 255, 0);">yum部署</font></h2><font style="background-color:rgba(255, 255, 255, 0);">安装软件包</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# yum install -y yum-utils</span><br><span class="line">[root@tiaoban ~]# yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo</span><br><span class="line">[root@tiaoban ~]# yum -y install consul</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">启动服务</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# systemctl start consul</span><br><span class="line">[root@tiaoban ~]# systemctl enable consul</span><br></pre></td></tr></table></figure><h2 id="4443f491"><font style="background-color:rgba(255, 255, 255, 0);">二进制部署</font></h2><font style="background-color:rgba(255, 255, 255, 0);">下载</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# mkdir consul</span><br><span class="line">[root@tiaoban ~]# cd consul/</span><br><span class="line">[root@tiaoban consul]# wget https://releases.hashicorp.com/consul/1.13.2/consul_1.13.2_linux_amd64.zip</span><br><span class="line">[root@tiaoban consul]# ls</span><br><span class="line">consul_1.13.2_darwin_amd64.zip</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">解压安装</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban consul]# unzip consul_1.13.2_linux_amd64.zip </span><br><span class="line">Archive:  consul_1.13.2_linux_amd64.zip</span><br><span class="line">  inflating: consul                  </span><br><span class="line">[root@tiaoban consul]# ls</span><br><span class="line">consul  consul_1.13.2_linux_amd64.zip</span><br><span class="line">[root@tiaoban consul]# mv consul /usr/local/bin/</span><br><span class="line">[root@tiaoban consul]# consul version</span><br><span class="line">Consul v1.13.2</span><br><span class="line">Revision 0e046bbb</span><br><span class="line">Build Date 2022-09-20T20:30:07Z</span><br><span class="line">Protocol 2 spoken by default, understands 2 to 3 (agent will automatically use protocol &gt;2 when speaking to compatible agents)</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">启动服务测试<br></font><font style="background-color:rgba(255, 255, 255, 0);">使用单节点模式启动测试</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban consul]# consul agent -dev -ui -client 0.0.0.0</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738900841427-2c5517e2-2c9f-4ae3-9048-de5811f58ea6.jpeg"><font style="background-color:rgba(255, 255, 255, 0);"><br></font><font style="background-color:rgba(255, 255, 255, 0);">添加启动脚本</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# cat /usr/lib/systemd/system/consul.service </span><br><span class="line">[Unit]</span><br><span class="line">Description=consul</span><br><span class="line">After=network.target</span><br><span class="line">    </span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/consul/start.sh</span><br><span class="line">KillSignal=SIGTERM</span><br><span class="line">    </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">[root@tiaoban ~]# mkdir -p /usr/local/consul/</span><br><span class="line">[root@tiaoban ~]# cat /usr/local/consul/start.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">/usr/local/bin/consul agent -dev -ui -client 0.0.0.0</span><br><span class="line">[root@tiaoban ~]# chmod u+x /usr/local/consul/start.sh</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">启动服务</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# systemctl daemon-reload </span><br><span class="line">[root@tiaoban ~]# systemctl start consul</span><br><span class="line">[root@tiaoban ~]# systemctl enable consul</span><br></pre></td></tr></table></figure><h1 id="b19ba4ef"><font style="background-color:rgba(255, 255, 255, 0);">服务启动</font></h1>---<p><font style="background-color:rgba(255, 255, 255, 0);">以下操作以yum方式安装consul配置为例，配置文件路径</font><code>&lt;font style=&quot;background-color:rgba(255, 255, 255, 0);&quot;&gt;/etc/consul.d/consul.hcl&lt;/font&gt;</code></p><h2 id="8c7054cf"><font style="background-color:rgba(255, 255, 255, 0);">单节点模式</font></h2><font style="background-color:rgba(255, 255, 255, 0);">修改配置文件</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 指明数据中心的名字</span><br><span class="line">datacenter = &quot;my-dc-1&quot;</span><br><span class="line"># 存储状态的数据目录</span><br><span class="line">data_dir = &quot;/opt/consul&quot;</span><br><span class="line"># web ui</span><br><span class="line">ui_config&#123;</span><br><span class="line">  enabled = true</span><br><span class="line">&#125;</span><br><span class="line"># 节点是个Server</span><br><span class="line">server = true</span><br><span class="line"># 绑定的一个地址，用于节点之间通信的地址</span><br><span class="line">bind_addr = &quot;192.168.10.100&quot;</span><br><span class="line"># 期望提供的Server节点数目</span><br><span class="line">bootstrap_expect=1</span><br><span class="line"># Client接口绑定到的地址</span><br><span class="line">client_addr = &quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">启动服务，查看集群成员</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban consul.d]# systemctl start consul</span><br><span class="line">[root@tiaoban consul.d]# consul members </span><br><span class="line">Node     Address              Status  Type    Build   Protocol  DC       Partition  Segment</span><br><span class="line">tiaoban  192.168.10.100:8301  alive   server  1.13.2  2         my-dc-1  default    &lt;all&gt;</span><br></pre></td></tr></table></figure><h2 id="6955953a"><font style="background-color:rgba(255, 255, 255, 0);">集群模式</font></h2><font style="background-color:rgba(255, 255, 255, 0);">主机规划</font><table><thead><tr><th><strong>主机名</strong></th><th><strong>IP</strong></th><th><strong>角色</strong></th></tr></thead><tbody><tr><td>k8s-master</td><td>192.168.10.10</td><td>server</td></tr><tr><td>k8s-work1</td><td>192.168.10.11</td><td>server</td></tr><tr><td>k8s-work2</td><td>192.168.10.12</td><td>server</td></tr><tr><td>tiaoban</td><td>192.168.10.100</td><td>clinet</td></tr></tbody></table><p><font style="background-color:rgba(255, 255, 255, 0);">server端配置</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 指明数据中心的名字</span><br><span class="line">datacenter = &quot;my-dc-1&quot;</span><br><span class="line"># 存储状态的数据目录</span><br><span class="line">data_dir = &quot;/opt/consul&quot;</span><br><span class="line"># web ui</span><br><span class="line">ui_config&#123;</span><br><span class="line">  enabled = true</span><br><span class="line">&#125;</span><br><span class="line"># 节点是个Server</span><br><span class="line">server = true</span><br><span class="line"># 绑定的一个地址，用于节点之间通信的地址。此处以192.168.10.10为例，其他两个更换ip即可。</span><br><span class="line">bind_addr = &quot;192.168.10.10&quot;</span><br><span class="line"># 期望提供的Server节点数目</span><br><span class="line">bootstrap_expect=3</span><br><span class="line"># Client接口绑定到的地址</span><br><span class="line">client_addr = &quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">client配置</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 指明数据中心的名字</span><br><span class="line">datacenter = &quot;my-dc-1&quot;</span><br><span class="line"># 存储状态的数据目录</span><br><span class="line">data_dir = &quot;/opt/consul&quot;</span><br><span class="line"># web ui</span><br><span class="line">ui_config&#123;</span><br><span class="line">  enabled = true</span><br><span class="line">&#125;</span><br><span class="line"># 节点是个Server</span><br><span class="line">server = false</span><br><span class="line"># 绑定的一个地址，用于节点之间通信的地址</span><br><span class="line">bind_addr = &quot;192.168.10.100&quot;</span><br><span class="line"># Client接口绑定到的地址</span><br><span class="line">client_addr = &quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">启动服务并加入集群</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 所有机器执行</span><br><span class="line">[root@k8s-master consul.d]# systemctl restart consul</span><br><span class="line"># 除了k8s-master以外的其他机器执行</span><br><span class="line">[root@k8s-tiaoban consul.d]# consul join 192.168.10.10</span><br><span class="line">Successfully joined cluster by contacting 1 nodes.</span><br></pre></td></tr></table></figure><h1 id="4b194b09"><font style="background-color:rgba(255, 255, 255, 0);">Consul 常用CLI</font></h1>---<h2 id="eb75b9f5"><font style="background-color:rgba(255, 255, 255, 0);">查看服务列表</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# consul catalog services</span><br><span class="line">consul</span><br><span class="line">traefik</span><br><span class="line">traefik-tcp</span><br></pre></td></tr></table></figure><h2 id="75acbd2e"><font style="background-color:rgba(255, 255, 255, 0);">注销服务</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">consul services deregister -id=:service-id</span><br><span class="line">// :service-id 为用户服务Id</span><br></pre></td></tr></table></figure><h2 id="1b4e985d"><font style="background-color:rgba(255, 255, 255, 0);">查看节点成员</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# consul members</span><br><span class="line">Node        Address              Status  Type    Build   Protocol  DC       Partition  Segment</span><br><span class="line">k8s-master  192.168.10.10:8301   alive   server  1.13.3  2         my-dc-1  default    &lt;all&gt;</span><br><span class="line">k8s-work1   192.168.10.11:8301   alive   server  1.13.3  2         my-dc-1  default    &lt;all&gt;</span><br><span class="line">k8s-work2   192.168.10.12:8301   alive   server  1.13.3  2         my-dc-1  default    &lt;all&gt;</span><br><span class="line">tiaoban     192.168.10.100:8301  alive   client  1.13.2  2         my-dc-1  default    &lt;default&gt;</span><br></pre></td></tr></table></figure><h2 id="1459fae8"><font style="background-color:rgba(255, 255, 255, 0);">查看server节点信息</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# consul operator raft list-peers</span><br><span class="line">Node        ID                                    Address             State     Voter  RaftProtocol</span><br><span class="line">k8s-work1   322a522a-dcf5-3727-052e-0f2d65406f8d  192.168.10.11:8300  follower  true   3</span><br><span class="line">k8s-master  5db3c09a-f94d-b53f-6c9f-694beb64c1aa  192.168.10.10:8300  leader    true   3</span><br><span class="line">k8s-work2   d0e4a609-f029-cd91-1d61-63c3403b82b3  192.168.10.12:8300  follower  false  3</span><br></pre></td></tr></table></figure><h2 id="81ea3784"><font style="background-color:rgba(255, 255, 255, 0);">Consul常用HTTP API</font></h2><h2 id="3b842616"><font style="background-color:rgba(255, 255, 255, 0);">服务查询</font></h2>+ <font style="background-color:rgba(255, 255, 255, 0);">/agent/services：该端点返回在本地代理程序中注册的所有服务；</font>+ <font style="background-color:rgba(255, 255, 255, 0);">/agent/service/{service_id}：返回在本地代理上注册的单个服务实例的完整服务定义；</font>+ <font style="background-color:rgba(255, 255, 255, 0);">/agent/health/service/name/{service_name} ：通过名称检索注册的服务状态（设置了健康检查的服务）；</font>+ <font style="background-color:rgba(255, 255, 255, 0);">/agent/health/service/id/{service_id}：通过id检索注册的服务状态（设置了健康检查的服务）；</font>+ <font style="background-color:rgba(255, 255, 255, 0);">/health/service/{service_name}?passing：通过健康检查的服务(包含未设置check的service)</font><h2 id="f3bad82b"><font style="background-color:rgba(255, 255, 255, 0);">服务注册</font></h2>+ <font style="background-color:rgba(255, 255, 255, 0);">/agent/service/register：注册服务；</font><h2 id="18616023"><font style="background-color:rgba(255, 255, 255, 0);">服务删除</font></h2>+ <font style="background-color:rgba(255, 255, 255, 0);">/agent/service/deregister/{service_id}：注销服务；</font>+ <font style="background-color:rgba(255, 255, 255, 0);">/agent/service/maintenance/{service_id}：该端点将给定的服务置于“维护模式”，在维护模式下，该服务将被标记为不可用，并且不会出现在DNS或API查询中；</font><h1 id="f3bad82b-1"><font style="background-color:rgba(255, 255, 255, 0);">服务注册</font></h1>---<h2 id="15c64aa0"><font style="background-color:rgba(255, 255, 255, 0);">配置文件</font></h2><font style="background-color:rgba(255, 255, 255, 0);">新增json配置文件</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master consul.d]# cat /etc/consul.d/kube-apiserver.json </span><br><span class="line">&#123;</span><br><span class="line">    &quot;service&quot;: &#123;</span><br><span class="line">        &quot;name&quot;: &quot;traefik-tcp&quot;,</span><br><span class="line">        &quot;tags&quot;: [</span><br><span class="line">            &quot;k8s&quot;,&quot;traefik&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">        &quot;port&quot;: 9100</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">重启服务</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master consul.d]# systemctl restart consul</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">web界面查看<br></font><img src="https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738900841445-ed3d6655-6fda-49ac-88cb-19c119d5de0f.jpeg"></p><h2 id="http-api"><font style="background-color:rgba(255, 255, 255, 0);">HTTP API</font></h2><font style="background-color:rgba(255, 255, 255, 0);">注册一个name为traefik的服务</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master consul.d]# curl -X PUT -d &#x27;&#123;&quot;name&quot;: &quot;traefik&quot;,&quot;address&quot;: &quot;192.168.10.10&quot;,&quot;port&quot;: 80,&quot;tags&quot;: [&quot;k8s&quot;]&#125;&#x27; http://192.168.10.10:8500/v1/agent/service/register</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">注册带健康检查的服务</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT -d &#x27;&#123;&quot;name&quot;: &quot;traefik-metrics&quot;,&quot;address&quot;: &quot;192.168.10.10&quot;,&quot;port&quot;: 80,&quot;tags&quot;: [&quot;k8s&quot;],&quot;checks&quot;:[&#123;&quot;http&quot;:&quot;http://192.168.10.10:9100/metrics&quot;,&quot;interval&quot;:&quot;5s&quot;&#125;]&#125;&#x27; http://192.168.10.10:8500/v1/agent/service/register</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">打开管理页面查看已注册的服务<br></font><img src="https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738900841454-78a08404-76de-44b8-8f10-689d9517273f.jpeg"></p><h2 id="sdk"><font style="background-color:rgba(255, 255, 255, 0);">SDK</font></h2><font style="background-color:rgba(255, 255, 255, 0);">除了采用配置文件或者HTTP API方式注册服务外，consul也支持使用sdk包注册查询服务，目前主流的开发语法均已支持，详情参考文档：  </font>[<font style="background-color:rgba(255, 255, 255, 0);">https://developer.hashicorp.com/consul/api-docs/libraries-and-sdks</font>](https://developer.hashicorp.com/consul/api-docs/libraries-and-sdks)<h1 id="3b842616-1"><font style="background-color:rgba(255, 255, 255, 0);">服务查询</font></h1>---<h2 id="http-api-1"><font style="background-color:rgba(255, 255, 255, 0);">HTTP API</font></h2><font style="background-color:rgba(255, 255, 255, 0);">查看服务列表</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# curl -s http://192.168.10.10:8500/v1/catalog/services | jq</span><br><span class="line">&#123;</span><br><span class="line">  &quot;consul&quot;: [],</span><br><span class="line">  &quot;traefik&quot;: [</span><br><span class="line">    &quot;k8s&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;traefik-tcp&quot;: [</span><br><span class="line">    &quot;k8s&quot;,</span><br><span class="line">    &quot;traefik&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">查看服务详细信息</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# curl -s http://192.168.10.10:8500/v1/catalog/service/traefik | jq</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;ID&quot;: &quot;eda0ef7f-ca12-bbca-c84e-f88cc3664cd1&quot;,</span><br><span class="line">    &quot;Node&quot;: &quot;tiaoban&quot;,</span><br><span class="line">    &quot;Address&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">    &quot;Datacenter&quot;: &quot;my-dc-1&quot;,</span><br><span class="line">    &quot;TaggedAddresses&quot;: &#123;</span><br><span class="line">      &quot;lan&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">      &quot;lan_ipv4&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">      &quot;wan&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">      &quot;wan_ipv4&quot;: &quot;192.168.10.100&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;NodeMeta&quot;: &#123;</span><br><span class="line">      &quot;consul-network-segment&quot;: &quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;ServiceKind&quot;: &quot;&quot;,</span><br><span class="line">    &quot;ServiceID&quot;: &quot;traefik&quot;,</span><br><span class="line">    &quot;ServiceName&quot;: &quot;traefik&quot;,</span><br><span class="line">    &quot;ServiceTags&quot;: [</span><br><span class="line">      &quot;k8s&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;ServiceAddress&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">    &quot;ServiceTaggedAddresses&quot;: &#123;</span><br><span class="line">      &quot;lan_ipv4&quot;: &#123;</span><br><span class="line">        &quot;Address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">        &quot;Port&quot;: 80</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;wan_ipv4&quot;: &#123;</span><br><span class="line">        &quot;Address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">        &quot;Port&quot;: 80</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;ServiceWeights&quot;: &#123;</span><br><span class="line">      &quot;Passing&quot;: 1,</span><br><span class="line">      &quot;Warning&quot;: 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;ServiceMeta&quot;: &#123;&#125;,</span><br><span class="line">    &quot;ServicePort&quot;: 80,</span><br><span class="line">    &quot;ServiceSocketPath&quot;: &quot;&quot;,</span><br><span class="line">    &quot;ServiceEnableTagOverride&quot;: false,</span><br><span class="line">    &quot;ServiceProxy&quot;: &#123;</span><br><span class="line">      &quot;Mode&quot;: &quot;&quot;,</span><br><span class="line">      &quot;MeshGateway&quot;: &#123;&#125;,</span><br><span class="line">      &quot;Expose&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;ServiceConnect&quot;: &#123;&#125;,</span><br><span class="line">    &quot;CreateIndex&quot;: 12,</span><br><span class="line">    &quot;ModifyIndex&quot;: 12</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">健康检查</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# curl -s http://192.168.10.10:8500/v1/health/service/traefik?passing | jq</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;Node&quot;: &#123;</span><br><span class="line">      &quot;ID&quot;: &quot;eda0ef7f-ca12-bbca-c84e-f88cc3664cd1&quot;,</span><br><span class="line">      &quot;Node&quot;: &quot;tiaoban&quot;,</span><br><span class="line">      &quot;Address&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">      &quot;Datacenter&quot;: &quot;my-dc-1&quot;,</span><br><span class="line">      &quot;TaggedAddresses&quot;: &#123;</span><br><span class="line">        &quot;lan&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">        &quot;lan_ipv4&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">        &quot;wan&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">        &quot;wan_ipv4&quot;: &quot;192.168.10.100&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;Meta&quot;: &#123;</span><br><span class="line">        &quot;consul-network-segment&quot;: &quot;&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;CreateIndex&quot;: 9,</span><br><span class="line">      &quot;ModifyIndex&quot;: 11</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Service&quot;: &#123;</span><br><span class="line">      &quot;ID&quot;: &quot;traefik&quot;,</span><br><span class="line">      &quot;Service&quot;: &quot;traefik&quot;,</span><br><span class="line">      &quot;Tags&quot;: [</span><br><span class="line">        &quot;k8s&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;Address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">      &quot;TaggedAddresses&quot;: &#123;</span><br><span class="line">        &quot;lan_ipv4&quot;: &#123;</span><br><span class="line">          &quot;Address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">          &quot;Port&quot;: 80</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;wan_ipv4&quot;: &#123;</span><br><span class="line">          &quot;Address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">          &quot;Port&quot;: 80</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;Meta&quot;: null,</span><br><span class="line">      &quot;Port&quot;: 80,</span><br><span class="line">      &quot;Weights&quot;: &#123;</span><br><span class="line">        &quot;Passing&quot;: 1,</span><br><span class="line">        &quot;Warning&quot;: 1</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;EnableTagOverride&quot;: false,</span><br><span class="line">      &quot;Proxy&quot;: &#123;</span><br><span class="line">        &quot;Mode&quot;: &quot;&quot;,</span><br><span class="line">        &quot;MeshGateway&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Expose&quot;: &#123;&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;Connect&quot;: &#123;&#125;,</span><br><span class="line">      &quot;PeerName&quot;: &quot;&quot;,</span><br><span class="line">      &quot;CreateIndex&quot;: 12,</span><br><span class="line">      &quot;ModifyIndex&quot;: 12</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Checks&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;Node&quot;: &quot;tiaoban&quot;,</span><br><span class="line">        &quot;CheckID&quot;: &quot;serfHealth&quot;,</span><br><span class="line">        &quot;Name&quot;: &quot;Serf Health Status&quot;,</span><br><span class="line">        &quot;Status&quot;: &quot;passing&quot;,</span><br><span class="line">        &quot;Notes&quot;: &quot;&quot;,</span><br><span class="line">        &quot;Output&quot;: &quot;Agent alive and reachable&quot;,</span><br><span class="line">        &quot;ServiceID&quot;: &quot;&quot;,</span><br><span class="line">        &quot;ServiceName&quot;: &quot;&quot;,</span><br><span class="line">        &quot;ServiceTags&quot;: [],</span><br><span class="line">        &quot;Type&quot;: &quot;&quot;,</span><br><span class="line">        &quot;Interval&quot;: &quot;&quot;,</span><br><span class="line">        &quot;Timeout&quot;: &quot;&quot;,</span><br><span class="line">        &quot;ExposedPort&quot;: 0,</span><br><span class="line">        &quot;Definition&quot;: &#123;&#125;,</span><br><span class="line">        &quot;CreateIndex&quot;: 9,</span><br><span class="line">        &quot;ModifyIndex&quot;: 9</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">删除注册的服务</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master consul.d]# curl -X PUT http://192.168.10.10:8500/v1/agent/service/deregister/traefik</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><h2 id="74c3df45"><font style="background-color:rgba(255, 255, 255, 0);">DNS解析</font></h2><font style="background-color:rgba(255, 255, 255, 0);">DNS接口是Consul中主要的查询接口之一，另一个是HTTP接口， HTTP接口查询请查阅,Consul默认在8600端口监听DNS查询。  </font><font style="background-color:rgba(255, 255, 255, 0);">参考文档：</font>[<font style="background-color:rgba(255, 255, 255, 0);">https://developer.hashicorp.com/consul/docs/discovery/dns</font>](https://developer.hashicorp.com/consul/docs/discovery/dns)<font style="background-color:rgba(255, 255, 255, 0);">  </font><font style="background-color:rgba(255, 255, 255, 0);">要使用DNS接口， 有几种方法可以实现：  </font><font style="background-color:rgba(255, 255, 255, 0);">一是使用指定的DNS解析库， 然后指向Consul；  </font><font style="background-color:rgba(255, 255, 255, 0);">二是把Consul设置为节点的DNS服务器, 并且提供recursors配置项， 这样非Consul的查询也能被解析；  </font><font style="background-color:rgba(255, 255, 255, 0);">最后一种方法是从已有的DNS服务器上把所有consul.为域名的请求转发到consul agent上。  </font>**<font style="background-color:rgba(255, 255, 255, 0);">节点查找</font>**<font style="background-color:rgba(255, 255, 255, 0);">  </font><font style="background-color:rgba(255, 255, 255, 0);">查找节点的地址信息，查找格式：<node>.node[.datacenter].<domain>。如果datacenter不指定，默认为当前集群查询。</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# dig @192.168.10.10 -p 8600 tiaoban.node.consul ANY</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.26-RedHat-9.11.26-6.el8 &lt;&lt;&gt;&gt; @192.168.10.10 -p 8600 tiaoban.node.consul ANY</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 25684</span><br><span class="line">;; flags: qr aa rd; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;tiaoban.node.consul.           IN      ANY</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">tiaoban.node.consul.    0       IN      A       192.168.10.100</span><br><span class="line">tiaoban.node.consul.    0       IN      TXT     &quot;consul-network-segment=&quot;</span><br><span class="line"></span><br><span class="line">;; Query time: 14 msec</span><br><span class="line">;; SERVER: 192.168.10.10#8600(192.168.10.10)</span><br><span class="line">;; WHEN: 一 10月 31 10:51:10 CST 2022</span><br><span class="line">;; MSG SIZE  rcvd: 100</span><br></pre></td></tr></table></figure><p><strong><font style="background-color:rgba(255, 255, 255, 0);">服务查找</font></strong><font style="background-color:rgba(255, 255, 255, 0);"><br></font><font style="background-color:rgba(255, 255, 255, 0);">查询服务提供者。服务查询支持两种查找方法：标准和严格RFC 2782。<br></font><font style="background-color:rgba(255, 255, 255, 0);">标准查找格式：[tag.]<service>.service[.datacenter].<domain>。Tag是可选的，而且与节点查找一样，数据中心也是可选。如果没有提供Tag，就不会有过滤，如果没有数据中心，就会选择默认的数据中心。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# dig @192.168.10.10 -p 8600 traefik.service.consul SRV</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.26-RedHat-9.11.26-6.el8 &lt;&lt;&gt;&gt; @192.168.10.10 -p 8600 traefik.service.consul SRV</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 28200</span><br><span class="line">;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 3</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;traefik.service.consul.                IN      SRV</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">traefik.service.consul. 0       IN      SRV     1 1 80 c0a80a0a.addr.my-dc-1.consul.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">c0a80a0a.addr.my-dc-1.consul. 0 IN      A       192.168.10.10</span><br><span class="line">tiaoban.node.my-dc-1.consul. 0  IN      TXT     &quot;consul-network-segment=&quot;</span><br><span class="line"></span><br><span class="line">;; Query time: 13 msec</span><br><span class="line">;; SERVER: 192.168.10.10#8600(192.168.10.10)</span><br><span class="line">;; WHEN: 一 10月 31 10:53:30 CST 2022</span><br><span class="line">;; MSG SIZE  rcvd: 164</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">RFC2782 查找 格式：</font><em><font style="background-color:rgba(255, 255, 255, 0);"><service>.</font></em><font style="background-color:rgba(255, 255, 255, 0);"><protocol>.service[.datacenter][.domain]根据RFC 2782， SRV请求都应该在service和protocol前使用(_)作为前缀。避免发生DNS冲突。Protocol可以是service任何一个tag，如果service没有tag，使用tcp作为protocol。如果一旦设置了tcp，那么查询时将不会执行任何标签过滤。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 查询tag为k8s的注册服务traefik信息。</span><br><span class="line">[root@k8s-master ~]# dig @192.168.10.10 -p 8600 _traefik._k8s.service.consul SRV</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.26-RedHat-9.11.26-6.el8 &lt;&lt;&gt;&gt; @192.168.10.10 -p 8600 _traefik._k8s.service.consul SRV</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 43270</span><br><span class="line">;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 3</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;_traefik._k8s.service.consul.  IN      SRV</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">_traefik._k8s.service.consul. 0 IN      SRV     1 1 80 c0a80a0a.addr.my-dc-1.consul.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">c0a80a0a.addr.my-dc-1.consul. 0 IN      A       192.168.10.10</span><br><span class="line">tiaoban.node.my-dc-1.consul. 0  IN      TXT     &quot;consul-network-segment=&quot;</span><br><span class="line"></span><br><span class="line">;; Query time: 1 msec</span><br><span class="line">;; SERVER: 192.168.10.10#8600(192.168.10.10)</span><br><span class="line">;; WHEN: 一 10月 31 10:57:05 CST 2022</span><br><span class="line">;; MSG SIZE  rcvd: 170</span><br></pre></td></tr></table></figure><h1 id="bf9a8ea1"><font style="background-color:rgba(255, 255, 255, 0);">配置kv</font></h1>---<p><font style="background-color:rgba(255, 255, 255, 0);">consul kv 是consul的核心功能，并随consul agent一起安装。consul kv允许用户存储索引对象，尽管其主要用途是存储配置参数和元数据。<br></font><font style="background-color:rgba(255, 255, 255, 0);">consul kv 数据存储在server上，可以由任何agent（client或server）访问。consul允许在所有server之间自动复制数据，如果发生故障，拥有一定数量的server将减少数据丢失的风险。<br></font><font style="background-color:rgba(255, 255, 255, 0);">数据存储位于server上的数据目录中，为确保在完全中断的情况下不会丢失数据，可以使用 consul snapshot 命令备份数据。还可以通过 consul kv 子命令、HTTP API 和 Consul UI 访问kv存储。</font></p><h2 id="dbb0d3bb"><font style="background-color:rgba(255, 255, 255, 0);">命令行</font></h2><font style="background-color:rgba(255, 255, 255, 0);">命令行创建kv</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master consul.d]# consul kv put key1 value1</span><br><span class="line">Success! Data written to: key1</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">查看kv</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 查看所有key value数据</span><br><span class="line">[root@k8s-master consul.d]# consul kv get --recurse </span><br><span class="line">key1:value1</span><br><span class="line">key2:value2</span><br><span class="line"># 查看指定key value数据</span><br><span class="line">[root@k8s-master consul.d]# consul kv get key2</span><br><span class="line">value2</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">更新kv</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master consul.d]# consul kv put key2 v2</span><br><span class="line">Success! Data written to: key2</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">删除kv</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master consul.d]# consul kv delete key2</span><br><span class="line">Success! Deleted key: key2</span><br></pre></td></tr></table></figure><h2 id="web"><font style="background-color:rgba(255, 255, 255, 0);">web</font></h2><font style="background-color:rgba(255, 255, 255, 0);">web界面创建kv  </font>![](https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738900841944-ff641b3f-de5b-4382-b961-1c30bf857d1b.jpeg)<font style="background-color:rgba(255, 255, 255, 0);">  </font><font style="background-color:rgba(255, 255, 255, 0);">web界面查看kv  </font>![](https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738900842227-005c67d9-9bd2-4a02-9f36-e4e9aa288c32.jpeg)<h2 id="http-api-2"><font style="background-color:rgba(255, 255, 255, 0);">HTTP API</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 设置kv</span><br><span class="line">[root@k8s-master consul.d]# curl -X PUT -d &#x27;value3&#x27; http://192.168.10.10:8500/v1/kv/key3</span><br><span class="line">true</span><br><span class="line"># 查看kv</span><br><span class="line">[root@k8s-master consul.d]# curl -s http://192.168.10.10:8500/v1/kv/key3 | jq</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;LockIndex&quot;: 0,</span><br><span class="line">    &quot;Key&quot;: &quot;key3&quot;,</span><br><span class="line">    &quot;Flags&quot;: 0,</span><br><span class="line">    &quot;Value&quot;: &quot;dmFsdWUz&quot;,</span><br><span class="line">    &quot;CreateIndex&quot;: 611,</span><br><span class="line">    &quot;ModifyIndex&quot;: 611</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"># base64解码查看内容</span><br><span class="line">[root@k8s-master consul.d]# echo &quot;dmFsdWUz&quot; | base64 -d</span><br><span class="line">value3</span><br><span class="line"># 删除kv</span><br><span class="line">[root@k8s-master consul.d]# curl -X DELETE http://192.168.10.10:8500/v1/kv/key3</span><br></pre></td></tr></table></figure><h1 id="f58e1c18"><font style="background-color:rgba(255, 255, 255, 0);">访问控制</font></h1>---<p><font style="background-color:rgba(255, 255, 255, 0);">通过ACLS 来确保安全的访问 UI, API, CLI, servie 通信，Agent通信。如果想要确保数据中心安全，就需要配置ACLS。ACL核心原理是，将规则分组为策略， 然后一个或多个策略于令牌关联。</font></p><h2 id="8facd89c"><font style="background-color:rgba(255, 255, 255, 0);">启用ACL</font></h2><font style="background-color:rgba(255, 255, 255, 0);">修改consul配置文件，新增如下内容</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># acl访问控制</span><br><span class="line">acl = &#123;</span><br><span class="line">  enabled = true</span><br><span class="line">  default_policy = &quot;deny&quot; # 默认拒绝所有操作</span><br><span class="line">  enable_token_persistence = true # 持久化到磁盘，重启时重新加载</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">重启consul服务</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master consul.d]# systemctl restart consul</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">生成token</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master consul.d]# consul acl bootstrap</span><br><span class="line">AccessorID:       16a37577-f243-94fb-8770-35489870025c</span><br><span class="line">SecretID:         54a3e3fd-ea07-85a8-67e3-33107a958977</span><br><span class="line">Description:      Bootstrap Token (Global Management)</span><br><span class="line">Local:            false</span><br><span class="line">Create Time:      2022-10-27 22:56:07.654230262 +0800 CST</span><br><span class="line">Policies:</span><br><span class="line">   00000000-0000-0000-0000-000000000001 - global-management</span><br></pre></td></tr></table></figure><h2 id="046e223e"><font style="background-color:rgba(255, 255, 255, 0);">访问验证</font></h2><font style="background-color:rgba(255, 255, 255, 0);">web页面访问验证  </font>![](https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738900842237-eb42da7b-f34d-499d-9861-dd3bb7290224.jpeg)<font style="background-color:rgba(255, 255, 255, 0);">  </font><font style="background-color:rgba(255, 255, 255, 0);">api接口访问验证</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 直接获取kv提示权限拒绝</span><br><span class="line">[root@k8s-master consul.d]# curl -s http://192.168.10.10:8500/v1/kv/key3 </span><br><span class="line">rpc error making call: Permission denied: token with AccessorID &#x27;00000000-0000-0000-0000-000000000002&#x27; lacks permission &#x27;key:read&#x27; on &quot;key3&quot;[root@k8s-master consul.d]# </span><br><span class="line"># 请求头添加token访问</span><br><span class="line">[root@k8s-master consul.d]# curl -s -H &quot;X-Consul-Token:54a3e3fd-ea07-85a8-67e3-33107a958977&quot; http://192.168.10.10:8500/v1/kv/key3 | jq</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;LockIndex&quot;: 0,</span><br><span class="line">    &quot;Key&quot;: &quot;key3&quot;,</span><br><span class="line">    &quot;Flags&quot;: 0,</span><br><span class="line">    &quot;Value&quot;: &quot;dmFsdWUz&quot;,</span><br><span class="line">    &quot;CreateIndex&quot;: 611,</span><br><span class="line">    &quot;ModifyIndex&quot;: 611</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2025/03/05/2025-3-5%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2025/03/05/2025-3-5%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是第一篇文章"><a href="#这是第一篇文章" class="headerlink" title="这是第一篇文章"></a>这是第一篇文章</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>高可用部署</title>
      <link href="/2025/03/05/1.kubeadm%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
      <url>/2025/03/05/1.kubeadm%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="f1b611b1"><font style="background-color:rgba(255, 255, 255, 0);">高可用架构方案</font></h1>---<h2 id="6bdfa137"><font style="background-color:rgba(255, 255, 255, 0);">高可用架构说明</font></h2>---<table><thead><tr><th><strong><font style="background-color:rgba(255, 255, 255, 0);">核心组件</font></strong></th><th><strong><font style="background-color:rgba(255, 255, 255, 0);">高可用模式</font></strong></th><th><strong><font style="background-color:rgba(255, 255, 255, 0);">高可用实现方式</font></strong></th></tr></thead><tbody><tr><td><font style="background-color:rgba(255, 255, 255, 0);">apiserver</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">主备</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">keepalived</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">controller-manager</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">主备</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">leader election</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">scheduler</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">主备</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">leader election</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">etcd</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">集群</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">kubeadm</font></td></tr></tbody></table><ul><li><font style="background-color:rgba(255, 255, 255, 0);">apiserver 通过haproxy+keepalived实现高可用，当某个节点故障时触发keepalived vip 转移；</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">controller-manager k8s内部通过选举方式产生领导者(由–leader-elect 选型控制，默认为true)，同一时刻集群内只有一个controller-manager组件运行；</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">scheduler k8s内部通过选举方式产生领导者(由–leader-elect 选型控制，默认为true)，同一时刻集群内只有一个scheduler组件运行；</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">etcd 通过运行kubeadm方式自动创建集群来实现高可用，部署的节点数为奇数。如果剩余可用节点数量超过半数，集群可以几乎没有影响的正常工作(3节点方式最多容忍一台机器宕机)</font></li></ul><h2 id="c267defc"><font style="background-color:rgba(255, 255, 255, 0);">HAProxy+</font><font style="background-color:rgba(255, 255, 255, 0);">Keepalived方案</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">在以前我们在私有环境下创建 Kubernetes 集群时，我们需要准备一个硬件&#x2F;软件的负载均衡器来创建多控制面集群，更多的情况下我们会选择使用 HAProxy + Keepalived 来实现这个功能。一般情况下我们会在k8s集群外创建2个负载均衡器的虚拟机，然后分配一个 VIP，然后使用 VIP 为负载均衡器提供服务，通过 VIP 将流量重定向到后端的某个 Kubernetes master节点上。</font></p><p><font style="background-color:rgba(255, 255, 255, 0);">或者在所有Kubernetes master节点上部署HAProxy + Keepalived服务，实现故障切换。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738317940757-19c0d378-d69c-4d9d-bea9-19b988fceb79.jpeg"></p><h2 id="2540cb93"><font style="background-color:rgba(255, 255, 255, 0);">kube-vip方案</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">除了使用传统方式外，我们也可以通过kube-vip实现高可用。kube-vip 可以通过静态 pod 运行在控制平面节点上，这些 pod 通过ARP 对话来识别每个节点上的其他主机，所以需要在 hosts 文件中设置每个节点的 IP 地址，我们可以选择 BGP 或 ARP 来设置负载平衡器，这与 Metal LB 比较类似。在 ARP 模式下，会选出一个领导者，这个节点将继承虚拟 IP 并成为集群内负载均衡的 Leader，而在 BGP 模式下，所有节点都会通知 VIP 地址。</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738317940896-936a1802-8255-4ae3-b742-b192c9df044c.jpeg"></p><h1 id="b7a8ae3c"><font style="background-color:rgba(255, 255, 255, 0);">kube-vip 架构</font></h1>---<p><font style="background-color:rgba(255, 255, 255, 0);">kube-vip 有许多功能设计选择提供高可用性或网络功能，作为VIP&#x2F;负载平衡解决方案的一部分。</font></p><h2 id="cluster"><font style="background-color:rgba(255, 255, 255, 0);">Cluster</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">kube-vip 建立了一个多节点或多模块的集群来提供高可用性。在 ARP 模式下，会选出一个领导者，这个节点将继承虚拟 IP 并成为集群内负载均衡的领导者，而在 BGP 模式下，所有节点都会通知 VIP 地址。</font></p><p><font style="background-color:rgba(255, 255, 255, 0);">当使用 ARP 或 layer2 时，它将使用领导者选举，当然也可以使用 raft 集群技术，但这种方法在很大程度上已经被领导者选举所取代，特别是在集群中运行时。</font></p><h2 id="15c8be58"><font style="background-color:rgba(255, 255, 255, 0);">虚拟IP</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">集群中的领导者将分配 vip，并将其绑定到配置中声明的选定接口上。当领导者改变时，它将首先撤销 vip，或者在失败的情况下，vip 将直接由下一个当选的领导者分配。</font></p><p><font style="background-color:rgba(255, 255, 255, 0);">当 vip 从一个主机移动到另一个主机时，任何使用 vip 的主机将保留以前的</font><font style="background-color:rgba(255, 255, 255, 0);"> </font><font style="background-color:rgba(255, 255, 255, 0);">vip &lt;-&gt; MAC</font><font style="background-color:rgba(255, 255, 255, 0);"> </font><font style="background-color:rgba(255, 255, 255, 0);">地址映射，直到 ARP 过期（通常是30秒）并检索到一个新的</font><font style="background-color:rgba(255, 255, 255, 0);"> </font><font style="background-color:rgba(255, 255, 255, 0);">vip &lt;-&gt; MAC</font><font style="background-color:rgba(255, 255, 255, 0);"> </font><font style="background-color:rgba(255, 255, 255, 0);">映射，这可以通过使用无偿的 ARP 广播来优化。</font></p><h2 id="arp"><font style="background-color:rgba(255, 255, 255, 0);">ARP</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">kube-vip可以被配置为广播一个无偿的 arp（可选），通常会立即通知所有本地主机 vip &lt;-&gt; MAC 地址映射已经改变。当 ARP 广播被接收时，故障转移通常在几秒钟内完成。</font></p><h1 id="47b520ed"><font style="background-color:rgba(255, 255, 255, 0);">集群规划</font></h1>---<h2 id="2d507904"><font style="background-color:rgba(255, 255, 255, 0);">软件版本</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">操作系统版本：Rocky Linux release 8.8</font></p><p><font style="background-color:rgba(255, 255, 255, 0);">内核版本：4.18.0-477.21.1.el8_8.x86_64</font></p><p><font style="background-color:rgba(255, 255, 255, 0);">kubernetes版本：1.27.6</font></p><p><font style="background-color:rgba(255, 255, 255, 0);">containerd版本：1.6.22</font></p><p><font style="background-color:rgba(255, 255, 255, 0);">kube-vip版本：0.6.0</font></p><h2 id="c5b040c2"><font style="background-color:rgba(255, 255, 255, 0);">主机IP规划</font></h2>| **<font style="background-color:rgba(255, 255, 255, 0);">主机名</font>** | **<font style="background-color:rgba(255, 255, 255, 0);">ip</font>** | **<font style="background-color:rgba(255, 255, 255, 0);">主机配置</font>** | **<font style="background-color:rgba(255, 255, 255, 0);">用途</font>** || --- | --- | --- | --- || <font style="background-color:rgba(255, 255, 255, 0);">master1</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.151</font> | <font style="background-color:rgba(255, 255, 255, 0);">2C2G</font> | <font style="background-color:rgba(255, 255, 255, 0);">control-plane</font> || <font style="background-color:rgba(255, 255, 255, 0);">master2</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.152</font> | <font style="background-color:rgba(255, 255, 255, 0);">2C2G</font> | <font style="background-color:rgba(255, 255, 255, 0);">control-plane</font> || <font style="background-color:rgba(255, 255, 255, 0);">master3</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.153</font> | <font style="background-color:rgba(255, 255, 255, 0);">2C2G</font> | <font style="background-color:rgba(255, 255, 255, 0);">control-plane</font> || <font style="background-color:rgba(255, 255, 255, 0);">work1</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.154</font> | <font style="background-color:rgba(255, 255, 255, 0);">2C2G</font> | <font style="background-color:rgba(255, 255, 255, 0);">work</font> || <font style="background-color:rgba(255, 255, 255, 0);">work2</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.155</font> | <font style="background-color:rgba(255, 255, 255, 0);">2C2G</font> | <font style="background-color:rgba(255, 255, 255, 0);">work</font> || <font style="background-color:rgba(255, 255, 255, 0);">work3</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.156</font> | <font style="background-color:rgba(255, 255, 255, 0);">2C2G</font> | <font style="background-color:rgba(255, 255, 255, 0);">work</font> || <font style="background-color:rgba(255, 255, 255, 0);">VIP</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.150</font> | <font style="background-color:rgba(255, 255, 255, 0);">/</font> | <font style="background-color:rgba(255, 255, 255, 0);">虚拟IP在控制节点上浮动</font> || <font style="background-color:rgba(255, 255, 255, 0);">tiaoban</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.100</font> | <font style="background-color:rgba(255, 255, 255, 0);">2C2G</font> | <font style="background-color:rgba(255, 255, 255, 0);">客户端，连接管理K8S集群</font> |<h1 id="60fb03bc"><font style="background-color:rgba(255, 255, 255, 0);">基础环境与软件准备</font></h1>---<blockquote><p><font style="background-color:rgba(255, 255, 255, 0);">以下操作在所有节点都执行</font></p></blockquote><h2 id="d77c61bf"><font style="background-color:rgba(255, 255, 255, 0);">修改主机名与hosts文件</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname master1</span><br><span class="line">cat &gt; /etc/hosts &lt;&lt; EOF </span><br><span class="line">192.168.10.151   master1</span><br><span class="line">192.168.10.152   master2</span><br><span class="line">192.168.10.153   master3</span><br><span class="line">192.168.10.154   work1</span><br><span class="line">192.168.10.155   work2</span><br><span class="line">192.168.10.156   work3</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="a0b09c93"><font style="background-color:rgba(255, 255, 255, 0);">验证mac地址uuid</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">保证各节点mac和uuid唯一，防止克隆主机出现网络异常问题</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /sys/class/net/ens33/address</span><br><span class="line">cat /sys/class/dmi/id/product_uuid </span><br></pre></td></tr></table></figure><h2 id="16c50660"><font style="background-color:rgba(255, 255, 255, 0);">配置时间同步</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install chrony</span><br><span class="line">systemctl  start chronyd</span><br><span class="line">systemctl  enable chronyd</span><br><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line">chronyc sourcestats -v </span><br><span class="line">date</span><br></pre></td></tr></table></figure><blockquote><p><font style="background-color:rgba(255, 255, 255, 0);">也可以在内网环境其中一台主机启动chronyd服务，其他主机配置chronyd服务地址</font></p></blockquote><h2 id="1663c88c"><font style="background-color:rgba(255, 255, 255, 0);">关闭防火墙和selinux</font></h2>---<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl  disable firewalld</span><br><span class="line">setenforce  0</span><br><span class="line">sed  -i &#x27;s/enforcing/disabled/g&#x27; /etc/selinux/config</span><br><span class="line">grep  SELINUX= /etc/selinux/config </span><br></pre></td></tr></table></figure><h2 id="7c54c7f3"><font style="background-color:rgba(255, 255, 255, 0);">关闭swap分区</font></h2>---<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a </span><br><span class="line">sed -i &#x27;/ swap / s/^(.*)$/#\1/g&#x27; /etc/fstab  </span><br></pre></td></tr></table></figure><h2 id="825e7bd1"><font style="background-color:rgba(255, 255, 255, 0);">修改内核相关参数</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">最大限度使用物理内存，</font><font style="background-color:rgba(255, 255, 255, 0);">bridge 设备在二层转发时也去调用 iptables 配置的三层规则，开启数据包转发。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/sysctl.d/kubernetes.conf &lt;&lt; EOF</span><br><span class="line">vm.swappiness = 0</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sysctl -p /etc/sysctl.d/kubernetes.conf</span><br></pre></td></tr></table></figure><h2 id="927d0791"><font style="background-color:rgba(255, 255, 255, 0);">配置yum源</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">配置阿里源</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF </span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">如果阿里源异常，可切换配置清华源</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF </span><br><span class="line">[kubernetes]</span><br><span class="line">name=kubernetes</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/kubernetes/yum/repos/kubernetes-el7-$basearch</span><br><span class="line">enabled=1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="5e11d2ce"><font style="background-color:rgba(255, 255, 255, 0);">配置ipvs模块功能</font></h2>---<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install ipset ipvsadm </span><br><span class="line"></span><br><span class="line">cat &gt; /etc/sysctl.d/ipvs.modules &lt;&lt;EOF </span><br><span class="line">#!/bin/bash</span><br><span class="line">modprobe -- ip_vs</span><br><span class="line">modprobe -- ip_vs_rr</span><br><span class="line">modprobe -- ip_vs_wrr</span><br><span class="line">modprobe -- ip_vs_sh</span><br><span class="line">modprobe -- nf_conntrack</span><br><span class="line">modprobe -- br_netfilter</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">chmod 755 /etc/sysctl.d/ipvs.modules &amp;&amp; bash </span><br><span class="line"></span><br><span class="line">/etc/sysctl.d/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack </span><br><span class="line">ip_vs_sh               20480  0</span><br><span class="line">ip_vs_wrr              16384  0</span><br><span class="line">ip_vs_rr               16384  0</span><br><span class="line">ip_vs                 180224  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr</span><br><span class="line">nf_conntrack_netlink    53248  0</span><br><span class="line">nf_conntrack          176128  5 xt_conntrack,nf_nat,nf_conntrack_netlink,xt_MASQUERADE,ip_vs</span><br><span class="line">nf_defrag_ipv6         24576  2 nf_conntrack,ip_vs</span><br><span class="line">nf_defrag_ipv4         16384  1 nf_conntrack</span><br><span class="line">nfnetlink              20480  4 nft_compat,nf_conntrack_netlink,nf_tables</span><br><span class="line">libcrc32c              16384  5 nf_conntrack,nf_nat,nf_tables,xfs,ip_vs</span><br><span class="line"></span><br><span class="line"># 添加开机自动加载模块</span><br><span class="line">echo &quot;/etc/sysctl.d/ipvs.modules&quot; &gt;&gt; /etc/rc.local</span><br><span class="line">chmod +x /etc/rc.local</span><br><span class="line"># 启用网桥过滤器模块</span><br><span class="line">echo 1 &gt; /proc/sys/net/bridge/bridge-nf-call-iptables</span><br><span class="line">echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><h2 id="680cf1ef"><font style="background-color:rgba(255, 255, 255, 0);">安装命令自动补全工具</font></h2>---<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install bash-completion </span><br><span class="line">source /etc/profile.d/bash_completion.sh </span><br></pre></td></tr></table></figure><h2 id="752286ce"><font style="background-color:rgba(255, 255, 255, 0);">container</font><font style="background-color:rgba(255, 255, 255, 0);">安装</font></h2>---<h3 id="56f5cf9c"><font style="background-color:rgba(255, 255, 255, 0);">安装软件包</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 安装依赖</span><br><span class="line">dnf install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"># 添加yum源</span><br><span class="line">dnf config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"># 查看可安装的containerd版本</span><br><span class="line">dnf list containerd.io.x86_64 --showduplicates | sort -r</span><br><span class="line"></span><br><span class="line"># 安装1.6.22版本containerd</span><br><span class="line">dnf install -y containerd.io-1.6.22-3.1.el8.x86_64</span><br><span class="line"></span><br><span class="line"># 查看版本信息</span><br><span class="line">containerd -v</span><br></pre></td></tr></table></figure><h3 id="da6011d1"><font style="background-color:rgba(255, 255, 255, 0);">配置container</font></h3>**<font style="background-color:rgba(255, 255, 255, 0);">生成默认配置文件</font>**<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">containerd config default &gt; /etc/containerd/config.toml</span><br></pre></td></tr></table></figure><p><strong><font style="background-color:rgba(255, 255, 255, 0);">替换镜像源</font></strong></p><p><font style="background-color:rgba(255, 255, 255, 0);">由于国内环境原因我们需要将 sandbox_image 镜像源设置为阿里云google_containers镜像源。把sandbox_image &#x3D; “k8s.gcr.io&#x2F;pause:3.6”修改为：sandbox_image&#x3D;“registry.aliyuncs.com&#x2F;google_containers&#x2F;pause:3.6”</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/sandbox_image\ =.*/sandbox_image\ =\ &quot;registry.aliyuncs.com\/google_containers\/pause:3.6&quot;/g&#x27; /etc/containerd/config.toml|grep sandbox_image</span><br></pre></td></tr></table></figure><p><strong><font style="background-color:rgba(255, 255, 255, 0);">配置cgroup驱动器</font></strong></p><p><font style="background-color:rgba(255, 255, 255, 0);">在 Linux 上，控制组（CGroup）用于限制分配给进程的资源。<br></font><font style="background-color:rgba(255, 255, 255, 0);">kubelet 和底层容器运行时都需要对接控制组 为 Pod 和容器管理资源 ，如 CPU、内存这类资源设置请求和限制。 若要对接控制组（CGroup），kubelet 和容器运行时需要使用一个 cgroup 驱动。 关键的一点是 kubelet 和容器运行时需使用相同的 cgroup 驱动并且采用相同的配置。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/SystemdCgroup\ =\ false/SystemdCgroup\ =\ true/g&#x27; /etc/containerd/config.toml</span><br></pre></td></tr></table></figure><p><strong><font style="background-color:rgba(255, 255, 255, 0);">配置国内镜像加速地址</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 修改container配置，指定registry配置从文件读取</span><br><span class="line">vim /etc/containerd/config.toml</span><br><span class="line">    [plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry]</span><br><span class="line">      config_path = &quot;/etc/containerd/certs.d&quot;</span><br><span class="line"></span><br><span class="line"># 创建配置文件目录</span><br><span class="line">mkdir -p /etc/containerd/certs.d/docker.io</span><br><span class="line"></span><br><span class="line"># 新增加速配置</span><br><span class="line">cat &gt; /etc/containerd/certs.d/docker.io/hosts.toml &lt;&lt; EOF</span><br><span class="line">server = &quot;https://docker.io&quot;</span><br><span class="line">[host.&quot;https://o2j0mc5x.mirror.aliyuncs.com&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span><br><span class="line">server = &quot;https://k8s.gcr.io&quot;</span><br><span class="line">[host.&quot;https://gcr.mirrors.ustc.edu.cn/google-containers/&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span><br><span class="line">server = &quot;https://quay.io&quot;</span><br><span class="line">[host.&quot;https://mirror.ccs.tencentyun.com&quot;]</span><br><span class="line">  capabilities = [&quot;pull&quot;, &quot;resolve&quot;]</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="E4Q5q"><font style="background-color:rgba(255, 255, 255, 0);">启动 container服务</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable containerd --now</span><br></pre></td></tr></table></figure><h3 id="527bcc5b"><font style="background-color:rgba(255, 255, 255, 0);">安装配置crictl</font></h3><font style="background-color:rgba(255, 255, 255, 0);">crictl 是 CRI 兼容的容器运行时命令行接口，和containerd无关，由Kubernetes提供，可以使用它来检查和调试 k8s 节点上的容器运行时和应用程序。</font><p><font style="background-color:rgba(255, 255, 255, 0);">下载地址：<a href="https://github.com/kubernetes-sigs/cri-tools/releases">https://github.com/kubernetes-sigs/cri-tools/releases</a></font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 下载</span><br><span class="line">wget https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.27.1/crictl-v1.27.1-linux-amd64.tar.gz</span><br><span class="line"># 解压</span><br><span class="line">tar -zxvf crictl-v1.27.1-linux-amd64.tar.gz -C /usr/local/bin</span><br><span class="line"># 配置</span><br><span class="line">cat &gt; /etc/crictl.yaml &lt;&lt; EOF</span><br><span class="line">runtime-endpoint: &quot;unix:///run/containerd/containerd.sock&quot;</span><br><span class="line">image-endpoint: &quot;unix:///run/containerd/containerd.sock&quot;</span><br><span class="line">timeout: 0</span><br><span class="line">debug: false</span><br><span class="line">pull-image-on-create: false</span><br><span class="line">disable-pull-on-run: false</span><br><span class="line">EOF</span><br><span class="line"># 验证</span><br><span class="line">crictl version</span><br></pre></td></tr></table></figure><h3 id="UomHm"><font style="background-color:rgba(255, 255, 255, 0);">安装配置</font><font style="background-color:rgba(255, 255, 255, 0);">nerdctl(建议)</font></h3><font style="background-color:rgba(255, 255, 255, 0);">containerd虽然可直接提供给终端用户直接使用，也提供了命令行工具(ctr)，但并不是很友好，所以nerdctl应运而生，它也是containerd的命令行工具，支持docker cli关于容器生命周期管理的所有命令，并且支持docker compose (nerdctl compose up)</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 下载</span><br><span class="line">wget https://github.com/containerd/nerdctl/releases/download/v1.5.0/nerdctl-1.5.0-linux-amd64.tar.gz</span><br><span class="line"># 解压</span><br><span class="line">tar -zxvf nerdctl-1.5.0-linux-amd64.tar.gz </span><br><span class="line"># 复制文件</span><br><span class="line">cp nerdctl /usr/bin/</span><br><span class="line"># 配置 nerdctl 参数自动补齐</span><br><span class="line">echo &#x27;source &lt;(nerdctl completion bash)&#x27; &gt;&gt; /etc/profile</span><br><span class="line">source /etc/profile</span><br><span class="line"># 验证</span><br><span class="line">nerdctl -v</span><br></pre></td></tr></table></figure><h2 id="8dd46c64"><font style="background-color:rgba(255, 255, 255, 0);">安装k8s软件包并配置</font></h2>---<ul><li><font style="background-color:rgba(255, 255, 255, 0);">安装软件包</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -y kubelet kubeadm kubectl </span><br><span class="line"># 默认安装最新版本，如果需要安装老版本，使用如下命令</span><br><span class="line">yum list kubeadm --showduplicates | sort -r</span><br><span class="line">yum install -y kubelet-1.27.6 kubeadm-1.27.6 kubectl-1.27.6</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">指定kubelet的容器运行时并启动。</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crictl config runtime-endpoint unix:///run/containerd/containerd.sock</span><br><span class="line">systemctl enable kubelet --now</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">kubectl命令补全</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;source &lt;(kubectl completion bash)&quot; &gt;&gt; ~/.bash_profile </span><br><span class="line">source ~/.bash_profile </span><br></pre></td></tr></table></figure><h1 id="6f342ec9"><font style="background-color:rgba(255, 255, 255, 0);">VIP配置(kube-vip)</font></h1>---<blockquote><p><font style="background-color:rgba(255, 255, 255, 0);">以下操作在master1节点执行</font></p></blockquote><h2 id="88210852"><font style="background-color:rgba(255, 255, 255, 0);">准备工作</font></h2><font style="background-color:rgba(255, 255, 255, 0);">我们使用的vip是192.168.10.150</font><p><font style="background-color:rgba(255, 255, 255, 0);">网卡名称是ens160</font></p><p><font style="background-color:rgba(255, 255, 255, 0);">kube-vip使用arp模式</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# mkdir -p /etc/kubernetes/manifests</span><br><span class="line">[root@master1 ~]# export VIP=192.168.10.150</span><br><span class="line">[root@master1 ~]# export INTERFACE=ens160</span><br><span class="line">[root@master1 ~]# export KVVERSION=v0.8.2</span><br></pre></td></tr></table></figure><h2 id="ea49435f"><font style="background-color:rgba(255, 255, 255, 0);">生成配置文件</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">获取 kube-vip 的 docker 镜像，并在 &#x2F;etc&#x2F;kuberentes&#x2F;manifests 中设置静态 pod 的 yaml 资源清单文件，这样 Kubernetes 就会自动在每个控制平面节点上部署 kube-vip 的 pod 了。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# alias kube-vip=&quot;ctr image pull ghcr.io/kube-vip/kube-vip:$KVVERSION; ctr run --rm --net-host ghcr.io/kube-vip/kube-vip:$KVVERSION vip /kube-vip&quot;</span><br><span class="line">[root@master1 ~]# kube-vip manifest pod \</span><br><span class="line">    --interface $INTERFACE \</span><br><span class="line">    --address $VIP \</span><br><span class="line">    --controlplane \</span><br><span class="line">    --services \</span><br><span class="line">    --arp \</span><br><span class="line">    --leaderElection | tee /etc/kubernetes/manifests/kube-vip.yaml</span><br><span class="line"># 生成文件如下所示：</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: kube-vip</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  containers:</span><br><span class="line">  - args:</span><br><span class="line">    - manager</span><br><span class="line">    env:</span><br><span class="line">    - name: vip_arp</span><br><span class="line">      value: &quot;true&quot;</span><br><span class="line">    - name: port</span><br><span class="line">      value: &quot;6443&quot;</span><br><span class="line">    - name: vip_nodename</span><br><span class="line">      valueFrom:</span><br><span class="line">        fieldRef:</span><br><span class="line">          fieldPath: spec.nodeName</span><br><span class="line">    - name: vip_interface</span><br><span class="line">      value: ens160</span><br><span class="line">    - name: vip_cidr</span><br><span class="line">      value: &quot;32&quot;</span><br><span class="line">    - name: dns_mode</span><br><span class="line">      value: first</span><br><span class="line">    - name: cp_enable</span><br><span class="line">      value: &quot;true&quot;</span><br><span class="line">    - name: cp_namespace</span><br><span class="line">      value: kube-system</span><br><span class="line">    - name: svc_enable</span><br><span class="line">      value: &quot;true&quot;</span><br><span class="line">    - name: svc_leasename</span><br><span class="line">      value: plndr-svcs-lock</span><br><span class="line">    - name: vip_leaderelection</span><br><span class="line">      value: &quot;true&quot;</span><br><span class="line">    - name: vip_leasename</span><br><span class="line">      value: plndr-cp-lock</span><br><span class="line">    - name: vip_leaseduration</span><br><span class="line">      value: &quot;5&quot;</span><br><span class="line">    - name: vip_renewdeadline</span><br><span class="line">      value: &quot;3&quot;</span><br><span class="line">    - name: vip_retryperiod</span><br><span class="line">      value: &quot;1&quot;</span><br><span class="line">    - name: address</span><br><span class="line">      value: 192.168.10.150</span><br><span class="line">    - name: prometheus_server</span><br><span class="line">      value: :2112</span><br><span class="line">    image: ghcr.io/kube-vip/kube-vip:v0.8.2</span><br><span class="line">    imagePullPolicy: IfNotPresent</span><br><span class="line">    name: kube-vip</span><br><span class="line">    resources: &#123;&#125;</span><br><span class="line">    securityContext:</span><br><span class="line">      capabilities:</span><br><span class="line">        add:</span><br><span class="line">        - NET_ADMIN</span><br><span class="line">        - NET_RAW</span><br><span class="line">    volumeMounts:</span><br><span class="line">    - mountPath: /etc/kubernetes/admin.conf</span><br><span class="line">      name: kubeconfig</span><br><span class="line">  hostAliases:</span><br><span class="line">  - hostnames:</span><br><span class="line">    - kubernetes</span><br><span class="line">    ip: 127.0.0.1</span><br><span class="line">  hostNetwork: true</span><br><span class="line">  volumes:</span><br><span class="line">  - hostPath:</span><br><span class="line">      path: /etc/kubernetes/admin.conf</span><br><span class="line">    name: kubeconfig</span><br><span class="line">status: &#123;&#125;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">当执行完kubeadm init后，kubelet会去加载这里面的yaml创建kube-vip容器。</font></p><h2 id="cce0e451"><font style="background-color:rgba(255, 255, 255, 0);">拷贝至其他master节点</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">所有master节点都需要部署一个kube-vip，我们只需要将yaml文件存放在&#x2F;etc&#x2F;kubernetes&#x2F;manifests&#x2F;目录下，kubelet启动时会自动加载资源清单并创建pod。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# scp /etc/kubernetes/manifests/kube-vip.yaml master2:/etc/kubernetes/manifests/kube-vip.yaml</span><br><span class="line">[root@master1 ~]# scp /etc/kubernetes/manifests/kube-vip.yaml master3:/etc/kubernetes/manifests/kube-vip.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s#path: /etc/kubernetes/admin.conf#path: /etc/kubernetes/super-admin.conf#&#x27; \</span><br><span class="line">          /etc/kubernetes/manifests/kube-vip.yaml</span><br></pre></td></tr></table></figure><h1 id="9845b730"><font style="background-color:rgba(255, 255, 255, 0);">VIP配置(keepalived+haproxy)</font></h1>---<p><font style="background-color:rgba(255, 255, 255, 0);">以下操作在所有master节点执行</font></p><h2 id="bbd75de9"><font style="background-color:rgba(255, 255, 255, 0);">haproxy配置</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">安装haproxy</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# dnf -y install haproxy</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">编辑配置文件，所有master节点配置一样。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# vim /etc/haproxy/haproxy.cfg</span><br><span class="line">global</span><br><span class="line">    log         127.0.0.1 local2</span><br><span class="line">    pidfile     /var/run/haproxy.pid</span><br><span class="line">    maxconn     4000</span><br><span class="line">defaults</span><br><span class="line">    mode                    http</span><br><span class="line">    log                     global</span><br><span class="line">    option                  dontlognull</span><br><span class="line">    option http-server-close</span><br><span class="line">    option                  redispatch</span><br><span class="line">    retries                 3</span><br><span class="line">    timeout http-request    10s</span><br><span class="line">    timeout queue           1m</span><br><span class="line">    timeout connect         10s</span><br><span class="line">    timeout client          1m</span><br><span class="line">    timeout server          1m</span><br><span class="line">    timeout http-keep-alive 10s</span><br><span class="line">    timeout check           10s</span><br><span class="line">    maxconn                 3000</span><br><span class="line"></span><br><span class="line">listen admin_stats</span><br><span class="line">    bind    *:8888    #监听的ip端口号</span><br><span class="line">    stats   enable</span><br><span class="line">    stats   refresh 30s   #统计页面自动刷新时间</span><br><span class="line">    stats   uri /admin    #访问的uri   ip:8080/admin</span><br><span class="line">    stats   realm haproxy</span><br><span class="line">    stats   auth admin:Miaohua123!  #认证用户名和密码</span><br><span class="line">    stats   hide-version   #隐藏HAProxy的版本号</span><br><span class="line">    stats   admin if TRUE   #管理界面，如果认证成功了，可通过webui管理节点  </span><br><span class="line"></span><br><span class="line">frontend  kubernetes-apiserver</span><br><span class="line">    mode tcp</span><br><span class="line">    bind *:9443</span><br><span class="line">    # bind *:443 ssl # To be completed ....</span><br><span class="line">    default_backend             kubernetes-apiserver</span><br><span class="line"></span><br><span class="line">backend kubernetes-apiserver</span><br><span class="line">    mode        tcp</span><br><span class="line">    balance     roundrobin</span><br><span class="line"># k8s-apiservers backend</span><br><span class="line">    server master1 192.168.10.151:6443 check</span><br><span class="line">    server master2 192.168.10.152:6443 check</span><br><span class="line">    server master3 192.168.10.153:6443 check</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">启动服务并验证</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# systemctl start haproxy.service </span><br><span class="line">[root@master1 ~]# systemctl enable haproxy.service </span><br><span class="line">[root@master1 ~]# ss -tnlp | grep haproxy</span><br><span class="line">LISTEN    0         3000               0.0.0.0:8888             0.0.0.0:*        users:((&quot;haproxy&quot;,pid=7062,fd=6))                                              </span><br><span class="line">LISTEN    0         3000               0.0.0.0:9443             0.0.0.0:*        users:((&quot;haproxy&quot;,pid=7062,fd=8)) </span><br></pre></td></tr></table></figure><h2 id="fff6cb90"><font style="background-color:rgba(255, 255, 255, 0);">keepalived配置</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">安装keepalived服务</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# dnf -y install keepalived</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">添加keepalived配置文件，master1节点内容如下。master2节点state改为BACKUP，priority改为99。master3节点state改为BACKUP，priority改为98。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">global_defs &#123;</span><br><span class="line">   script_user root</span><br><span class="line">   enable_script_security</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script chk_haproxy &#123;</span><br><span class="line">    script &quot;/etc/keepalived/check.sh&quot;</span><br><span class="line">    interval 1</span><br><span class="line">    weight -2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">  state MASTER # 实例类型</span><br><span class="line">  interface ens33 # 网卡名称</span><br><span class="line">  virtual_router_id 201</span><br><span class="line">  priority 100 # 优先级</span><br><span class="line">  advert_int 1</span><br><span class="line"></span><br><span class="line">  virtual_ipaddress &#123;</span><br><span class="line">    192.168.10.150/32</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  authentication &#123;</span><br><span class="line">    auth_type PASS</span><br><span class="line">    auth_pass 1111</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  track_script &#123;</span><br><span class="line">      chk_haproxy</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">添加服务检测脚本，如果containerd进程停止则进行故障切换</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# vim /etc/keepalived/check.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">if systemctl is-active --quiet containerd; then</span><br><span class="line">    exit 0</span><br><span class="line">else</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line">[root@master1 ~]# chmod +x /etc/keepalived/check.sh</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">启动服务并验证</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# systemctl start keepalived.service </span><br><span class="line">[root@master1 ~]# systemctl enable keepalived</span><br><span class="line">[root@master1 ~]# ip a | grep 192.168.10</span><br><span class="line">    inet 192.168.10.151/24 brd 192.168.10.255 scope global ens33</span><br><span class="line">    inet 192.168.10.150/32 scope global ens33</span><br></pre></td></tr></table></figure><h1 id="ede357c3"><font style="background-color:rgba(255, 255, 255, 0);">初始化master节点</font></h1>---<blockquote><p><font style="background-color:rgba(255, 255, 255, 0);">以下操作在master1节点执行</font></p></blockquote><h2 id="575087eb"><font style="background-color:rgba(255, 255, 255, 0);">配置集群参数</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">获取默认的初始化参数文件</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# kubeadm config print init-defaults &gt; kubeadm-conf.yaml</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">修改配置文件</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# cat kubeadm-conf.yaml</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">bootstrapTokens:</span><br><span class="line">- groups:</span><br><span class="line">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class="line">  token: abcdef.0123456789abcdef</span><br><span class="line">  ttl: 24h0m0s</span><br><span class="line">  usages:</span><br><span class="line">  - signing</span><br><span class="line">  - authentication</span><br><span class="line">kind: InitConfiguration</span><br><span class="line">localAPIEndpoint:</span><br><span class="line">  advertiseAddress: 192.168.10.151  # 指定当前master1节点IP</span><br><span class="line">  bindPort: 6443 # 当前master1节点端口</span><br><span class="line">nodeRegistration:</span><br><span class="line">  criSocket: unix:///run/containerd/containerd.sock # 使用containerd的socket地址</span><br><span class="line">  imagePullPolicy: IfNotPresent</span><br><span class="line">  name: master1 # 节点主机名</span><br><span class="line">  taints: null</span><br><span class="line">---</span><br><span class="line">apiServer:</span><br><span class="line">  extraArgs:</span><br><span class="line">    authorization-mode: Node,RBAC</span><br><span class="line">  timeoutForControlPlane: 4m0s</span><br><span class="line">  certSANs:  # 添加其他master节点的相关信息</span><br><span class="line">  - 127.0.0.1</span><br><span class="line">  - master1</span><br><span class="line">  - master2</span><br><span class="line">  - master3</span><br><span class="line">  - 192.168.10.150</span><br><span class="line">  - 192.168.10.151</span><br><span class="line">  - 192.168.10.152</span><br><span class="line">  - 192.168.10.153</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class="line">certificatesDir: /etc/kubernetes/pki</span><br><span class="line">clusterName: kubernetes</span><br><span class="line">controllerManager: &#123;&#125;</span><br><span class="line">dns: &#123;&#125;</span><br><span class="line">etcd:</span><br><span class="line">  local:</span><br><span class="line">    dataDir: /var/lib/etcd</span><br><span class="line">imageRepository: registry.aliyuncs.com/google_containers # 阿里云镜像</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: 1.27.6 # k8s版本</span><br><span class="line">controlPlaneEndpoint: 192.168.10.150:6443  # 设置控制平面Endpoint地址和端口</span><br><span class="line">networking:</span><br><span class="line">  dnsDomain: cluster.local</span><br><span class="line">  serviceSubnet: 10.96.0.0/12</span><br><span class="line">  podSubnet: 10.244.0.0/16  # 指定 pod 子网</span><br><span class="line">scheduler: &#123;&#125;</span><br><span class="line">---</span><br><span class="line"># 指定kube-proxy基于ipvs模式</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">kind:  KubeProxyConfiguration</span><br><span class="line">mode: ipvs</span><br><span class="line">---</span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">authentication:</span><br><span class="line">  anonymous:</span><br><span class="line">    enabled: false</span><br><span class="line">  webhook:</span><br><span class="line">    cacheTTL: 0s</span><br><span class="line">    enabled: true</span><br><span class="line">  x509:</span><br><span class="line">    clientCAFile: /etc/kubernetes/pki/ca.crt</span><br><span class="line">authorization:</span><br><span class="line">  mode: Webhook</span><br><span class="line">  webhook:</span><br><span class="line">    cacheAuthorizedTTL: 0s</span><br><span class="line">    cacheUnauthorizedTTL: 0s</span><br><span class="line">cgroupDriver: systemd   # 指定cgroup驱动器为systemd模式</span><br><span class="line">clusterDNS:</span><br><span class="line">- 10.96.0.10</span><br><span class="line">clusterDomain: cluster.local</span><br><span class="line">cpuManagerReconcilePeriod: 0s</span><br><span class="line">evictionPressureTransitionPeriod: 0s</span><br><span class="line">fileCheckFrequency: 0s</span><br><span class="line">healthzBindAddress: 127.0.0.1</span><br><span class="line">healthzPort: 10248</span><br><span class="line">httpCheckFrequency: 0s</span><br><span class="line">imageMinimumGCAge: 0s</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">logging: &#123;&#125;</span><br><span class="line">memorySwap: &#123;&#125;</span><br><span class="line">nodeStatusReportFrequency: 0s</span><br><span class="line">nodeStatusUpdateFrequency: 0s</span><br><span class="line">rotateCertificates: true</span><br><span class="line">runtimeRequestTimeout: 0s</span><br><span class="line">shutdownGracePeriod: 0s</span><br><span class="line">shutdownGracePeriodCriticalPods: 0s</span><br><span class="line">staticPodPath: /etc/kubernetes/manifests</span><br><span class="line">streamingConnectionIdleTimeout: 0s</span><br><span class="line">syncFrequency: 0s</span><br><span class="line">volumeStatsAggPeriod: 0s</span><br></pre></td></tr></table></figure><h2 id="aec284f8"><font style="background-color:rgba(255, 255, 255, 0);">拉取镜像</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">将master1节点的kubeadm-conf.yaml复制到其他master节点，所有master节点都提前执行</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# kubeadm config images pull --config kubeadm-conf.yaml</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-apiserver:v1.27.6</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-controller-manager:v1.27.6</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-scheduler:v1.27.6</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/kube-proxy:v1.27.6</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/pause:3.9</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/etcd:3.5.7-0</span><br><span class="line">[config/images] Pulled registry.aliyuncs.com/google_containers/coredns:v1.10.1</span><br><span class="line"># CRI sandbox(pause) image默认使用registry.k8s.io/pause:3.6，由于网络原因无法拉取，直接改为阿里镜像标签即可。</span><br><span class="line">[root@master1 ~]# nerdctl -n k8s.io tag registry.aliyuncs.com/google_containers/pause:3.9 registry.k8s.io/pause:3.6</span><br></pre></td></tr></table></figure><h2 id="5fa25176"><font style="background-color:rgba(255, 255, 255, 0);">集群初始化</font></h2>---<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# kubeadm init --upload-certs --config=kubeadm-conf.yaml </span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, if you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  export KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">You can now join any number of the control-plane node running the following command on each as root:</span><br><span class="line"></span><br><span class="line">  kubeadm join 192.168.10.150:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:4f8a53db87e99a4f3e8512169b7269ef2e28779e4602c0c3df898c645973c88c \</span><br><span class="line">        --control-plane --certificate-key efde545c8ea984be7ce9449ea1e77eb44659f1708001be512b7e01f70cf568b7</span><br><span class="line"></span><br><span class="line">Please note that the certificate-key gives access to cluster sensitive data, keep it secret!</span><br><span class="line">As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use</span><br><span class="line">&quot;kubeadm init phase upload-certs --upload-certs&quot; to reload certs afterward.</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 192.168.10.150:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:4f8a53db87e99a4f3e8512169b7269ef2e28779e4602c0c3df898c645973c88c</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">–upload-certs 标志用来将在所有控制平面实例之间的共享证书上传到集群。然后根据安装提示拷贝 kubeconfig 文件</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">如果配置问题导致集群初始化失败，可重置集群再次初始化：</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# kubeadm reset</span><br><span class="line">[root@master1 ~]# ipvsadm --clear</span><br><span class="line">[root@master1 ~]# rm -rf $HOME/.kube/config</span><br></pre></td></tr></table></figure><h2 id="c238630b"><font style="background-color:rgba(255, 255, 255, 0);">根据提示配置环境变量</font></h2>---<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# mkdir -p $HOME/.kube </span><br><span class="line">[root@master1 ~]# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config </span><br><span class="line">[root@master1 ~]# chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line">[root@master1 ~]# echo &quot;export KUBECONFIG=/etc/kubernetes/admin.conf&quot; &gt;&gt; ~/.bash_profile</span><br><span class="line">[root@tiaoban ~]# source ~/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="154df728"><font style="background-color:rgba(255, 255, 255, 0);">安装flannel网络</font></h2>---<ul><li><font style="background-color:rgba(255, 255, 255, 0);">下载资源清单配置文件</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">创建资源</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# kubectl apply -f kube-flannel.yml</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">如果镜像不能正常拉取，所有节点需提前导入镜像，并修改yaml文件镜像拉取策略</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imagePullPolicy: IfNotPresent</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">镜像导入与查询</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@work3 ~]# ctr -n=k8s.io image import flannel.tar </span><br><span class="line">unpacking docker.io/flannel/flannel:v0.22.1 (sha256:0b78f714708e837ae667c204cc918649ebcf2441b1d18ebde9a6564254932ee5)...done</span><br><span class="line">[root@work3 ~]# crictl images</span><br><span class="line">IMAGE                                                             TAG                 IMAGE ID            SIZE</span><br><span class="line">docker.io/flannel/flannel-cni-plugin                              v1.2.0              a55d1bad692b7       8.32MB</span><br></pre></td></tr></table></figure><h1 id="76ce2493"><font style="background-color:rgba(255, 255, 255, 0);">其他节点加入集群</font></h1>---<h2 id="6e7aaa3e"><font style="background-color:rgba(255, 255, 255, 0);">master节点加入集群</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">另外两个节点 master2 和 master3 都执行上面的 join 命令，上面的命令中的 –control-plane 就是通知 kubeadm join 创建一个新的控制平面，–certificate-key 会从集群中的 kubeadm-certs Secret 下载控制平面证书并使用给定的密钥进行解密。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 以master2节点为例</span><br><span class="line">[root@master2 ~]#   kubeadm join 192.168.10.150:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">&gt;         --discovery-token-ca-cert-hash sha256:4f8a53db87e99a4f3e8512169b7269ef2e28779e4602c0c3df898c645973c88c \</span><br><span class="line">&gt;         --control-plane --certificate-key efde545c8ea984be7ce9449ea1e77eb44659f1708001be512b7e01f70cf568b7</span><br><span class="line"></span><br><span class="line"># 然后根据提示配置环境变量</span><br><span class="line">[root@master2 ~]# mkdir -p $HOME/.kube</span><br><span class="line">[root@master2 ~]# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">[root@master2 ~]# chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure><h2 id="5eec51f2"><font style="background-color:rgba(255, 255, 255, 0);">work节点加入集群</font></h2>---<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.10.150:6443 --token abcdef.0123456789abcdef \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:4f8a53db87e99a4f3e8512169b7269ef2e28779e4602c0c3df898c645973c88c</span><br></pre></td></tr></table></figure><h2 id="ade4c21a"><font style="background-color:rgba(255, 255, 255, 0);">client配置</font></h2>---<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 安装指定版本的kubelet</span><br><span class="line">[root@tiaoban ~]# yum install -y kubectl-1.27.6</span><br><span class="line"># 拷贝集群认证文件并配置环境变量</span><br><span class="line">[root@tiaoban ~]# mkdir -p /etc/kubernetes</span><br><span class="line">[root@tiaoban ~]# scp master1:/etc/kubernetes/admin.conf /etc/kubernetes/</span><br><span class="line">[root@tiaoban ~]# echo &quot;export KUBECONFIG=/etc/kubernetes/admin.conf&quot; &gt;&gt; ~/.bash_profile</span><br><span class="line">[root@tiaoban ~]# source ~/.bash_profile</span><br></pre></td></tr></table></figure><h1 id="fb2d3f91"><font style="background-color:rgba(255, 255, 255, 0);">集群验证</font></h1>---<blockquote><p><font style="background-color:rgba(255, 255, 255, 0);">以下操作在tiaoban节点执行</font></p></blockquote><h2 id="77b07675"><font style="background-color:rgba(255, 255, 255, 0);">查看节点信息</font></h2>---<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# kubectl get node</span><br><span class="line">NAME      STATUS   ROLES           AGE    VERSION</span><br><span class="line">master1   Ready    control-plane   18m     v1.27.6</span><br><span class="line">master2   Ready    control-plane   12m7s   v1.27.6</span><br><span class="line">master3   Ready    control-plane   13m6s   v1.27.6</span><br><span class="line">work1     Ready    &lt;none&gt;          8m25s   v1.27.6</span><br><span class="line">work2     Ready    &lt;none&gt;          8m21s   v1.27.6</span><br><span class="line">work3     Ready    &lt;none&gt;          8m17s   v1.27.6</span><br></pre></td></tr></table></figure><h2 id="86a835fd"><font style="background-color:rgba(255, 255, 255, 0);">查看pod信息</font></h2>---<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# kubectl get pod -A -o wide </span><br><span class="line">NAMESPACE      NAME                              READY   STATUS    RESTARTS       AGE     IP               NODE      NOMINATED NODE   READINESS GATES</span><br><span class="line">kube-flannel   kube-flannel-ds-2nqk5             1/1     Running   0              134s   192.168.10.151   master1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-flannel   kube-flannel-ds-c87jk             1/1     Running   0              134s   192.168.10.155   work2     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-flannel   kube-flannel-ds-hnps5             1/1     Running   0              134s   192.168.10.154   work1     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-flannel   kube-flannel-ds-jphgx             1/1     Running   0              154s   192.168.10.153   master3   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-flannel   kube-flannel-ds-lxpsp             1/1     Running   0              134s   192.168.10.156   work3     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-flannel   kube-flannel-ds-rx5kf             1/1     Running   0              134s   192.168.10.152   master2   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    coredns-7bdc4cb885-cjbbx          1/1     Running   0              14m    10.244.5.3       work1     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    coredns-7bdc4cb885-sgsns          1/1     Running   0              14m    10.244.5.2       work1     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    etcd-master1                      1/1     Running   1              14m    192.168.10.151   master1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    etcd-master2                      1/1     Running   0              15m    192.168.10.152   master2   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    etcd-master3                      1/1     Running   0              14m    192.168.10.153   master3   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-apiserver-master1            1/1     Running   1              14m    192.168.10.151   master1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-apiserver-master2            1/1     Running   0              15m    192.168.10.152   master2   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-apiserver-master3            1/1     Running   2 (154m ago)   14m    192.168.10.153   master3   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-controller-manager-master1   1/1     Running   3 (40m ago)    14m    192.168.10.151   master1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-controller-manager-master2   1/1     Running   0              15m    192.168.10.152   master2   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-controller-manager-master3   1/1     Running   0              14m    192.168.10.153   master3   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-proxy-9jsq7                  1/1     Running   0              18m    192.168.10.155   work2     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-proxy-cpb5n                  1/1     Running   0              14m    192.168.10.151   master1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-proxy-dm2rm                  1/1     Running   0              14m    192.168.10.153   master3   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-proxy-g26c4                  1/1     Running   0              15m    192.168.10.152   master2   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-proxy-jkhnj                  1/1     Running   0              18m    192.168.10.156   work3     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-proxy-x29d9                  1/1     Running   0              18m    192.168.10.154   work1     &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-scheduler-master1            1/1     Running   3 (39m ago)    14m    192.168.10.151   master1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-scheduler-master2            1/1     Running   0              15m    192.168.10.152   master2   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-scheduler-master3            1/1     Running   0              14m    192.168.10.153   master3   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-vip-master1                  1/1     Running   0              1m     192.168.10.151   master1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-vip-master2                  1/1     Running   1 (38m ago)    15m    192.168.10.152   master2   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system    kube-vip-master3                  1/1     Running   0              14m    192.168.10.153   master3   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure><h1 id="da88e661"><font style="background-color:rgba(255, 255, 255, 0);">集群高可用测试</font></h1>---<h2 id="87c533b1"><font style="background-color:rgba(255, 255, 255, 0);">组件所在节点查看</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">查看VIP所在节点（当前位于master2）</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# ansible k8s-ha -m shell -a &quot;ip a | grep 192.168.10.150&quot;</span><br><span class="line">[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details</span><br><span class="line">work2 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">non-zero return code</span><br><span class="line">master2 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">    inet 192.168.10.150/32 scope global ens160</span><br><span class="line">work1 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">non-zero return code</span><br><span class="line">master1 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">non-zero return code</span><br><span class="line">master3 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">non-zero return code</span><br><span class="line">work3 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">non-zero return code</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">查看其他组件所在节点（controller-manager位于master1，scheduler 位于master3）</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# kubectl get leases -n kube-system</span><br><span class="line">NAME                                   HOLDER                                                                      AGE</span><br><span class="line">apiserver-bqv2ezepcsovu7bfu7lvbrdg2m   apiserver-bqv2ezepcsovu7bfu7lvbrdg2m_c3892ab2-71ee-40f4-be66-4f65c664f568   175m</span><br><span class="line">apiserver-bskcrn2i4gf5c5gco6huepssle   apiserver-bskcrn2i4gf5c5gco6huepssle_00e69eb5-4df9-4c3d-87e0-2eb54d7d93c4   3h6m</span><br><span class="line">apiserver-s5dbgrswajhxxnkoaowmosesjm   apiserver-s5dbgrswajhxxnkoaowmosesjm_3665e3ce-dc72-440d-ba7a-ff08f9c71b6a   176m</span><br><span class="line">kube-controller-manager                master1_08adefe3-56c0-4c87-94b7-9adda172eaf3                                3h6m</span><br><span class="line">kube-scheduler                         master3_59611769-b42d-459a-aa45-6ccf535d793f                                3h6m</span><br><span class="line">plndr-cp-lock                          master3                                                                     176m</span><br><span class="line">plndr-svcs-lock                        master1                                                                     176m</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">创建deployment和svc，模拟生产业务</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"># 新建资源清单</span><br><span class="line">[root@tiaoban k8s]# cat &gt; demo.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myapp</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: myapp</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myapp</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: myapp</span><br><span class="line">        image: ikubernetes/myapp:v1</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">          name: http</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myapp-svc</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: myapp</span><br><span class="line">  type: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    targetPort:  80</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"># 创建资源</span><br><span class="line">[root@tiaoban k8s]# kubectl apply -f demo.yaml </span><br><span class="line">deployment.apps/myapp created</span><br><span class="line">service/myapp-svc created</span><br><span class="line"></span><br><span class="line"># 查看资源信息</span><br><span class="line">[root@tiaoban k8s]# kubectl get pod -o wide</span><br><span class="line">NAME                     READY   STATUS    RESTARTS   AGE    IP           NODE    NOMINATED NODE   READINESS GATES</span><br><span class="line">myapp-64b6b8fbcd-jm5q2   1/1     Running   0          101s   10.244.3.2   work3   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">myapp-64b6b8fbcd-qqjsd   1/1     Running   0          101s   10.244.4.2   work2   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">myapp-64b6b8fbcd-tsmwx   1/1     Running   0          101s   10.244.5.6   work1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">[root@tiaoban k8s]# kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">kubernetes   ClusterIP   10.96.0.1        &lt;none&gt;        443/TCP        3h17m</span><br><span class="line">myapp-svc    NodePort    10.110.186.236   &lt;none&gt;        80:30380/TCP   5m6s</span><br><span class="line"></span><br><span class="line"># 访问测试</span><br><span class="line">[root@tiaoban k8s]# curl 192.168.10.150:30380</span><br><span class="line">Hello MyApp | Version: v1 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="59ab63b0"><font style="background-color:rgba(255, 255, 255, 0);">宕机一台控制节点</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">将VIP所在的master2节点关机，模拟宕机</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master3 ~]# init 0</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">各组件信息查看</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># VIP位于master1</span><br><span class="line">[root@tiaoban k8s]# ansible k8s-ha -m shell -a &quot;ip a | grep 192.168.10.150&quot;</span><br><span class="line">[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details</span><br><span class="line">[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details</span><br><span class="line">master2 | UNREACHABLE! =&gt; &#123;</span><br><span class="line">    &quot;changed&quot;: false,</span><br><span class="line">    &quot;msg&quot;: &quot;Failed to connect to the host via ssh: ssh: connect to host master2 port 22: Connection refused&quot;,</span><br><span class="line">    &quot;unreachable&quot;: true</span><br><span class="line">&#125;</span><br><span class="line">work2 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">non-zero return code</span><br><span class="line">work3 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">non-zero return code</span><br><span class="line">work1 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">non-zero return code</span><br><span class="line">master3 | FAILED | rc=1 &gt;&gt;</span><br><span class="line">non-zero return code</span><br><span class="line">master1 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">    inet 192.168.10.150/32 scope global ens160</span><br><span class="line"></span><br><span class="line"># controller-manager位于master1 scheduler位于master3</span><br><span class="line">[root@tiaoban k8s]# kubectl get leases -n kube-system</span><br><span class="line">NAME                                   HOLDER                                                                      AGE</span><br><span class="line">apiserver-bqv2ezepcsovu7bfu7lvbrdg2m   apiserver-bqv2ezepcsovu7bfu7lvbrdg2m_c3892ab2-71ee-40f4-be66-4f65c664f568   3h19m</span><br><span class="line">apiserver-bskcrn2i4gf5c5gco6huepssle   apiserver-bskcrn2i4gf5c5gco6huepssle_00e69eb5-4df9-4c3d-87e0-2eb54d7d93c4   3h30m</span><br><span class="line">apiserver-s5dbgrswajhxxnkoaowmosesjm   apiserver-s5dbgrswajhxxnkoaowmosesjm_3665e3ce-dc72-440d-ba7a-ff08f9c71b6a   3h20m</span><br><span class="line">kube-controller-manager                master1_fd5b1081-93e2-4be8-8eb8-8719a70b606a                                3h29m</span><br><span class="line">kube-scheduler                         master1_2b4c98a1-8d8c-4bb3-a3c4-58793022180a                                3h29m</span><br><span class="line">plndr-cp-lock                          master3                                                                     3h20m</span><br><span class="line">plndr-svcs-lock                        master1                                                                     3h20m</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">集群节点信息查看</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban k8s]# kubectl get node</span><br><span class="line">NAME      STATUS     ROLES           AGE     VERSION</span><br><span class="line">master1   Ready      control-plane   3h31m   v1.27.6</span><br><span class="line">master2   NotReady   control-plane   3h22m   v1.27.6</span><br><span class="line">master3   Ready      control-plane   3h21m   v1.27.6</span><br><span class="line">work1     Ready      &lt;none&gt;          3h14m   v1.27.6</span><br><span class="line">work2     Ready      &lt;none&gt;          3h14m   v1.27.6</span><br><span class="line">work3     Ready      &lt;none&gt;          3h14m   v1.27.6</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">业务访问测试</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban k8s]# curl 192.168.10.150:30380</span><br><span class="line">Hello MyApp | Version: v1 | &lt;a href=&quot;hostname.html&quot;&gt;Pod Name&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">结论：当有一个master节点宕机时，VIP会发生漂移，集群各项功能不受影响。</font></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>confd管理配置</title>
      <link href="/2025/03/05/4.ETCD%E2%80%94%E2%80%94confd%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/"/>
      <url>/2025/03/05/4.ETCD%E2%80%94%E2%80%94confd%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="800f2ad9"><font style="background-color:rgba(255, 255, 255, 0);">confd简介</font></h1>---<h2 id="b2847d5c"><font style="background-color:rgba(255, 255, 255, 0);">什么是confd</font></h2><font style="background-color:rgba(255, 255, 255, 0);">Confd是一个轻量级的配置管理工具。通过查询后端存储，结合配置模板引擎，保持本地配置最新，同时具备定期探测机制，配置变更自动reload。对应的后端存储可以是etcd，redis、zookeeper等。</font><h2 id="3ed06af0"><font style="background-color:rgba(255, 255, 255, 0);">confd用途</font></h2><font style="background-color:rgba(255, 255, 255, 0);">随着上线的服务越来越多，配置文件和配置项越来越复杂，管理和变更维护配置文件逐渐成为一件麻烦的事情。在这时候，就需要一套集中化的配置文件管理系统。一方面实现配置文件的统一管理，版本回溯，另一方面提供配置文件的批量自动下发，已经动态加载重启服务。而confd+etcd就是为解决上述问题提出的一种解决思路。  </font>![](https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738851176432-60ddfdb2-8731-4b7d-9a66-7beb7b76d57b.jpeg)<h2 id="818c70a3"><font style="background-color:rgba(255, 255, 255, 0);">confd工作原理</font></h2>![](https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738851176339-9480cbeb-90fb-49b3-a4c2-bcc4f20a3b62.jpeg)<h1 id="97f01f3c"><font style="background-color:rgba(255, 255, 255, 0);">使用confd</font></h1>---<ul><li><font style="background-color:rgba(255, 255, 255, 0);">confd配置文件默认在&#x2F;etc&#x2F;confd中，可以通过参数-confdir指定。目录中包含两个子目录，分别是：conf.d templates。</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">confd会先读取conf.d目录中的配置文件(toml格式)，然后根据文件指定的模板路径去渲染模板，再执行<reload_cmd>。</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">接下来以NGINX配置为例，通过监听etcd存储变化，动态的修改NGINX主页。</font></p><h2 id="2ea05453"><font style="background-color:rgba(255, 255, 255, 0);">安装confd</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# wget https://github.com/kelseyhightower/confd/releases/download/v0.16.0/confd-0.16.0-linux-amd64</span><br><span class="line">[root@tiaoban ~]# mv confd-0.16.0-linux-amd64 /usr/local/bin/confd</span><br><span class="line">[root@tiaoban ~]# chmod +x /usr/local/bin/confd</span><br><span class="line">[root@tiaoban ~]# confd -version</span><br><span class="line">confd 0.16.0 (Git SHA: 7217b0ca, Go Version: go1.10.2)</span><br></pre></td></tr></table></figure><h2 id="d0c40ddb"><font style="background-color:rgba(255, 255, 255, 0);">创建nginx资源文件</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# dnf -y install nginx </span><br><span class="line">[root@tiaoban ~]# systemctl start nginx</span><br><span class="line"># 准备两个html文件目录</span><br><span class="line">[root@tiaoban nginx]# pwd</span><br><span class="line">/usr/share/nginx</span><br><span class="line">[root@tiaoban nginx]# tree .</span><br><span class="line">.</span><br><span class="line">├── html</span><br><span class="line">│   ├── 404.html</span><br><span class="line">│   ├── 50x.html</span><br><span class="line">│   ├── index.html</span><br><span class="line">│   ├── nginx-logo.png</span><br><span class="line">│   └── poweredby.png</span><br><span class="line">├── modules</span><br><span class="line">│   ├── mod-http-image-filter.conf</span><br><span class="line">│   ├── mod-http-perl.conf</span><br><span class="line">│   ├── mod-http-xslt-filter.conf</span><br><span class="line">│   ├── mod-mail.conf</span><br><span class="line">│   └── mod-stream.conf</span><br><span class="line">├── v1</span><br><span class="line">│   └── index.html</span><br><span class="line">└── v2</span><br><span class="line">    └── index.html</span><br><span class="line"></span><br><span class="line">4 directories, 12 files</span><br><span class="line">[root@tiaoban nginx]# cat v1/index.html </span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;nginx-v1&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;hello nginx v1&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">[root@tiaoban nginx]# cat v2/index.html </span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">  &lt;title&gt;nginx-v2&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;hello nginx v2&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="0d3a828b"><font style="background-color:rgba(255, 255, 255, 0);">创建配置目录</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# mkdir -p /etc/confd/&#123;conf.d,templates&#125;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">confd目录主要使用两个核心的目录</font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">conf.d：主要包含配置的生成逻辑，例如模板源，后端存储对应的keys，命令执行等。</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">templates：配置模板Template，即基于不同组件的配置，修改为符合 Golang text templates的模板文件。</font></li></ul><h2 id="fb90c475"><font style="background-color:rgba(255, 255, 255, 0);">创建模板文件</font></h2><font style="background-color:rgba(255, 255, 255, 0);">Template定义了单一应用配置的模板，默认存储在/etc/confd/templates目录下，模板文件符合Go的text/template格式。  </font><font style="background-color:rgba(255, 255, 255, 0);">模板文件常用函数有base，get，gets，lsdir，json等。具体可参考</font>[<font style="background-color:rgba(255, 255, 255, 0);">https://github.com/kelseyhightower/confd/blob/master/docs/templates.md</font>](https://github.com/kelseyhightower/confd/blob/master/docs/templates.md)<font style="background-color:rgba(255, 255, 255, 0);">。  </font><font style="background-color:rgba(255, 255, 255, 0);">此处的逻辑是使用root_dir变量，动态更新nginx的root文件目录，如果root_dir这个key不存在，则默认值为/usr/share/nginx/html。</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# cd /etc/confd/templates</span><br><span class="line">[root@tiaoban templates]# cat nginx.tmpl</span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  ~^.*$;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root  &#123;&#123;getv &quot;/root_dir&quot; &quot;/usr/share/nginx/html&quot;&#125;&#125;;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="bba0d682"><font style="background-color:rgba(255, 255, 255, 0);">创建配置文件</font></h2><font style="background-color:rgba(255, 255, 255, 0);">模板源配置文件是TOML格式的文件，主要包含配置的生成逻辑，例如模板源，后端存储对应的keys，命令执行等。默认目录在/etc/confd/conf.d。</font><ul><li><font style="background-color:rgba(255, 255, 255, 0);">必要参数</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">dest：目标文件（字符串类型）<br></font><font style="background-color:rgba(255, 255, 255, 0);">keys ： 键数组（字符串数组）<br></font><font style="background-color:rgba(255, 255, 255, 0);">src ：配置模板的相对路径（字符串）</font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">可选参数</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">gid：应该拥有该文件的gid。默认为有效的gid（整数）<br></font><font style="background-color:rgba(255, 255, 255, 0);">mode：文件的权限模式（字符串）<br></font><font style="background-color:rgba(255, 255, 255, 0);">uid：应该拥有该文件的uid。默认为有效的uid（整数）<br></font><font style="background-color:rgba(255, 255, 255, 0);">reload_cmd：重新加载配置的命令（字符串）<br></font><font style="background-color:rgba(255, 255, 255, 0);">check_cmd：检查配置的命令（字符串）<br></font><font style="background-color:rgba(255, 255, 255, 0);">prefix：键前缀的字符串（字符串）</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban confd]# cat /etc/confd/conf.d/myapp-nginx.toml </span><br><span class="line">[template]</span><br><span class="line">prefix = &quot;/nginx&quot; # 指定字符串前缀，便于区分不同confd项目</span><br><span class="line">src = &quot;nginx.tmpl&quot; #配置模板相对路径</span><br><span class="line">dest = &quot;/etc/nginx/conf.d/myapp.conf&quot; # 目标路径</span><br><span class="line">mode = &quot;0644&quot; # 文件权限</span><br><span class="line">keys = [</span><br><span class="line">  &quot;/root_dir&quot;</span><br><span class="line">] # 键数组，与模板使用的键对应</span><br><span class="line">check_cmd = &quot;/usr/sbin/nginx -t&quot; # 配置检查命令</span><br><span class="line">reload_cmd = &quot;/usr/sbin/nginx -s reload&quot; # 重新加载配置命令</span><br></pre></td></tr></table></figure><h2 id="fc5cef98"><font style="background-color:rgba(255, 255, 255, 0);">初始化etcd中的数据</font></h2><font style="background-color:rgba(255, 255, 255, 0);">先在etcd中创建一个名为/nginx/root_dir的键，值为/usr/share/nginx/v1。需要注意的是如果在配置文件中指定前缀，那么在创建键时键名为前缀+keys。</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# etcdctl put /nginx/root_dir &#x27;/usr/share/nginx/v1&#x27;</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><h2 id="32874e94"><font style="background-color:rgba(255, 255, 255, 0);">启动confd的服务</font></h2><font style="background-color:rgba(255, 255, 255, 0);">confd支持以daemon或者onetime两种模式运行</font><ul><li><font style="background-color:rgba(255, 255, 255, 0);">onetime模式：只会生成一次配置，之后key无论变化不会再生成，一般很少使用这种模式。</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# confd -onetime -backend etcd -node http://127.0.0.1:2379</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">daemon模式：confd会监听后端存储的配置变化，根据配置模板动态生成目标配置文件。</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# confd -watch -backend etcdv3 -node http://192.168.10.100:2379</span><br><span class="line">2023-03-22T22:04:55+08:00 tiaoban confd[5312]: INFO Backend set to etcdv3</span><br><span class="line">2023-03-22T22:04:55+08:00 tiaoban confd[5312]: INFO Starting confd</span><br><span class="line">2023-03-22T22:04:55+08:00 tiaoban confd[5312]: INFO Backend source(s) set to http://192.168.10.100:2379</span><br><span class="line">2023-03-22T22:04:55+08:00 tiaoban confd[5312]: INFO Target config /etc/nginx/conf.d/myapp.conf out of sync</span><br><span class="line">2023-03-22T22:04:55+08:00 tiaoban confd[5312]: INFO Target config /etc/nginx/conf.d/myapp.conf has been updated</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">由日志可知，已经成功根据模板文件和etcd的key生成了配置文件。</font></p><h2 id="046e223e"><font style="background-color:rgba(255, 255, 255, 0);">访问验证</font></h2><font style="background-color:rgba(255, 255, 255, 0);">查看生成的nginx配置文件</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# cat /etc/nginx/conf.d/myapp.conf </span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  ~^.*$;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root  /usr/share/nginx/v1;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">访问nginx服务，查看页面</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# curl 127.0.0.1/</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;nginx-v1&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;hello nginx v1&lt;/h1&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">ok，v1版本的nginx服务访问正常，接下来我们更新&#x2F;nginx&#x2F;root_dir，模拟版本更新操作</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# etcdctl put /nginx/root_dir &#x27;/usr/share/nginx/v2&#x27;</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">观察confd日志，有检测到了etcd键值变化，并触发了自动更新操作</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban confd]# confd -watch -backend etcdv3 -node http://192.168.10.100:2379</span><br><span class="line">2023-03-22T22:06:06+08:00 tiaoban confd[5344]: INFO Backend set to etcdv3</span><br><span class="line">2023-03-22T22:06:06+08:00 tiaoban confd[5344]: INFO Starting confd</span><br><span class="line">2023-03-22T22:06:06+08:00 tiaoban confd[5344]: INFO Backend source(s) set to http://192.168.10.100:2379</span><br><span class="line">2023-03-22T22:06:06+08:00 tiaoban confd[5344]: INFO Target config /etc/nginx/conf.d/myapp.conf out of sync</span><br><span class="line">2023-03-22T22:06:06+08:00 tiaoban confd[5344]: INFO Target config /etc/nginx/conf.d/myapp.conf has been updated</span><br><span class="line">2023-03-22T22:09:25+08:00 tiaoban confd[5344]: INFO /etc/nginx/conf.d/myapp.conf has md5sum 86f04524c0f5e58d81f86649b6feef79 should be 47da5e695a2c5ad1e5561bec683a920c</span><br><span class="line">2023-03-22T22:09:25+08:00 tiaoban confd[5344]: INFO Target config /etc/nginx/conf.d/myapp.conf out of sync</span><br><span class="line">2023-03-22T22:09:25+08:00 tiaoban confd[5344]: INFO Target config /etc/nginx/conf.d/myapp.conf has been updated</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">查看新生成的nginx配置文件，并访问验证</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# cat /etc/nginx/conf.d/myapp.conf </span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  ~^.*$;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root  /usr/share/nginx/v2;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">[root@tiaoban ~]# curl 127.0.0.1/</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;nginx-v2&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;hello nginx v2&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">由此可见，confd实时监听&#x2F;nginx&#x2F;root_dir这个key的值变化，当键的值更新时，自动渲染模板文件，生成了新的nginx配置，并自动执行了nginx -t和nginx -s reload操作。</font></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安装部署</title>
      <link href="/2025/03/05/2.ETCD%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
      <url>/2025/03/05/2.ETCD%E2%80%94%E2%80%94%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="331764a2"><font style="background-color:rgba(255, 255, 255, 0);">安装部署(单机)</font></h1>---<p><font style="background-color:rgba(255, 255, 255, 0);">如果在测试开发环境，想要测试和使用etcd服务，只需要部署一个单点的 etcd 服务即可。</font></p><h2 id="2ef72e59"><font style="background-color:rgba(255, 255, 255, 0);">二进制文件部署</font></h2>+ <font style="background-color:rgba(255, 255, 255, 0);">下载安装软件</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 下载软件包</span><br><span class="line">[root@linux9 ~]# wget https://github.com/etcd-io/etcd/releases/download/v3.4.23/etcd-v3.4.23-linux-amd64.tar.gz</span><br><span class="line">[root@linux9 ~]# ls</span><br><span class="line">etcd-v3.4.23-linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"># 解压到指定目录</span><br><span class="line">[root@linux9 ~]# tar -zxf etcd-v3.4.23-linux-amd64.tar.gz -C /usr/local</span><br><span class="line">[root@linux9 ~]# cd /usr/local/etc</span><br><span class="line">etc/                      etcd-v3.4.23-linux-amd64/ </span><br><span class="line">[root@linux9 ~]# cd /usr/local/etcd-v3.4.23-linux-amd64/</span><br><span class="line">[root@linux9 etcd-v3.4.23-linux-amd64]# ls</span><br><span class="line">Documentation  README-etcdctl.md  README.md  READMEv2-etcdctl.md  etcd  etcdctl</span><br><span class="line"></span><br><span class="line"># 添加环境变量</span><br><span class="line">[root@linux9 etcd-v3.4.23-linux-amd64]# vim /etc/profile</span><br><span class="line">export PATH=&quot;$PATH:/usr/local/etcd-v3.4.23-linux-amd64&quot;</span><br><span class="line">[root@linux9 etcd-v3.4.23-linux-amd64]# source /etc/profile</span><br><span class="line"></span><br><span class="line"># 验证</span><br><span class="line">[root@linux9 etcd-v3.4.23-linux-amd64]# etcdctl version</span><br><span class="line">etcdctl version: 3.4.23</span><br><span class="line">API version: 3.4</span><br><span class="line">[root@linux9 etcd-v3.4.23-linux-amd64]# etcd --version</span><br><span class="line">etcd Version: 3.4.23</span><br><span class="line">Git SHA: c8b7831</span><br><span class="line">Go Version: go1.17.13</span><br><span class="line">Go OS/Arch: linux/amd64</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">添加systemd服务配置</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据目录与配置文件目录</span><br><span class="line">[root@linux9 ~]# mkdir -p /etc/etcd</span><br><span class="line">[root@linux9 ~]# mkdir -p /data/etcd</span><br><span class="line"></span><br><span class="line"># systemd 服务配置文件</span><br><span class="line">[root@linux9 ~]# cat /usr/lib/systemd/system/etcd.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">EnvironmentFile=/etc/etcd/etcd.conf</span><br><span class="line">ExecStart=/usr/local/etcd-v3.4.23-linux-amd64/etcd --config-file=/etc/etcd/etcd.conf</span><br><span class="line">Restart=on-failure</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"># 创建etcd配置文件</span><br><span class="line">[root@linux9 ~]# cat /etc/etcd/etcd.conf</span><br><span class="line"># 节点名称</span><br><span class="line">name: &#x27;etcd-1&#x27;</span><br><span class="line"># 指定节点的数据存储目录</span><br><span class="line">data-dir: &#x27;/data/etcd&#x27;</span><br><span class="line"># 对外提供服务的地址，客户端会连接到这里和 etcd 交互</span><br><span class="line">listen-client-urls: &#x27;http://192.168.10.128:2379,http://127.0.0.1:2379&#x27;</span><br><span class="line"></span><br><span class="line"># 启动etcd服务并添加开机自启动</span><br><span class="line">[root@linux9 ~]# systemctl daemon-reload</span><br><span class="line">[root@linux9 ~]# systemctl start etcd</span><br><span class="line">[root@linux9 ~]# systemctl enable etcd</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">除了可以使用配置文件指定配置外，也可以直接通过命令行参数指定配置，常用的命令行参数如下(推荐使用配置文件)，命令行参数参考文档：</font><a href="https://etcd.io/docs/v3.5/op-guide/configuration/"><font style="background-color:rgba(255, 255, 255, 0);">https://etcd.io/docs/v3.5/op-guide/configuration/</font></a><font style="background-color:rgba(255, 255, 255, 0);">，配置文件参考文档：</font><a href="https://github.com/etcd-io/etcd/blob/main/etcd.conf.yml.sample"><font style="background-color:rgba(255, 255, 255, 0);">https://github.com/etcd-io/etcd/blob/main/etcd.conf.yml.sample</font></a></li></ul><table><thead><tr><th><strong><font style="background-color:rgba(255, 255, 255, 0);">参数</font></strong></th><th><strong><font style="background-color:rgba(255, 255, 255, 0);">说明</font></strong></th></tr></thead><tbody><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–name</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcd节点名字如果在集群环境中，name必须是唯一的，建议用主机名称或者机器ID。</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–data-dir</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">数据存储目录</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–initial-cluster</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcd启动的时候，通过这个配置找到其他ectd节点的地址列表，格式：‘节点名字1&#x3D;http:&#x2F;&#x2F;节点ip1:2380,节点名字1&#x3D;http:&#x2F;&#x2F;节点ip1:2380,…’</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–initial-cluster-state</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">初始化的时候，集群的状态 “new” 或者 “existing”两种状态，new代表新建的集群，existing表示加入已经存在的集群。</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–advertise-client-urls</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">如果–listen-client-urls配置了，多个监听客户端请求的地址，这个参数可以给出，建议客户端使用什么地址访问etcd。</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–initial-advertise-peer-urls</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">服务端之间通讯使用的地址列表。</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–listen-client-urls</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">监听客户端请求的地址列表，格式：‘<a href="http://localhost:2379’">http://localhost:2379’</a>, 多个用逗号分隔。</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–listen-peer-urls</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">服务端节点之间通讯的监听地址，格式：‘<a href="http://localhost:2380’">http://localhost:2380’</a></font></td></tr></tbody></table><ul><li><font style="background-color:rgba(255, 255, 255, 0);">验证</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 查看集群状态</span><br><span class="line">[root@linux9 ~]# etcdctl endpoint status --cluster -w table</span><br><span class="line">+----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|          ENDPOINT          |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| http://192.168.10.128:2379 | 9a20d64f814efc90 |  3.4.23 |   20 kB |      true |      false |         2 |          4 |                  4 |        |</span><br><span class="line">+----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line"># 设置key value</span><br><span class="line">[root@linux9 ~]# etcdctl put greeting &quot;Hello, etcd&quot;</span><br><span class="line">OK</span><br><span class="line"># 获取value</span><br><span class="line">[root@linux9 ~]# etcdctl get greeting</span><br><span class="line">greeting</span><br><span class="line">Hello, etcd</span><br></pre></td></tr></table></figure><h2 id="84e66d38"><font style="background-color:rgba(255, 255, 255, 0);">docker容器部署</font></h2><font style="background-color:rgba(255, 255, 255, 0);">官方文档参考地址：</font>[<font style="background-color:rgba(255, 255, 255, 0);">https://etcd.io/docs/v3.5/op-guide/container/</font>](https://etcd.io/docs/v3.5/op-guide/container/)<font style="background-color:rgba(255, 255, 255, 0);">，官方docker示例使用命令行参数启动，并不推荐。</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据目录与配置文件目录</span><br><span class="line">[root@linux9 ~]# mkdir -p /etc/etcd</span><br><span class="line">[root@linux9 ~]# mkdir -p /data/etcd</span><br><span class="line"></span><br><span class="line"># 修改数据目录权限，否则无法写入数据</span><br><span class="line">[root@linux9 ~]# chown -R 1001:1001 /data/etcd/</span><br><span class="line"></span><br><span class="line"># 创建etcd配置文件</span><br><span class="line">[root@linux9 ~]# cat /etc/etcd/etcd.conf</span><br><span class="line"># 节点名称</span><br><span class="line">name: &#x27;etcd-1&#x27;</span><br><span class="line"># 指定节点的数据存储目录</span><br><span class="line">data-dir: &#x27;/data&#x27;</span><br><span class="line"># 对外提供服务的地址，客户端会连接到这里和 etcd 交互</span><br><span class="line">listen-client-urls: &#x27;http://0.0.0.0:2379&#x27;</span><br><span class="line"></span><br><span class="line"># 启动etcd容器</span><br><span class="line">[root@linux9 ~]# docker run -d --name etcd -p 2379:2379 -v /data/etcd:/data -v /etc/etcd:/conf bitnami/etcd:latest etcd --config-file /conf/etcd.conf</span><br><span class="line"></span><br><span class="line"># 访问验证</span><br><span class="line">[root@linux9 etcd]# docker exec etcd sh -c &quot;etcd --version&quot;</span><br><span class="line">etcd Version: 3.5.6</span><br><span class="line">Git SHA: cecbe35ce</span><br><span class="line">Go Version: go1.16.15</span><br><span class="line">Go OS/Arch: linux/amd64</span><br><span class="line">[root@linux9 etcd]# docker exec etcd sh -c &quot;etcdctl version&quot;</span><br><span class="line">etcdctl version: 3.5.6</span><br><span class="line">API version: 3.5</span><br><span class="line">[root@linux9 etcd]# docker exec etcd sh -c &quot;etcdctl endpoint status --cluster -w table&quot;</span><br><span class="line">+------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|        ENDPOINT        |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| http://172.17.0.2:2379 | 8e9e05c52164694d |   3.5.6 |   20 kB |      true |      false |         6 |         13 |                 13 |        |</span><br><span class="line">+------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">[root@linux9 etcd]# docker exec etcd sh -c &quot;etcdctl put foo bar&quot;</span><br><span class="line">OK</span><br><span class="line">[root@linux9 etcd]# docker exec etcd sh -c &quot;etcdctl get foo&quot;</span><br><span class="line">foo</span><br><span class="line">bar</span><br></pre></td></tr></table></figure><h2 id="8d85811c"><font style="background-color:rgba(255, 255, 255, 0);">web管理工具etcdkeeper部署</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@linux9 ~]# docker run -d -p 8080:8080 --name=etcdkeeper evildecay/etcdkeeper:latest</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">1</font></p><p><img src="https://cdn.nlark.com/yuque/0/2025/jpeg/43141749/1738849970258-d25ebf11-2527-4be4-8072-b63c3351cf98.jpeg"></p><h1 id="39e1af29"><font style="background-color:rgba(255, 255, 255, 0);">二进制文件部署etcd集群</font></h1>---<p><font style="background-color:rgba(255, 255, 255, 0);">在生产环境或对高可用有要求的环境下，需要使用 etcd 的高可用部署方式进行部署，etcd 的 raft 协议保障各个节点数据的一致性。至少使用三台以上奇数节点，才能达到最好的集群容错。</font></p><h2 id="2810ee4c"><font style="background-color:rgba(255, 255, 255, 0);">角色规划</font></h2>| **<font style="background-color:rgba(255, 255, 255, 0);">主机名称</font>** | **<font style="background-color:rgba(255, 255, 255, 0);">系统</font>** | **<font style="background-color:rgba(255, 255, 255, 0);">IP地址</font>** | **<font style="background-color:rgba(255, 255, 255, 0);">部署组件</font>** || --- | --- | --- | --- || <font style="background-color:rgba(255, 255, 255, 0);">tiaoban</font> | <font style="background-color:rgba(255, 255, 255, 0);">CentOS 8.5</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.100</font> | <font style="background-color:rgba(255, 255, 255, 0);">etcd1</font> || <font style="background-color:rgba(255, 255, 255, 0);">k8s-work1</font> | <font style="background-color:rgba(255, 255, 255, 0);">CentOS 8.5</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.11</font> | <font style="background-color:rgba(255, 255, 255, 0);">etcd2</font> || <font style="background-color:rgba(255, 255, 255, 0);">k8s-work2</font> | <font style="background-color:rgba(255, 255, 255, 0);">CentOS 8.5</font> | <font style="background-color:rgba(255, 255, 255, 0);">192.168.10.12</font> | <font style="background-color:rgba(255, 255, 255, 0);">etcd3</font> |<p><font style="background-color:rgba(255, 255, 255, 0);">我们以3个节点的高可用静态方式部署 etcd，3个节点的IP地址分别是192.168.10.100、192.168.10.11和192.168.10.12。每个节点etcd配置文件主要的差异就是当前节点的 IP 地址和命名。部署启动方法与单节点部署启动方式完全一致，只需要更改配置文件内容即可。</font></p><h2 id="1bbbb204"><font style="background-color:rgba(255, 255, 255, 0);">注意事项</font></h2><font style="background-color:rgba(255, 255, 255, 0);">–listen-client-urls用于监听客户端消息,必须设置为真实ip地址，如果机器为云主机，可以设置为云主机的私有ip地址或0.0.0.0(代表监听所有地址),不能设置为公网ip地址  </font><font style="background-color:rgba(255, 255, 255, 0);">–listen-peer-urls用于监听其他member发送过来的消息，跟listen-client-urls一样，必须设置为真实ip地址,如果机器为云主机,不能设置为公网ip  </font><font style="background-color:rgba(255, 255, 255, 0);">–initial-advertise-peer-urls用于监听其他member同步信号，该地址其他member必须能直接访问，所以如果是云主机该地址必须设置为云主机的公网ip地址  </font><font style="background-color:rgba(255, 255, 255, 0);">–initial-cluster群集列表，该列表中的值必须跟各个member的initial-advertise-peer-urls值一样</font><h2 id="848be749"><font style="background-color:rgba(255, 255, 255, 0);">tiaoban节点配置</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 节点名称</span><br><span class="line">name: &quot;etcd1&quot;</span><br><span class="line"># 数据存储目录</span><br><span class="line">data-dir: &quot;/data/etcd&quot;</span><br><span class="line"># 对外公告的该节点客户端监听地址，这个值会告诉集群中其他节点</span><br><span class="line">advertise-client-urls: &quot;http://192.168.10.100:2379&quot;</span><br><span class="line"># 监听客户端请求的地址列表</span><br><span class="line">listen-client-urls: &quot;http://192.168.10.100:2379,http://127.0.0.1:2379&quot;</span><br><span class="line"># 监听URL，用于节点之间通信监听地址</span><br><span class="line">listen-peer-urls: &quot;http://192.168.10.100:2380&quot;</span><br><span class="line"># 服务端之间通讯使用的地址列表,该节点同伴监听地址，这个值会告诉集群中其他节点</span><br><span class="line">initial-advertise-peer-urls: &quot;http://192.168.10.100:2380&quot;</span><br><span class="line"># etcd启动时，etcd集群的节点地址列表</span><br><span class="line">initial-cluster: &quot;etcd1=http://192.168.10.100:2380,etcd2=http://192.168.10.11:2380,etcd3=http://192.168.10.12:2380&quot;</span><br><span class="line"># etcd集群的初始集群令牌</span><br><span class="line">initial-cluster-token: &#x27;etcd-cluster&#x27;</span><br><span class="line"># etcd集群初始化的状态，new代表新建集群，existing表示加入现有集群</span><br><span class="line">initial-cluster-state: &#x27;new&#x27;</span><br></pre></td></tr></table></figure><h2 id="6dbce8aa"><font style="background-color:rgba(255, 255, 255, 0);">k8s-work1节点配置</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 节点名称</span><br><span class="line">name: &quot;etcd2&quot;</span><br><span class="line"># 数据存储目录</span><br><span class="line">data-dir: &quot;/data/etcd&quot;</span><br><span class="line"># 对外公告的该节点客户端监听地址，这个值会告诉集群中其他节点</span><br><span class="line">advertise-client-urls: &quot;http://192.168.10.11:2379&quot;</span><br><span class="line"># 监听客户端请求的地址列表</span><br><span class="line">listen-client-urls: &quot;http://192.168.10.11:2379,http://127.0.0.1:2379&quot;</span><br><span class="line"># 监听URL，用于节点之间通信监听地址</span><br><span class="line">listen-peer-urls: &quot;http://192.168.10.11:2380&quot;</span><br><span class="line"># 服务端之间通讯使用的地址列表,该节点同伴监听地址，这个值会告诉集群中其他节点</span><br><span class="line">initial-advertise-peer-urls: &quot;http://192.168.10.11:2380&quot;</span><br><span class="line"># etcd启动时，etcd集群的节点地址列表</span><br><span class="line">initial-cluster: &quot;etcd1=http://192.168.10.100:2380,etcd2=http://192.168.10.11:2380,etcd3=http://192.168.10.12:2380&quot;</span><br><span class="line"># etcd集群的初始集群令牌</span><br><span class="line">initial-cluster-token: &#x27;etcd-cluster&#x27;</span><br><span class="line"># etcd集群初始化的状态，new代表新建集群，existing表示加入现有集群</span><br><span class="line">initial-cluster-state: &#x27;new&#x27;</span><br></pre></td></tr></table></figure><h2 id="807b27a0"><font style="background-color:rgba(255, 255, 255, 0);">k8s-work2节点配置</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 节点名称</span><br><span class="line">name: &quot;etcd3&quot;</span><br><span class="line"># 数据存储目录</span><br><span class="line">data-dir: &quot;/data/etcd&quot;</span><br><span class="line"># 对外公告的该节点客户端监听地址，这个值会告诉集群中其他节点</span><br><span class="line">advertise-client-urls: &quot;http://192.168.10.12:2379&quot;</span><br><span class="line"># 监听客户端请求的地址列表</span><br><span class="line">listen-client-urls: &quot;http://192.168.10.12:2379,http://127.0.0.1:2379&quot;</span><br><span class="line"># 监听URL，用于节点之间通信监听地址</span><br><span class="line">listen-peer-urls: &quot;http://192.168.10.12:2380&quot;</span><br><span class="line"># 服务端之间通讯使用的地址列表,该节点同伴监听地址，这个值会告诉集群中其他节点</span><br><span class="line">initial-advertise-peer-urls: &quot;http://192.168.10.12:2380&quot;</span><br><span class="line"># etcd启动时，etcd集群的节点地址列表</span><br><span class="line">initial-cluster: &quot;etcd1=http://192.168.10.100:2380,etcd2=http://192.168.10.11:2380,etcd3=http://192.168.10.12:2380&quot;</span><br><span class="line"># etcd集群的初始集群令牌</span><br><span class="line">initial-cluster-token: &#x27;etcd-cluster&#x27;</span><br><span class="line"># etcd集群初始化的状态，new代表新建集群，existing表示加入现有集群</span><br><span class="line">initial-cluster-state: &#x27;new&#x27;</span><br></pre></td></tr></table></figure><h2 id="046e223e"><font style="background-color:rgba(255, 255, 255, 0);">访问验证</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master etcd]# etcdctl endpoint status --cluster -w table</span><br><span class="line">+---------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|         ENDPOINT          |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+---------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| http://192.168.10.12:2379 | 5d2c1bd3b22f796f |  3.4.23 |   20 kB |      true |      false |         3 |          9 |                  9 |        |</span><br><span class="line">| http://192.168.10.10:2379 | 8c632555af4d958d |  3.4.23 |   16 kB |     false |      false |         3 |          9 |                  9 |        |</span><br><span class="line">| http://192.168.10.11:2379 | bc34c6bd673bdf9f |  3.4.23 |   20 kB |     false |      false |         3 |          9 |                  9 |        |</span><br><span class="line">+---------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">[root@k8s-master etcd]# etcdctl put foo bar</span><br><span class="line">OK</span><br><span class="line">[root@k8s-master etcd]# etcdctl get foo</span><br><span class="line">foo</span><br><span class="line">bar</span><br></pre></td></tr></table></figure><h1 id="934b36d4"><font style="background-color:rgba(255, 255, 255, 0);">部署TLS加密集群</font></h1>---<p><font style="background-color:rgba(255, 255, 255, 0);">etcd 支持通过 TLS 协议的加密通讯，在实际企业生产环境中，出于安全规范要求，建议开启TLS加密。TLS 通道可以用于加密内部的集群通讯，也可以用于加密客户端请求。<br></font><font style="background-color:rgba(255, 255, 255, 0);">etcd 的 TLS 有两对，一对是 etcd 和 client 端的 TLS 配置。一对是 etcd 之间的 peer 的 TLS 配置。有很多方式可以创建CA证书和私钥，其中比较流行的有两种</font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">openssl</font></li><li><a href="https://pkg.cfssl.org/"><font style="background-color:rgba(255, 255, 255, 0);">cfssl</font></a></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">官方文档推荐使用cfssl生成证书</font></p><h2 id="2d216623"><font style="background-color:rgba(255, 255, 255, 0);">下载安装cfssl</font></h2><font style="background-color:rgba(255, 255, 255, 0);">下载地址：</font>[<font style="background-color:rgba(255, 255, 255, 0);">https://github.com/cloudflare/cfssl/releases</font>](https://github.com/cloudflare/cfssl/releases)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# wget https://github.com/cloudflare/cfssl/releases/download/v1.6.3/cfssl_1.6.3_linux_amd64</span><br><span class="line">[root@tiaoban ~]# wget https://github.com/cloudflare/cfssl/releases/download/v1.6.3/cfssljson_1.6.3_linux_amd64</span><br><span class="line">[root@tiaoban ~]# mv cfssl_1.6.3_linux_amd64 /usr/bin/cfssl</span><br><span class="line">[root@tiaoban ~]# mv cfssljson_1.6.3_linux_amd64 /usr/bin/cfssljson</span><br><span class="line">[root@tiaoban ~]# chmod +x /usr/bin/&#123;cfssl,cfssljson&#125;</span><br><span class="line">[root@tiaoban ~]# cfssl version</span><br><span class="line">Version: 1.6.3</span><br><span class="line">Runtime: go1.18</span><br></pre></td></tr></table></figure><h2 id="f8a74222"><font style="background-color:rgba(255, 255, 255, 0);">创建默认配置文件</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# cfssl print-defaults config &gt; ca-config.json</span><br><span class="line">[root@tiaoban ~]# cfssl print-defaults csr &gt; ca-csr.json</span><br></pre></td></tr></table></figure><h2 id="929e8577"><font style="background-color:rgba(255, 255, 255, 0);">证书类型</font></h2>+ <font style="background-color:rgba(255, 255, 255, 0);">客户端证书用于服务器验证客户端身份</font>+ <font style="background-color:rgba(255, 255, 255, 0);">服务器端证书用于客户端验证服务器端身份</font>+ <font style="background-color:rgba(255, 255, 255, 0);">对等证书由etcd集群成员使用，同时使用客户端认证和服务器端认证</font><h2 id="b81c6516"><font style="background-color:rgba(255, 255, 255, 0);">创建 CA 证书</font></h2><font style="background-color:rgba(255, 255, 255, 0);">由于各个组件都需要配置证书，并且依赖 CA 证书来签发证书，所以我们首先要生成好 CA 证书以及后续的签发配置文件</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"># 修改ca-config配置</span><br><span class="line">[root@tiaoban etcd]# cat &gt; ca-config.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;signing&quot;: &#123;</span><br><span class="line">        &quot;default&quot;: &#123;</span><br><span class="line">            &quot;expiry&quot;: &quot;43800h&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;profiles&quot;: &#123;</span><br><span class="line">            &quot;server&quot;: &#123;</span><br><span class="line">                &quot;expiry&quot;: &quot;43800h&quot;,</span><br><span class="line">                &quot;usages&quot;: [</span><br><span class="line">                    &quot;signing&quot;,</span><br><span class="line">                    &quot;key encipherment&quot;,</span><br><span class="line">                    &quot;server auth&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;client&quot;: &#123;</span><br><span class="line">                &quot;expiry&quot;: &quot;43800h&quot;,</span><br><span class="line">                &quot;usages&quot;: [</span><br><span class="line">                    &quot;signing&quot;,</span><br><span class="line">                    &quot;key encipherment&quot;,</span><br><span class="line">                    &quot;client auth&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;peer&quot;: &#123;</span><br><span class="line">                &quot;expiry&quot;: &quot;43800h&quot;,</span><br><span class="line">                &quot;usages&quot;: [</span><br><span class="line">                    &quot;signing&quot;,</span><br><span class="line">                    &quot;key encipherment&quot;,</span><br><span class="line">                    &quot;server auth&quot;,</span><br><span class="line">                    &quot;client auth&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"># 配置证书请求</span><br><span class="line">[root@tiaoban etcd]# cat &gt; ca-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;CN&quot;: &quot;Etcd&quot;,</span><br><span class="line">  &quot;key&quot;: &#123;</span><br><span class="line">    &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">    &quot;size&quot;: 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;names&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">      &quot;ST&quot;: &quot;BeiJing&quot;,</span><br><span class="line">      &quot;L&quot;: &quot;BeiJing&quot;,</span><br><span class="line">      &quot;O&quot;: &quot;Etcd&quot;,</span><br><span class="line">      &quot;OU&quot;: &quot;CA&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"># 生成CA证书</span><br><span class="line">[root@tiaoban etcd]# cfssl gencert -initca ca-csr.json | cfssljson -bare ca -</span><br><span class="line">[root@tiaoban etcd]# ls</span><br><span class="line">ca-config.json  ca.csr  ca-csr.json  ca-key.pem  ca.pem</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">生成的文件中有下面三个后面会用到:</font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">ca-key.pem: CA 证书密钥</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">ca.pem: CA 证书</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">ca-config.json: 证书签发配置，用 CA 证书来签发其它证书时需要用</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">csr 文件字段解释:</font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">CN: Common Name，apiserver 从证书中提取该字段作为请求的用户名 (User Name)</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">Organization，apiserver 从证书中提取该字段作为请求用户所属的组 (Group)</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">由于这里是 CA 证书，是签发其它证书的根证书，这个证书密钥不会分发出去作为 client 证书，所有组件使用的 client 证书都是由 CA 证书签发而来，所以 CA 证书的 CN 和 O 的名称并不重要，后续其它签发出来的证书的 CN 和 O 的名称才是有用的</font></p><h2 id="6f7fc89f"><font style="background-color:rgba(255, 255, 255, 0);">生成服务器端证书</font></h2><font style="background-color:rgba(255, 255, 255, 0);">注意hosts字段需要加上etcd全部节点的IP/主机名信息及127.0.0.1</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># 配置证书请求</span><br><span class="line">[root@tiaoban etcd]# cat &gt; server-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;server&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">        &quot;127.0.0.1&quot;,</span><br><span class="line">        &quot;192.168.10.100&quot;,</span><br><span class="line">        &quot;192.168.10.11&quot;,</span><br><span class="line">        &quot;192.168.10.12&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</span><br><span class="line">        &quot;size&quot;: 256</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;BeiJing&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;BeiJing&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"># 创建服务器端证书和私钥</span><br><span class="line">[root@tiaoban etcd]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server server-csr.json | cfssljson -bare server</span><br><span class="line"># 生成以下文件</span><br><span class="line">[root@tiaoban etcd]# ls server*</span><br><span class="line">server.csr  server-csr.json  server-key.pem  server.pem</span><br></pre></td></tr></table></figure><h2 id="9758d425"><font style="background-color:rgba(255, 255, 255, 0);">生成客户端证书</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 配置证书请求</span><br><span class="line">[root@tiaoban etcd]# cat &gt; client-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;client&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">        &quot;&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</span><br><span class="line">        &quot;size&quot;: 256</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;BeiJing&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;BeiJing&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"># 创建客户端证书和私钥</span><br><span class="line">[root@tiaoban etcd]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client client-csr.json | cfssljson -bare client</span><br><span class="line"># 生成以下文件</span><br><span class="line">[root@tiaoban etcd]# ls client*</span><br><span class="line">client.csr  client-csr.json  client-key.pem  client.pem</span><br></pre></td></tr></table></figure><h2 id="07dcf88f"><font style="background-color:rgba(255, 255, 255, 0);">生成对等证书</font></h2><font style="background-color:rgba(255, 255, 255, 0);">peer证书可以统一，也可以分别生成，如果需要统一，则需要在hosts字段加上所有节点的IP/主机名信息，如果分开生成，则hosts字段只需要填写对应节点的IP/主机名信息即可</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 配置证书请求</span><br><span class="line">[root@tiaoban etcd]# cat &gt; peer-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;peer&quot;,</span><br><span class="line">    &quot;hosts&quot;: [</span><br><span class="line">        &quot;192.168.10.100&quot;,</span><br><span class="line">        &quot;192.168.10.11&quot;,</span><br><span class="line">        &quot;192.168.10.12&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;ecdsa&quot;,</span><br><span class="line">        &quot;size&quot;: 256</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;BeiJing&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;BeiJing&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"># 创建对等证书和私钥</span><br><span class="line">[root@tiaoban etcd]# cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=peer peer-csr.json | cfssljson -bare peer</span><br><span class="line"># 生成以下文件</span><br><span class="line">[root@tiaoban etcd]# ls peer*</span><br><span class="line">peer.csr  peer-csr.json  peer-key.pem  peer.pem</span><br></pre></td></tr></table></figure><h2 id="b8513fa5"><font style="background-color:rgba(255, 255, 255, 0);">拷贝密钥到所有节点并更新系统证书库</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# mkdir -p /etc/etcd/pki</span><br><span class="line">[root@tiaoban etcd]# cp ca.pem server.pem server-key.pem peer.pem peer-key.pem /etc/etcd/pki/</span><br><span class="line">[root@tiaoban etcd]# scp ca.pem server.pem server-key.pem peer.pem peer-key.pem k8s-work1:/etc/etcd/pki/  </span><br><span class="line">[root@tiaoban etcd]# scp ca.pem server.pem server-key.pem peer.pem peer-key.pem k8s-work2:/etc/etcd/pki/</span><br><span class="line">[root@tiaoban etcd]# yum install ca-certificates -y  </span><br><span class="line">[root@tiaoban etcd]# update-ca-trust</span><br></pre></td></tr></table></figure><h2 id="f0af8621"><font style="background-color:rgba(255, 255, 255, 0);">修改etcd配置并重启etcd</font></h2><font style="background-color:rgba(255, 255, 255, 0);">主要是将原本的http链接全部改为https，并指定证书密钥地址</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# cat /etc/etcd/etcd.conf</span><br><span class="line"># 节点名称</span><br><span class="line">name: &quot;etcd1&quot;</span><br><span class="line"># 数据存储目录</span><br><span class="line">data-dir: &quot;/data/etcd&quot;</span><br><span class="line"># 对外公告的该节点客户端监听地址，这个值会告诉集群中其他节点</span><br><span class="line">advertise-client-urls: &quot;https://192.168.10.100:2379&quot;</span><br><span class="line"># 监听客户端请求的地址列表</span><br><span class="line">listen-client-urls: &quot;https://192.168.10.100:2379,https://127.0.0.1:2379&quot;</span><br><span class="line"># 监听URL，用于节点之间通信监听地址</span><br><span class="line">listen-peer-urls: &quot;https://192.168.10.100:2380&quot;</span><br><span class="line"># 服务端之间通讯使用的地址列表,该节点同伴监听地址，这个值会告诉集群中其他节点</span><br><span class="line">initial-advertise-peer-urls: &quot;https://192.168.10.100:2380&quot;</span><br><span class="line"># etcd启动时，etcd集群的节点地址列表</span><br><span class="line">initial-cluster: &quot;etcd1=https://192.168.10.100:2380,etcd2=https://192.168.10.11:2380,etcd3=https://192.168.10.12:2380&quot;</span><br><span class="line"># etcd集群的初始集群令牌</span><br><span class="line">initial-cluster-token: &#x27;etcd-cluster&#x27;</span><br><span class="line"># etcd集群初始化的状态，new代表新建集群，existing表示加入现有集群</span><br><span class="line">initial-cluster-state: &#x27;new&#x27;</span><br><span class="line"># 日志配置</span><br><span class="line">logger: zap</span><br><span class="line"></span><br><span class="line"># 客户端加密</span><br><span class="line">client-transport-security:</span><br><span class="line">  cert-file: &quot;/etc/etcd/pki/server.pem&quot;</span><br><span class="line">  key-file: &quot;/etc/etcd/pki/server-key.pem&quot;</span><br><span class="line">  client-cert-auth: True</span><br><span class="line">  trusted-ca-file: &quot;/etc/etcd/pki/ca.pem&quot;</span><br><span class="line"></span><br><span class="line"># 节点加密</span><br><span class="line">peer-transport-security:</span><br><span class="line">  cert-file: &quot;/etc/etcd/pki/peer.pem&quot;</span><br><span class="line">  key-file: &quot;/etc/etcd/pki/peer-key.pem&quot;</span><br><span class="line">  client-cert-auth: True</span><br><span class="line">  trusted-ca-file: &quot;/etc/etcd/pki/ca.pem&quot;</span><br></pre></td></tr></table></figure><h2 id="046e223e-1"><font style="background-color:rgba(255, 255, 255, 0);">访问验证</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# etcdctl --endpoints=https://192.168.10.100:2379 --cacert=ca.pem --cert=client.pem --key=client-key.pem endpoint status --cluster -w table</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|          ENDPOINT           |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|  https://192.168.10.11:2379 | 6571fb7574e87dba |  3.4.23 |   20 kB |     false |      false |       310 |         46 |                 46 |        |</span><br><span class="line">|  https://192.168.10.12:2379 | 9b449b0ff1d4c375 |  3.4.23 |   20 kB |     false |      false |       310 |         46 |                 46 |        |</span><br><span class="line">| https://192.168.10.100:2379 | f330bec74ce6cc42 |  3.4.23 |   20 kB |      true |      false |       310 |         46 |                 46 |        |</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">[root@tiaoban etcd]# etcdctl --endpoints=https://192.168.10.100:2379 --cacert=ca.pem --cert=client.pem --key=client-key.pem put /foo/bar &quot;hello world&quot;</span><br><span class="line">OK    </span><br><span class="line">[root@tiaoban etcd]# etcdctl --endpoints=https://192.168.10.100:2379 --cacert=ca.pem --cert=client.pem --key=client-key.pem get /foo/bar</span><br><span class="line">/foo/bar</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><h1 id="df8bef0b"><font style="background-color:rgba(255, 255, 255, 0);">helm部署etcd集群</font></h1>---<p><font style="background-color:rgba(255, 255, 255, 0);">使用helm可以快速部署一个etcd集群，集成了配置基于角色的访问控制和 TLS 加密，并且可以按需开启定时备份和监控指标采集。</font></p><h2 id="106d5e32"><font style="background-color:rgba(255, 255, 255, 0);">添加仓库，获取安装包</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master k8s-test]# cd etcd/</span><br><span class="line">[root@k8s-master etcd]# helm repo add my-repo https://charts.bitnami.com/bitnami</span><br><span class="line">&quot;my-repo&quot; has been added to your repositories</span><br><span class="line">[root@k8s-master etcd]# helm pull my-repo/etcd</span><br><span class="line">[root@k8s-master etcd]# ls</span><br><span class="line">etcd-8.8.0.tgz</span><br><span class="line">[root@k8s-master etcd]# tar -zxf etcd-8.8.0.tgz</span><br><span class="line">[root@k8s-master etcd]# ls</span><br><span class="line">etcd  etcd-8.8.0.tgz</span><br><span class="line">[root@k8s-master etcd]# cd etcd/</span><br><span class="line">[root@k8s-master etcd]# ls</span><br><span class="line">Chart.lock  charts  Chart.yaml  README.md  templates  values.yaml</span><br></pre></td></tr></table></figure><h2 id="2e4b9b00"><font style="background-color:rgba(255, 255, 255, 0);">修改配置</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master etcd]# vim values.yaml</span><br><span class="line"># 自定义root密码</span><br><span class="line"> 96 auth:</span><br><span class="line"> 97   ## Role-based access control parameters</span><br><span class="line"> 98   ## ref: https://etcd.io/docs/current/op-guide/authentication/</span><br><span class="line"> 99   ##</span><br><span class="line">100   rbac:</span><br><span class="line">101     ## @param auth.rbac.create Switch to enable RBAC authentication</span><br><span class="line">102     ##</span><br><span class="line">103     create: true</span><br><span class="line">104     ## @param auth.rbac.allowNoneAuthentication Allow to use etcd without configuring RBAC authentication</span><br><span class="line">105     ##</span><br><span class="line">106     allowNoneAuthentication: true</span><br><span class="line">107     ## @param auth.rbac.rootPassword Root user password. The root user is always `root`</span><br><span class="line">108     ##</span><br><span class="line">109     rootPassword: &quot;123456&quot; # 指定root密码</span><br><span class="line"></span><br><span class="line"># 自定义存储方式</span><br><span class="line">575 persistence:</span><br><span class="line">576   ## @param persistence.enabled If true, use a Persistent Volume Claim. If false, use emptyDir.</span><br><span class="line">577   ##</span><br><span class="line">578   enabled: true # 如果没有sc，此处改为false</span><br><span class="line">579   ## @param persistence.storageClass Persistent Volume Storage Class</span><br><span class="line">580   ## If defined, storageClassName: &lt;storageClass&gt;</span><br><span class="line">581   ## If set to &quot;-&quot;, storageClassName: &quot;&quot;, which disables dynamic provisioning</span><br><span class="line">582   ## If undefined (the default) or set to null, no storageClassName spec is</span><br><span class="line">583   ##   set, choosing the default provisioner.  (gp2 on AWS, standard on</span><br><span class="line">584   ##   GKE, AWS &amp; OpenStack)</span><br><span class="line">585   ##</span><br><span class="line">586   storageClass: &quot;nfs-client&quot; # 填写sc名称</span><br><span class="line"></span><br><span class="line"># 修改副本数，建议奇数3个起步</span><br><span class="line">257 ## @param replicaCount Number of etcd replicas to deploy</span><br><span class="line">258 ##</span><br><span class="line">259 replicaCount: 3</span><br></pre></td></tr></table></figure><h2 id="367c6336"><font style="background-color:rgba(255, 255, 255, 0);">安装etcd服务</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master etcd]# kubectl create ns etcd</span><br><span class="line">namespace/etcd created</span><br><span class="line">[root@k8s-master etcd]# helm install etcd -n etcd ../etcd</span><br><span class="line">NAME: etcd</span><br><span class="line">LAST DEPLOYED: Fri Mar 17 20:43:31 2023</span><br><span class="line">NAMESPACE: etcd</span><br><span class="line">STATUS: deployed</span><br><span class="line">REVISION: 1</span><br><span class="line">TEST SUITE: None</span><br><span class="line">NOTES:</span><br><span class="line">CHART NAME: etcd</span><br><span class="line">CHART VERSION: 8.8.0</span><br><span class="line">APP VERSION: 3.5.7</span><br><span class="line"></span><br><span class="line">** Please be patient while the chart is being deployed **</span><br><span class="line"></span><br><span class="line">etcd can be accessed via port 2379 on the following DNS name from within your cluster:</span><br><span class="line"></span><br><span class="line">etcd.etcd.svc.cluster.local</span><br><span class="line"></span><br><span class="line">To create a pod that you can use as a etcd client run the following command:</span><br><span class="line"></span><br><span class="line">kubectl run etcd-client --restart=&#x27;Never&#x27; --image docker.io/bitnami/etcd:3.5.7-debian-11-r14 --env ROOT_PASSWORD=$(kubectl get secret --namespace etcd etcd -o jsonpath=&quot;&#123;.data.etcd-root-password&#125;&quot; | base64 -d) --env ETCDCTL_ENDPOINTS=&quot;etcd.etcd.svc.cluster.local:2379&quot; --namespace etcd --command -- sleep infinity</span><br><span class="line"></span><br><span class="line">Then, you can set/get a key using the commands below:</span><br><span class="line"></span><br><span class="line">kubectl exec --namespace etcd -it etcd-client -- bash</span><br><span class="line">etcdctl --user root:$ROOT_PASSWORD put /message Hello</span><br><span class="line">etcdctl --user root:$ROOT_PASSWORD get /message</span><br><span class="line"></span><br><span class="line">To connect to your etcd server from outside the cluster execute the following commands:</span><br><span class="line"></span><br><span class="line">kubectl port-forward --namespace etcd svc/etcd 2379:2379 &amp;</span><br><span class="line">echo &quot;etcd URL: http://127.0.0.1:2379&quot;</span><br><span class="line"></span><br><span class="line">* As rbac is enabled you should add the flag `--user root:$ETCD_ROOT_PASSWORD` to the etcdctl commands. Use the command below to export the password:</span><br><span class="line"></span><br><span class="line">export ETCD_ROOT_PASSWORD=$(kubectl get secret --namespace etcd etcd -o jsonpath=&quot;&#123;.data.etcd-root-password&#125;&quot; | base64 -d)</span><br></pre></td></tr></table></figure><h2 id="e71d7ced"><font style="background-color:rgba(255, 255, 255, 0);">查看资源信息</font></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master etcd]# kubectl get pod -n etcd -o wide</span><br><span class="line">NAME     READY   STATUS    RESTARTS        AGE     IP             NODE        NOMINATED NODE   READINESS GATES</span><br><span class="line">etcd-0   1/1     Running   0               1m13s   10.244.1.154   k8s-work1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">etcd-1   1/1     Running   0               1m13s   10.244.2.50    k8s-work2   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">etcd-2   1/1     Running   0               1m13s   10.244.1.155   k8s-work1   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">[root@k8s-master etcd]# kubectl get svc -n etcd </span><br><span class="line">NAME            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)             AGE</span><br><span class="line">etcd            ClusterIP   10.102.32.213   &lt;none&gt;        2379/TCP,2380/TCP   9m48s</span><br><span class="line">etcd-headless   ClusterIP   None            &lt;none&gt;        2379/TCP,2380/TCP   9m48s</span><br></pre></td></tr></table></figure><h2 id="e6efac8c"><font style="background-color:rgba(255, 255, 255, 0);">访问测试</font></h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ETCD常用命令</title>
      <link href="/2025/03/05/3.ETCD%E2%80%94%E2%80%94%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2025/03/05/3.ETCD%E2%80%94%E2%80%94%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="dd367c2e"><font style="background-color:rgba(255, 255, 255, 0);">集群管理命令</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">etcdctl是一个</font><strong><font style="background-color:rgba(255, 255, 255, 0);">命令行的客户端</font></strong><font style="background-color:rgba(255, 255, 255, 0);">，它提供了一些命令，可以方便我们在对服务进行测试或者手动修改数据库内容。etcdctl命令基本用法如下所示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl [global options] command [command options] [args...]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">具体的命令选项参数可以通过 etcdctl command –help来获取相关帮助</font></p><h3 id="3867e350"><font style="background-color:rgba(255, 255, 255, 0);">环境变量</font></h3><font style="background-color:rgba(255, 255, 255, 0);">如果遇到使用了TLS加密的集群，通常每条指令都需要指定证书路径和etcd节点地址，可以把相关命令行参数添加在环境变量中，在**~/.bashrc**添加以下内容：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# cat ~/.bashrc</span><br><span class="line">HOST_1=https://192.168.10.100:2379</span><br><span class="line">HOST_2=https://192.168.10.11:2379</span><br><span class="line">HOST_3=https://192.168.10.12:2379</span><br><span class="line">ENDPOINTS=$&#123;HOST_1&#125;,$&#123;HOST_2&#125;,$&#123;HOST_3&#125;</span><br><span class="line"># 如果需要使用原生命令，在命令开头加一个\ 例如：\etcdctl command</span><br><span class="line">alias etcdctl=&quot;etcdctl --endpoints=$&#123;ENDPOINTS&#125; --cacert=/root/cfssl/etcd/ca.pem --cert=/root/cfssl/etcd/client.pem --key=/root/cfssl/etcd/client-key.pem&quot;</span><br><span class="line">alias etcdctljson=&quot;etcdctl --endpoints=$&#123;ENDPOINTS&#125; --cacert=/root/cfssl/etcd/ca.pem --cert=/root/cfssl/etcd/client.pem --key=/root/cfssl/etcd/client-key.pem --write-out=json&quot;</span><br><span class="line">alias etcdctltable=&quot;etcdctl --endpoints=$&#123;ENDPOINTS&#125; --cacert=/root/cfssl/etcd/ca.pem --cert=/root/cfssl/etcd/client.pem --key=/root/cfssl/etcd/client-key.pem --write-out=table&quot;</span><br><span class="line">[root@tiaoban etcd]# source ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="c66c9b5d"><font style="background-color:rgba(255, 255, 255, 0);">查看etcd版本</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# etcdctl version</span><br><span class="line">etcdctl version: 3.4.23</span><br><span class="line">API version: 3.4</span><br></pre></td></tr></table></figure><h3 id="e65806ec"><font style="background-color:rgba(255, 255, 255, 0);">查看etcd集群节点信息</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# etcdctl member list -w table</span><br><span class="line">+------------------+---------+-------+----------------------------+----------------------------+------------+</span><br><span class="line">|        ID        | STATUS  | NAME  |         PEER ADDRS         |        CLIENT ADDRS        | IS LEARNER |</span><br><span class="line">+------------------+---------+-------+----------------------------+----------------------------+------------+</span><br><span class="line">| 2e0eda3ad6bc6e1e | started | etcd1 | http://192.168.10.100:2380 | http://192.168.10.100:2379 |      false |</span><br><span class="line">| 5d2c1bd3b22f796f | started | etcd3 |  http://192.168.10.12:2380 |  http://192.168.10.12:2379 |      false |</span><br><span class="line">| bc34c6bd673bdf9f | started | etcd2 |  http://192.168.10.11:2380 |  http://192.168.10.11:2379 |      false |</span><br><span class="line">+------------------+---------+-------+----------------------------+----------------------------+------------+</span><br></pre></td></tr></table></figure><h3 id="bcf18e5c"><font style="background-color:rgba(255, 255, 255, 0);">查看集群健康状态</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# etcdctl endpoint status -w table</span><br><span class="line">+---------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|      ENDPOINT       |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+---------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| 192.168.10.100:2379 | 2e0eda3ad6bc6e1e |  3.4.23 |   20 kB |      true |      false |         4 |          9 |                  9 |        |</span><br><span class="line">|  192.168.10.11:2379 | bc34c6bd673bdf9f |  3.4.23 |   20 kB |     false |      false |         4 |          9 |                  9 |        |</span><br><span class="line">|  192.168.10.12:2379 | 5d2c1bd3b22f796f |  3.4.23 |   20 kB |     false |      false |         4 |          9 |                  9 |        |</span><br><span class="line">+---------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">[root@tiaoban ~]# etcdctl endpoint health -w table</span><br><span class="line">+---------------------+--------+------------+-------+</span><br><span class="line">|      ENDPOINT       | HEALTH |    TOOK    | ERROR |</span><br><span class="line">+---------------------+--------+------------+-------+</span><br><span class="line">| 192.168.10.100:2379 |   true | 4.391924ms |       |</span><br><span class="line">|  192.168.10.11:2379 |   true | 7.091404ms |       |</span><br><span class="line">|  192.168.10.12:2379 |   true | 7.571706ms |       |</span><br><span class="line">+---------------------+--------+------------+-------+</span><br></pre></td></tr></table></figure><h3 id="cd2c454b"><font style="background-color:rgba(255, 255, 255, 0);">查看告警事件</font></h3><font style="background-color:rgba(255, 255, 255, 0);">如果内部出现问题，会触发告警，可以通过命令查看告警引起原因，命令如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl alarm &lt;subcommand&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">常用的子命令主要有两个：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 查看所有告警</span><br><span class="line">etcdctl alarm list</span><br><span class="line"># 解除所有告警</span><br><span class="line">etcdctl alarm disarm</span><br></pre></td></tr></table></figure><h3 id="c3514e94"><font style="background-color:rgba(255, 255, 255, 0);">添加成员</font></h3><font style="background-color:rgba(255, 255, 255, 0);">当集群部署完成后，后续可能需要进行节点扩缩容，就可以使用member命令管理节点。先查看当前集群信息</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# etcdctl endpoint status --cluster -w table</span><br><span class="line">+----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|          ENDPOINT          |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| http://192.168.10.100:2379 | 2e0eda3ad6bc6e1e |  3.4.23 |   20 kB |      true |      false |         8 |         16 |                 16 |        |</span><br><span class="line">|  http://192.168.10.12:2379 | 5d2c1bd3b22f796f |  3.4.23 |   20 kB |     false |      false |         8 |         16 |                 16 |        |</span><br><span class="line">|  http://192.168.10.11:2379 | bc34c6bd673bdf9f |  3.4.23 |   20 kB |     false |      false |         8 |         16 |                 16 |        |</span><br><span class="line">+----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">在启动新的etcd节点前，先向etcd集群声明添加节点的peer-urls和节点名称</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# etcdctl member add etcd4 --peer-urls=http://192.168.10.100:12380</span><br><span class="line">Member b112a60ec305e42a added to cluster cd30cff36981306b</span><br><span class="line"></span><br><span class="line">ETCD_NAME=&quot;etcd4&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER=&quot;etcd1=http://192.168.10.100:2380,etcd3=http://192.168.10.12:2380,etcd4=http://192.168.10.100:12380,etcd2=http://192.168.10.11:2380&quot;</span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS=&quot;http://192.168.10.100:12380&quot;</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE=&quot;existing&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# mkdir -p /opt/docker/etcd/&#123;conf,data&#125;</span><br><span class="line">[root@tiaoban etcd]# chown -R 1001:1001 /opt/docker/etcd/data/</span><br><span class="line">[root@tiaoban etcd]# cat /opt/docker/etcd/conf/etcd.conf </span><br><span class="line"># 节点名称</span><br><span class="line">name: &#x27;etcd4&#x27;</span><br><span class="line"># 指定节点的数据存储目录</span><br><span class="line">data-dir: &#x27;/data&#x27;</span><br><span class="line"># 监听客户端请求的地址列表</span><br><span class="line">listen-client-urls: &quot;http://192.168.10.100:12379&quot;</span><br><span class="line"># 监听URL，用于节点之间通信监听地址</span><br><span class="line">listen-peer-urls: &quot;http://192.168.10.100:12380&quot;</span><br><span class="line"># 对外公告的该节点客户端监听地址，这个值会告诉集群中其他节点</span><br><span class="line">advertise-client-urls: &quot;http://192.168.10.100:12379&quot;</span><br><span class="line"># 服务端之间通讯使用的地址列表,该节点同伴监听地址，这个值会告诉集群中其他节点</span><br><span class="line">initial-advertise-peer-urls: &quot;http://192.168.10.100:12380&quot;</span><br><span class="line"># etcd启动时，etcd集群的节点地址列表</span><br><span class="line">initial-cluster: &quot;etcd1=http://192.168.10.100:2380,etcd3=http://192.168.10.12:2380,etcd2=http://192.168.10.11:2380,etcd4=http://192.168.10.100:12380&quot;</span><br><span class="line"># etcd集群初始化的状态，new代表新建集群，existing表示加入现有集群</span><br><span class="line">initial-cluster-state: &#x27;existing&#x27;</span><br><span class="line">[root@tiaoban etcd]# docker run --name=etcd4 --net=host -d -v /opt/docker/etcd/data:/data -v /opt/docker/etcd/conf:/conf bitnami/etcd:latest etcd --config-file /conf/etcd.conf</span><br><span class="line">a142f38c785f2b7c217fb15f01ac62addfeb22eeb44da00363b1f7b5ce398439</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">etcd4启动后，查看集群节点信息：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# etcdctl endpoint status --cluster -w table</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|          ENDPOINT           |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|  http://192.168.10.100:2379 | 2e0eda3ad6bc6e1e |  3.4.23 |   20 kB |      true |      false |         6 |         11 |                 11 |        |</span><br><span class="line">|   http://192.168.10.12:2379 | 5d2c1bd3b22f796f |  3.4.23 |   20 kB |     false |      false |         6 |         11 |                 11 |        |</span><br><span class="line">| http://192.168.10.100:12379 | b112a60ec305e42a |  3.4.23 |   20 kB |     false |      false |         6 |         11 |                 11 |        |</span><br><span class="line">|   http://192.168.10.11:2379 | bc34c6bd673bdf9f |  3.4.23 |   20 kB |     false |      false |         6 |         11 |                 11 |        |</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br></pre></td></tr></table></figure><h3 id="8456c2a4"><font style="background-color:rgba(255, 255, 255, 0);">更新成员</font></h3><font style="background-color:rgba(255, 255, 255, 0);">当etcd节点故障，启动etcd时报错</font>`<font style="background-color:rgba(255, 255, 255, 0);">**member count is unequal**</font>`<font style="background-color:rgba(255, 255, 255, 0);">。如果有保留的数据目录下的文件时，可以通过使用 member update 命令，在保留 etcd 数据的情况下初始化集群数据，重新构建一个新的etcd集群节点。  </font><font style="background-color:rgba(255, 255, 255, 0);">模拟192.168.10.100:12380节点故障，但数据目录文件有备份，启动一个新的节点，地址为：192.168.10.100:22380</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 停用旧节点</span><br><span class="line">[root@tiaoban etcd]# docker stop etcd4</span><br><span class="line">etcd4</span><br><span class="line">[root@tiaoban etcd]# docker rm etcd4</span><br><span class="line">etcd4</span><br><span class="line"></span><br><span class="line"># 更新节点地址</span><br><span class="line">[root@tiaoban etcd]# cat conf/etcd.conf </span><br><span class="line"># 节点名称</span><br><span class="line">name: &#x27;etcd4&#x27;</span><br><span class="line"># 指定节点的数据存储目录</span><br><span class="line">data-dir: &#x27;/data&#x27;</span><br><span class="line"># 监听客户端请求的地址列表</span><br><span class="line">listen-client-urls: &quot;http://192.168.10.100:22379&quot;</span><br><span class="line"># 监听URL，用于节点之间通信监听地址</span><br><span class="line">listen-peer-urls: &quot;http://192.168.10.100:22380&quot;</span><br><span class="line"># 对外公告的该节点客户端监听地址，这个值会告诉集群中其他节点</span><br><span class="line">advertise-client-urls: &quot;http://192.168.10.100:22379&quot;</span><br><span class="line"># 服务端之间通讯使用的地址列表,该节点同伴监听地址，这个值会告诉集群中其他节点</span><br><span class="line">initial-advertise-peer-urls: &quot;http://192.168.10.100:22380&quot;</span><br><span class="line"># etcd启动时，etcd集群的节点地址列表</span><br><span class="line">initial-cluster: &quot;etcd1=http://192.168.10.100:2380,etcd2=http://192.168.10.11:2380,etcd3=http://192.168.10.12:2380,etcd4=http://192.168.10.100:22380&quot;</span><br><span class="line"># etcd集群初始化的状态，new代表新建集群，existing表示加入现有集群</span><br><span class="line">initial-cluster-state: &#x27;existing&#x27;</span><br><span class="line"></span><br><span class="line"># 启动新节点</span><br><span class="line">[root@tiaoban etcd]# docker run --name=etcd4 --net=host -d -v /opt/docker/etcd/data:/data -v /opt/docker/etcd/conf:/conf bitnami/etcd:3.4.23 etcd --config-file /conf/etcd.conf</span><br><span class="line">03c03ac7e6b50a8600cefe443ecafdb03f8f61f153b1a1138029c1726826d74e</span><br><span class="line">[root@tiaoban etcd]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE                 COMMAND                   CREATED         STATUS         PORTS     NAMES</span><br><span class="line">03c03ac7e6b5   bitnami/etcd:3.4.23   &quot;/opt/bitnami/script…&quot;   3 seconds ago   Up 3 seconds             etcd4</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">执行更新member操作，指定新的节点地址。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# etcdctl member update b112a60ec305e42a --peer-urls=http://192.168.10.100:22380</span><br><span class="line">Member b112a60ec305e42a updated in cluster cd30cff36981306b</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">查看集群节点信息，节点信息更新完成。</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# etcdctl endpoint status --cluster -w table</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|          ENDPOINT           |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|  http://192.168.10.100:2379 | 2e0eda3ad6bc6e1e |  3.4.23 |   20 kB |      true |      false |         6 |         14 |                 14 |        |</span><br><span class="line">|   http://192.168.10.12:2379 | 5d2c1bd3b22f796f |  3.4.23 |   20 kB |     false |      false |         6 |         14 |                 14 |        |</span><br><span class="line">| http://192.168.10.100:22379 | b112a60ec305e42a |  3.4.23 |   20 kB |     false |      false |         6 |         14 |                 14 |        |</span><br><span class="line">|   http://192.168.10.11:2379 | bc34c6bd673bdf9f |  3.4.23 |   20 kB |     false |      false |         6 |         14 |                 14 |        |</span><br><span class="line">+-----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br></pre></td></tr></table></figure><h3 id="93020cb7"><font style="background-color:rgba(255, 255, 255, 0);">删除成员</font></h3><font style="background-color:rgba(255, 255, 255, 0);">主要用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl member remove &lt;memberID&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">模拟192.168.10.100:22379节点下线操作</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# docker stop etcd4</span><br><span class="line">etcd4</span><br><span class="line">[root@tiaoban etcd]# docker rm etcd4</span><br><span class="line">etcd4</span><br><span class="line">[root@tiaoban etcd]# etcdctl member remove b112a60ec305e42a</span><br><span class="line">Member b112a60ec305e42a removed from cluster cd30cff36981306b</span><br><span class="line">[root@tiaoban etcd]# etcdctl endpoint status --cluster -w table</span><br><span class="line">+----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|          ENDPOINT          |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| http://192.168.10.100:2379 | 2e0eda3ad6bc6e1e |  3.4.23 |   20 kB |      true |      false |         6 |         16 |                 16 |        |</span><br><span class="line">|  http://192.168.10.12:2379 | 5d2c1bd3b22f796f |  3.4.23 |   20 kB |     false |      false |         6 |         16 |                 16 |        |</span><br><span class="line">|  http://192.168.10.11:2379 | bc34c6bd673bdf9f |  3.4.23 |   20 kB |     false |      false |         6 |         16 |                 16 |        |</span><br><span class="line">+----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br></pre></td></tr></table></figure><h2 id="f4ce7445"><font style="background-color:rgba(255, 255, 255, 0);">数据库操作命令</font></h2>---<h3 id="7b67e8eb"><font style="background-color:rgba(255, 255, 255, 0);">增加(put)</font></h3><font style="background-color:rgba(255, 255, 255, 0);">添加一个键值，基本用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl put [options] &lt;key&gt; &lt;value&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">常用参数如下所示：</font></p><table><thead><tr><th><strong><font style="background-color:rgba(255, 255, 255, 0);">参数</font></strong></th><th><strong><font style="background-color:rgba(255, 255, 255, 0);">功能描述</font></strong></th></tr></thead><tbody><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–prev-kv</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">输出修改前的键值</font></td></tr></tbody></table><p><font style="background-color:rgba(255, 255, 255, 0);">注意事项：</font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">其中value接受从stdin的输入内容</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">如果value是以横线-开始，将会被视为flag，如果不希望出现这种情况，可以使用两个横线代替–</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">若键已经存在，则进行更新并覆盖原有值，若不存在，则进行添加</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">示例</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban etcd]# etcdctl put name cuiliang</span><br><span class="line">OK</span><br><span class="line">[root@tiaoban etcd]# etcdctl put location -- -beijing</span><br><span class="line">OK</span><br><span class="line">[root@tiaoban etcd]# etcdctl put foo1 bar1</span><br><span class="line">OK</span><br><span class="line">[root@tiaoban etcd]# etcdctl put foo2 bar2</span><br><span class="line">OK</span><br><span class="line">[root@tiaoban etcd]# etcdctl put foo3 bar3</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h3 id="b9026f46"><font style="background-color:rgba(255, 255, 255, 0);">查询(get)</font></h3><font style="background-color:rgba(255, 255, 255, 0);">查询键值，基本用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl get [options] &lt;key&gt; [range_end] [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">常用参数如下所示：</font></p><table><thead><tr><th><strong><font style="background-color:rgba(255, 255, 255, 0);">参数</font></strong></th><th><strong><font style="background-color:rgba(255, 255, 255, 0);">功能描述</font></strong></th></tr></thead><tbody><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–hex</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">以十六进制形式输出</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–limit number</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">设置输出结果的最大值</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–prefix</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">根据prefix进行匹配key</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–order</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">对输出结果进行排序，ASCEND 或 DESCEND</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–sort-by</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">按给定字段排序，CREATE, KEY, MODIFY, VALUE, VERSION</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–print-value-only</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">仅输出value值</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–from-key</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">按byte进行比较，获取大于等于指定key的结果</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–keys-only</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">仅获取keys</font></td></tr></tbody></table><p><font style="background-color:rgba(255, 255, 255, 0);">示例</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 获取键值</span><br><span class="line">[root@tiaoban etcd]# etcdctl get name</span><br><span class="line">name</span><br><span class="line">cuiliang</span><br><span class="line"># 只获取值</span><br><span class="line">[root@tiaoban etcd]# etcdctl get location --print-value-only</span><br><span class="line">-beijing</span><br><span class="line"># 批量取从foo1到foo3的值，不包括foo3</span><br><span class="line">[root@tiaoban etcd]# etcdctl get foo foo3 --print-value-only</span><br><span class="line">bar1</span><br><span class="line">bar2</span><br><span class="line"># 批量获取前缀为foo的值</span><br><span class="line">[root@tiaoban etcd]# etcdctl get --prefix foo --print-value-only</span><br><span class="line">bar1</span><br><span class="line">bar2</span><br><span class="line">bar3</span><br><span class="line"># 批量获取符合前缀的前两个值</span><br><span class="line">[root@tiaoban etcd]# etcdctl get --prefix --limit=2 foo --print-value-only</span><br><span class="line">bar1</span><br><span class="line">bar2</span><br><span class="line"># 批量获取前缀为foo的值，并排序</span><br><span class="line">[root@tiaoban etcd]# etcdctl get --prefix foo --print-value-only --order DESCEND</span><br><span class="line">bar3</span><br><span class="line">bar2</span><br><span class="line">bar1</span><br></pre></td></tr></table></figure><h3 id="800a3375"><font style="background-color:rgba(255, 255, 255, 0);">删除(del)</font></h3><font style="background-color:rgba(255, 255, 255, 0);">删除键值，基本用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl del [options] &lt;key&gt; [range_end] [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">常用参数如下所示：</font></p><table><thead><tr><th><strong><font style="background-color:rgba(255, 255, 255, 0);">参数</font></strong></th><th><strong><font style="background-color:rgba(255, 255, 255, 0);">功能描述</font></strong></th></tr></thead><tbody><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–prefix</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">根据prefix进行匹配删除</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–prev-kv</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">输出删除的键值</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">–from-key</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">按byte进行比较，删除大于等于指定key的结果</font></td></tr></tbody></table><p><font style="background-color:rgba(255, 255, 255, 0);">示例</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 删除name的键值</span><br><span class="line">[root@tiaoban etcd]# etcdctl del name</span><br><span class="line">1</span><br><span class="line"># 删除从foo1到foo3且不包含foo3的键值</span><br><span class="line">[root@tiaoban etcd]# etcdctl del foo1 foo3</span><br><span class="line">2</span><br><span class="line"># 删除前缀为foo的所有键值</span><br><span class="line">[root@tiaoban etcd]# etcdctl del --prefix foo</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="1e15cca4"><font style="background-color:rgba(255, 255, 255, 0);">更新(put覆盖)</font></h3><font style="background-color:rgba(255, 255, 255, 0);">若键已经存在，则进行更新并覆盖原有值，若不存在，则进行添加。</font><h3 id="9634c1ef"><font style="background-color:rgba(255, 255, 255, 0);">查询键历史记录查询</font></h3><font style="background-color:rgba(255, 255, 255, 0);">etcd在每次键值变更时，都会记录变更信息，便于我们查看键变更记录</font><h2 id="2c1031f0"><font style="background-color:rgba(255, 255, 255, 0);">监听命令</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">watch是监听键或前缀发生改变的事件流， 主要用法如下所示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl watch [options] [key or prefix] [range_end] [--] [exec-command arg1 arg2 ...] [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">示例如下所示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 对某个key监听操作，当key1发生改变时，会返回最新值</span><br><span class="line">etcdctl watch name</span><br><span class="line"># 监听key前缀</span><br><span class="line">etcdctl watch name --prefix</span><br><span class="line"># 监听到改变后执行相关操作</span><br><span class="line">etcdctl watch name --  etcdctl get age</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">etcdctl watch name – etcdctl put name Kevin，如果写成，会不会变成死循环，导致无限监视，尽量避免。<br></font><font style="background-color:rgba(255, 255, 255, 0);">示例</font></p><h3 id="beae6e09"><font style="background-color:rgba(255, 255, 255, 0);">监听单个键</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"># 启动监听命令</span><br><span class="line">[root@tiaoban etcd]# etcdctl watch foo</span><br><span class="line"></span><br><span class="line">#另一个控制台执行新增命令</span><br><span class="line">[root@tiaoban ~]# etcdctl put foo bar</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"># 观察控制台监听输出</span><br><span class="line">[root@tiaoban etcd]# etcdctl watch foo</span><br><span class="line">PUT</span><br><span class="line">foo</span><br><span class="line">bar</span><br><span class="line"></span><br><span class="line">#另一个控制台执行更新命令</span><br><span class="line">[root@tiaoban ~]# etcdctl put foo bar123</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"># 观察控制台监听输出</span><br><span class="line">[root@tiaoban etcd]# etcdctl watch foo</span><br><span class="line">PUT</span><br><span class="line">foo</span><br><span class="line">bar</span><br><span class="line">PUT</span><br><span class="line">foo</span><br><span class="line">bar123</span><br><span class="line"></span><br><span class="line">#另一个控制台执行删除命令</span><br><span class="line">[root@tiaoban ~]# etcdctl del foo</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line"># 观察控制台监听输出</span><br><span class="line">[root@tiaoban etcd]# etcdctl watch foo</span><br><span class="line">PUT</span><br><span class="line">foo</span><br><span class="line">bar</span><br><span class="line">PUT</span><br><span class="line">foo</span><br><span class="line">bar123</span><br><span class="line">DELETE</span><br><span class="line">foo</span><br></pre></td></tr></table></figure><h3 id="8545b8fc"><font style="background-color:rgba(255, 255, 255, 0);">同时监听多个键</font></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># 监听前缀为foo的键</span><br><span class="line">[root@tiaoban etcd]# etcdctl watch --prefix foo</span><br><span class="line"># 另一个控制台执行操作</span><br><span class="line">[root@tiaoban ~]# etcdctl put foo1 bar1</span><br><span class="line">OK</span><br><span class="line">[root@tiaoban ~]# etcdctl put foo2 bar2</span><br><span class="line">OK</span><br><span class="line">[root@tiaoban ~]# etcdctl del foo1</span><br><span class="line">1</span><br><span class="line"># 观察控制台输出</span><br><span class="line">[root@tiaoban etcd]# etcdctl watch --prefix foo</span><br><span class="line">PUT</span><br><span class="line">foo1</span><br><span class="line">bar1</span><br><span class="line">PUT</span><br><span class="line">foo2</span><br><span class="line">bar2</span><br><span class="line">DELETE</span><br><span class="line">foo1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 监听指定的多个键</span><br><span class="line">[root@tiaoban etcd]# etcdctl watch -i</span><br><span class="line">watch name</span><br><span class="line">watch location</span><br><span class="line"></span><br><span class="line"># 另一个控制台执行操作</span><br><span class="line">[root@tiaoban ~]# etcdctl put name cuiliang</span><br><span class="line">OK</span><br><span class="line">[root@tiaoban ~]# etcdctl del name</span><br><span class="line">1</span><br><span class="line">[root@tiaoban ~]# etcdctl put location beijing</span><br><span class="line">OK</span><br><span class="line"># 观察控制台输出</span><br><span class="line">[root@tiaoban etcd]# etcdctl watch -i</span><br><span class="line">watch name</span><br><span class="line">watch location</span><br><span class="line">PUT</span><br><span class="line">name</span><br><span class="line">cuiliang</span><br><span class="line">DELETE</span><br><span class="line">name</span><br><span class="line"></span><br><span class="line">PUT</span><br><span class="line">location</span><br><span class="line">beijing</span><br></pre></td></tr></table></figure><h2 id="dc4e3ec3"><font style="background-color:rgba(255, 255, 255, 0);">租约命令</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">租约具有生命周期，需要为租约授予一个TTL(time to live)，将租约绑定到一个key上，则key的生命周期与租约一致，可续租，可撤销租约，类似于redis为键设置过期时间。其主要用法如下所示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl lease &lt;subcommand&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><h3 id="70ab4a10"><font style="background-color:rgba(255, 255, 255, 0);">添加租约</font></h3><font style="background-color:rgba(255, 255, 255, 0);">主要用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl lease grant &lt;ttl&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">示例：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 设置60秒后过期时间</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease grant 60</span><br><span class="line">lease 6e1e86f4c6512a2b granted with TTL(60s)</span><br><span class="line"># 把foo和租约绑定，设置成60秒后过期</span><br><span class="line">[root@tiaoban etcd]# etcdctl put --lease=6e1e86f4c6512a29 foo bar</span><br><span class="line">OK</span><br><span class="line"># 租约期内查询键值</span><br><span class="line">[root@tiaoban etcd]# etcdctl get foo</span><br><span class="line">foo</span><br><span class="line">bar</span><br><span class="line"># 租约期外查询键值</span><br><span class="line">[root@tiaoban etcd]# etcdctl get foo</span><br><span class="line">返回为空</span><br></pre></td></tr></table></figure><h3 id="84e9d55c"><font style="background-color:rgba(255, 255, 255, 0);">查看租约</font></h3><font style="background-color:rgba(255, 255, 255, 0);">查看租约信息，以便续租或查看租约是否仍然存在或已过期。  </font><font style="background-color:rgba(255, 255, 255, 0);">查看租约详情主要用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl lease timetolive &lt;leaseID&gt; [options] [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">示例：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 添加一个50秒的租约</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease grant 50</span><br><span class="line">lease 6e1e86f4c6512a32 granted with TTL(50s)</span><br><span class="line"># 将name键绑定到6e1e86f4c6512a32租约上</span><br><span class="line">[root@tiaoban etcd]# etcdctl put --lease=6e1e86f4c6512a32 name cuiliang</span><br><span class="line">OK</span><br><span class="line"># 查看所有租约列表</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease list</span><br><span class="line">found 1 leases</span><br><span class="line">6e1e86f4c6512a32</span><br><span class="line"># 查看租约详情，remaining(6s) 剩余有效时间6秒；--keys 获取租约绑定的 key</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease timetolive --keys 6e1e86f4c6512a32</span><br><span class="line">lease 6e1e86f4c6512a32 granted with TTL(50s), remaining(6s), attached keys([name])</span><br></pre></td></tr></table></figure><h3 id="536b7b10"><font style="background-color:rgba(255, 255, 255, 0);">租约续约</font></h3><font style="background-color:rgba(255, 255, 255, 0);">通过刷新 TTL 值来保持租约的有效，使其不会过期。  </font><font style="background-color:rgba(255, 255, 255, 0);">主要用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl lease keep-alive [options] &lt;leaseID&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">示例如下所示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 设置60秒后过期租约</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease grant 60</span><br><span class="line">lease 6e1e86f4c6512a36 granted with TTL(60s)</span><br><span class="line"># 把name和租约绑定，设置成 60 秒后过期</span><br><span class="line">[root@tiaoban etcd]# etcdctl put --lease=6e1e86f4c6512a36 name cuiliang</span><br><span class="line">OK</span><br><span class="line"># 自动定时执行续约，续约成功后每次租约为60秒</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease keep-alive 6e1e86f4c6512a36</span><br><span class="line">lease 6e1e86f4c6512a36 keepalived with TTL(60)</span><br><span class="line">lease 6e1e86f4c6512a36 keepalived with TTL(60)</span><br><span class="line">lease 6e1e86f4c6512a36 keepalived with TTL(60)</span><br><span class="line">……</span><br></pre></td></tr></table></figure><h3 id="92a5dd2d"><font style="background-color:rgba(255, 255, 255, 0);">删除租约</font></h3><font style="background-color:rgba(255, 255, 255, 0);">通过租约 ID 撤销租约，撤销租约将删除其所有绑定的 key。  </font><font style="background-color:rgba(255, 255, 255, 0);">主要用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl lease revoke &lt;leaseID&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">示例如下所示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 设置600秒后过期租约</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease grant 600</span><br><span class="line">lease 6e1e86f4c6512a39 granted with TTL(600s)</span><br><span class="line"># 把foo和租约绑定，600秒后过期</span><br><span class="line">[root@tiaoban etcd]# etcdctl put --lease=6e1e86f4c6512a39 foo bar</span><br><span class="line">OK</span><br><span class="line"># 查看租约详情</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease timetolive --keys 6e1e86f4c6512a39</span><br><span class="line">lease 6e1e86f4c6512a39 granted with TTL(600s), remaining(556s), attached keys([foo])</span><br><span class="line"># 删除租约</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease revoke 6e1e86f4c6512a39</span><br><span class="line">lease 6e1e86f4c6512a39 revoked</span><br><span class="line"># 查看租约详情</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease timetolive --keys 6e1e86f4c6512a39</span><br><span class="line">lease 6e1e86f4c6512a39 already expired</span><br><span class="line"># 获取键值</span><br><span class="line">[root@tiaoban etcd]# etcdctl get foo</span><br><span class="line">返回为空</span><br></pre></td></tr></table></figure><h3 id="1f35a899"><font style="background-color:rgba(255, 255, 255, 0);">多key同一租约</font></h3><font style="background-color:rgba(255, 255, 255, 0);">一个租约支持绑定多个 key</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 设置60秒后过期的租约</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease grant 60</span><br><span class="line">lease 6e1e86f4c6512a3e granted with TTL(60s)</span><br><span class="line"># foo1与租约绑定</span><br><span class="line">[root@tiaoban etcd]# etcdctl put --lease=6e1e86f4c6512a3e foo1 bar1</span><br><span class="line">OK</span><br><span class="line"># foo2与租约绑定</span><br><span class="line">[root@tiaoban etcd]# etcdctl put --lease=6e1e86f4c6512a3e foo2 bar2</span><br><span class="line">OK</span><br><span class="line"># 查看租约详情</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease timetolive --keys 6e1e86f4c6512a3e</span><br><span class="line">lease 6e1e86f4c6512a3e granted with TTL(60s), remaining(14s), attached keys([foo1 foo2])</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">租约过期后，所有 key 值都会被删除，因此：</font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">当租约只绑定了一个 key 时，想删除这个 key，最好的办法是撤销它的租约，而不是直接删除这个 key。</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">当租约没有绑定key时，应主动把它撤销掉，单纯删除 key 后，续约操作持续进行，会造成内存泄露。</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">直接删除key演示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 设置租约并绑定 zoo1</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease grant 60</span><br><span class="line">lease 6e1e86f4c6512a43 granted with TTL(60s)</span><br><span class="line">[root@tiaoban etcd]# etcdctl --lease=6e1e86f4c6512a43 put zoo1 val1</span><br><span class="line">OK</span><br><span class="line"># 续约</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease keep-alive 6e1e86f4c6512a43</span><br><span class="line">lease 6e1e86f4c6512a43 keepalived with TTL(60)</span><br><span class="line"></span><br><span class="line"># 此时在另一个控制台执行删除key操作：</span><br><span class="line">[root@tiaoban ~]# etcdctl del zoo1</span><br><span class="line">1</span><br><span class="line"># 单纯删除 key 后，续约操作持续进行，会造成内存泄露</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease keep-alive 6e1e86f4c6512a43</span><br><span class="line">lease 6e1e86f4c6512a43 keepalived with TTL(60)</span><br><span class="line">lease 6e1e86f4c6512a43 keepalived with TTL(60)</span><br><span class="line">lease 6e1e86f4c6512a43 keepalived with TTL(60)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">撤销key的租约演示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 设置租约并绑定 zoo1</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease grant 50</span><br><span class="line">lease 32698142c52a1717 granted with TTL(50s)</span><br><span class="line">[root@tiaoban etcd]# etcdctl --lease=32698142c52a1717 put zoo1 val1</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"># 续约</span><br><span class="line">[root@tiaoban etcd]# etcdctl lease keep-alive 32698142c52a1717</span><br><span class="line">lease 32698142c52a1717 keepalived with TTL(50)</span><br><span class="line">lease 32698142c52a1717 keepalived with TTL(50)</span><br><span class="line"></span><br><span class="line"># 另一个控制台执行：etcdctl lease revoke 32698142c52a1717</span><br><span class="line"></span><br><span class="line"># 续约撤销并退出</span><br><span class="line">lease 32698142c52a1717 expired or revoked.</span><br><span class="line">[root@tiaoban etcd]# etcdctl get zoo1</span><br><span class="line"># 返回空</span><br></pre></td></tr></table></figure><h2 id="17c28d47"><font style="background-color:rgba(255, 255, 255, 0);">备份恢复命令</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">主要用于管理节点的快照，其主要用法如下所示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl snapshot &lt;subcommand&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><h3 id="f1184f61"><font style="background-color:rgba(255, 255, 255, 0);">生成快照</font></h3><font style="background-color:rgba(255, 255, 255, 0);">其主要用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl snapshot save &lt;filename&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">示例如下所示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl snapshot save etcd-snapshot.db</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><h3 id="077a284f"><font style="background-color:rgba(255, 255, 255, 0);">查看快照</font></h3><font style="background-color:rgba(255, 255, 255, 0);">其主要用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl snapshot status &lt;filename&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">示例如下所示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl snapshot status etcd-snapshot.db -w table</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><h3 id="af357963"><font style="background-color:rgba(255, 255, 255, 0);">恢复快照</font></h3><font style="background-color:rgba(255, 255, 255, 0);">其主要用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl snapshot restore &lt;filename&gt; [options] [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><h3 id="0255a4be"><font style="background-color:rgba(255, 255, 255, 0);">备份恢复演示</font></h3>+ <font style="background-color:rgba(255, 255, 255, 0);">新建一个名为name的key</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# etcdctl put name cuiliang</span><br><span class="line">OK</span><br><span class="line">[root@tiaoban ~]# etcdctl get name</span><br><span class="line">name</span><br><span class="line">cuiliang</span><br><span class="line">[root@tiaoban ~]# etcdctl endpoint status -w table</span><br><span class="line">+---------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|      ENDPOINT       |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+---------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| 192.168.10.100:2379 | 2e0eda3ad6bc6e1e |  3.4.23 |   20 kB |      true |      false |         4 |         10 |                 10 |        |</span><br><span class="line">|  192.168.10.11:2379 | bc34c6bd673bdf9f |  3.4.23 |   20 kB |     false |      false |         4 |         10 |                 10 |        |</span><br><span class="line">|  192.168.10.12:2379 | 5d2c1bd3b22f796f |  3.4.23 |   20 kB |     false |      false |         4 |         10 |                 10 |        |</span><br><span class="line">+---------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">生成快照，创建名为snap.db的备份文件</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-work1 ~]# etcdctl snapshot save snap.db</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:1679220752.5883558,&quot;caller&quot;:&quot;snapshot/v3_snapshot.go:119&quot;,&quot;msg&quot;:&quot;created temporary db file&quot;,&quot;path&quot;:&quot;snap.db.part&quot;&#125;</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:&quot;2023-03-19T18:12:32.592+0800&quot;,&quot;caller&quot;:&quot;clientv3/maintenance.go:200&quot;,&quot;msg&quot;:&quot;opened snapshot stream; downloading&quot;&#125;</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:1679220752.5924425,&quot;caller&quot;:&quot;snapshot/v3_snapshot.go:127&quot;,&quot;msg&quot;:&quot;fetching snapshot&quot;,&quot;endpoint&quot;:&quot;127.0.0.1:2379&quot;&#125;</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:&quot;2023-03-19T18:12:32.595+0800&quot;,&quot;caller&quot;:&quot;clientv3/maintenance.go:208&quot;,&quot;msg&quot;:&quot;completed snapshot read; closing&quot;&#125;</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:1679220752.597161,&quot;caller&quot;:&quot;snapshot/v3_snapshot.go:142&quot;,&quot;msg&quot;:&quot;fetched snapshot&quot;,&quot;endpoint&quot;:&quot;127.0.0.1:2379&quot;,&quot;size&quot;:&quot;25 kB&quot;,&quot;took&quot;:0.008507131&#125;</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:1679220752.5973082,&quot;caller&quot;:&quot;snapshot/v3_snapshot.go:152&quot;,&quot;msg&quot;:&quot;saved&quot;,&quot;path&quot;:&quot;snap.db&quot;&#125;</span><br><span class="line">Snapshot saved at snap.db</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">查看备份文件详情</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-work1 ~]# ls -lh snap.db </span><br><span class="line">-rw------- 1 root root 25K 3月  19 18:12 snap.db</span><br><span class="line">[root@k8s-work1 ~]# etcdctl snapshot status snap.db -w table</span><br><span class="line">+----------+----------+------------+------------+</span><br><span class="line">|   HASH   | REVISION | TOTAL KEYS | TOTAL SIZE |</span><br><span class="line">+----------+----------+------------+------------+</span><br><span class="line">| 8f097221 |       39 |         47 |      25 kB |</span><br><span class="line">+----------+----------+------------+------------+</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">把快照文件传到其他节点</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-work1 ~]# scp snap.db 192.168.10.100:/root                                                                                                                      100%   24KB   6.9MB/s   00:00    </span><br><span class="line">[root@k8s-work1 ~]# scp snap.db 192.168.10.12:/root</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">停止所有节点的etcd服务，并删除数据目录</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-work1 ~]# systemctl stop etcd</span><br><span class="line">[root@k8s-work1 ~]# rm -rf /data/etcd</span><br><span class="line"># 其余两个节点相同操作</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">在所有节点上开始恢复数据</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-work1 ~]# etcdctl snapshot restore snap.db --name=etcd2 --data-dir=/data/etcd/cluster.etcd --initial-cluster=etcd1=http://192.168.10.100:2380,etcd2=http://192.168.10.11:2380,etcd3=http://192.168.10.12:2380 --initial-advertise-peer-urls=http://192.168.10.11:2380</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:1679221421.2932272,&quot;caller&quot;:&quot;snapshot/v3_snapshot.go:296&quot;,&quot;msg&quot;:&quot;restoring snapshot&quot;,&quot;path&quot;:&quot;snap.db&quot;,&quot;wal-dir&quot;:&quot;/data/etcd/cluster.etcd/member/wal&quot;,&quot;data-dir&quot;:&quot;/data/etcd/cluster.etcd&quot;,&quot;snap-dir&quot;:&quot;/data/etcd/cluster.etcd/member/snap&quot;&#125;</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:1679221421.3019996,&quot;caller&quot;:&quot;membership/cluster.go:392&quot;,&quot;msg&quot;:&quot;added member&quot;,&quot;cluster-id&quot;:&quot;cd30cff36981306b&quot;,&quot;local-member-id&quot;:&quot;0&quot;,&quot;added-peer-id&quot;:&quot;2e0eda3ad6bc6e1e&quot;,&quot;added-peer-peer-urls&quot;:[&quot;http://192.168.10.100:2380&quot;]&#125;</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:1679221421.30208,&quot;caller&quot;:&quot;membership/cluster.go:392&quot;,&quot;msg&quot;:&quot;added member&quot;,&quot;cluster-id&quot;:&quot;cd30cff36981306b&quot;,&quot;local-member-id&quot;:&quot;0&quot;,&quot;added-peer-id&quot;:&quot;5d2c1bd3b22f796f&quot;,&quot;added-peer-peer-urls&quot;:[&quot;http://192.168.10.12:2380&quot;]&#125;</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:1679221421.3021913,&quot;caller&quot;:&quot;membership/cluster.go:392&quot;,&quot;msg&quot;:&quot;added member&quot;,&quot;cluster-id&quot;:&quot;cd30cff36981306b&quot;,&quot;local-member-id&quot;:&quot;0&quot;,&quot;added-peer-id&quot;:&quot;bc34c6bd673bdf9f&quot;,&quot;added-peer-peer-urls&quot;:[&quot;http://192.168.10.11:2380&quot;]&#125;</span><br><span class="line">&#123;&quot;level&quot;:&quot;info&quot;,&quot;ts&quot;:1679221421.3094716,&quot;caller&quot;:&quot;snapshot/v3_snapshot.go:309&quot;,&quot;msg&quot;:&quot;restored snapshot&quot;,&quot;path&quot;:&quot;snap.db&quot;,&quot;wal-dir&quot;:&quot;/data/etcd/cluster.etcd/member/wal&quot;,&quot;data-dir&quot;:&quot;/data/etcd/cluster.etcd&quot;,&quot;snap-dir&quot;:&quot;/data/etcd/cluster.etcd/member/snap&quot;&#125;</span><br><span class="line">[root@tiaoban ~]# etcdctl snapshot restore snap.db --name=etcd1 --data-dir=/data/etcd/cluster.etcd --initial-cluster=etcd1=http://192.168.10.100:2380,etcd2=http://192.168.10.11:2380,etcd3=http://192.168.10.12:2380 --initial-advertise-peer-urls=http://192.168.10.100:2380</span><br><span class="line">[root@k8s-work2 ~]# etcdctl snapshot restore snap.db --name=etcd3 --data-dir=/data/etcd/cluster.etcd --initial-cluster=etcd1=http://192.168.10.100:2380,etcd2=http://192.168.10.11:2380,etcd3=http://192.168.10.12:2380 --initial-advertise-peer-urls=http://192.168.10.12:2380</span><br></pre></td></tr></table></figure><ul><li><font style="background-color:rgba(255, 255, 255, 0);">所有节点重启etcd服务</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# systemctl restart etcd</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">查看验证</font></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@tiaoban ~]# etcdctl get name</span><br><span class="line">name</span><br><span class="line">cuiliang</span><br><span class="line">[root@tiaoban ~]# etcdctl endpoint status -w table</span><br><span class="line">+---------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|      ENDPOINT       |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+---------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| 192.168.10.100:2379 | 2e0eda3ad6bc6e1e |  3.4.23 |   20 kB |      true |      false |         4 |         10 |                 10 |        |</span><br><span class="line">|  192.168.10.11:2379 | bc34c6bd673bdf9f |  3.4.23 |   20 kB |     false |      false |         4 |         10 |                 10 |        |</span><br><span class="line">|  192.168.10.12:2379 | 5d2c1bd3b22f796f |  3.4.23 |   20 kB |     false |      false |         4 |         10 |                 10 |        |</span><br><span class="line">+---------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);">重启etcd后，仍能正常获取name的值，并且节点ID未发生改变。</font></p><h2 id="7c91fffc"><font style="background-color:rgba(255, 255, 255, 0);">用户管理命令</font></h2>---<p><font style="background-color:rgba(255, 255, 255, 0);">etcd默认是没有开启访问控制的，如果开启外网访问etcd的话就需要考虑访问控制的问题，etcd提供了两种访问控制的方式：</font></p><ul><li><font style="background-color:rgba(255, 255, 255, 0);">基于身份验证的访问控制</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">基于证书的访问控制</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">从v3.2版本开始，如果使用参数 –client-cert-auth&#x3D;true 启动etcd服务器，则客户端的TLS证书中的 “通用名称（CN）” 字段将用作 etcd 用户。在这种情况下，公用名将对用户进行身份验证，并且客户端不需要密码。如果同时传递了 –client-cert-auth&#x3D;true 且客户端提供了 CN，并且客户端提供了用户名和密码，则将优先考虑基于用户名和密码的身份验证。<br></font><font style="background-color:rgba(255, 255, 255, 0);">etcd有一个特殊用户root和一个特殊角色root：</font></p><ul><li><strong><font style="background-color:rgba(255, 255, 255, 0);">root用户</font></strong><font style="background-color:rgba(255, 255, 255, 0);">：root用户是etcd的超级管理员，拥有etcd的所有权限，在开启角色认证之前为们必须要先建立好root用户</font></li><li><strong><font style="background-color:rgba(255, 255, 255, 0);">root角色</font></strong><font style="background-color:rgba(255, 255, 255, 0);">：具有该root角色的用户既具有全局读写访问权限，具有更新集群的身份验证配置的权限。此外，该root角色还授予常规集群维护的特权，包括修改集群成员资格，对存储进行碎片整理以及拍摄快照。</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">etcd的权限资源：</font></p><ul><li><strong><font style="background-color:rgba(255, 255, 255, 0);">Users</font></strong><font style="background-color:rgba(255, 255, 255, 0);">: user用来设置身份认证(user:passwd)，一个用户可以拥有多个角色，每个角色被分配一定的权限(只读、只写、可读写)，用户分为root用户和非root用户。</font></li><li><strong><font style="background-color:rgba(255, 255, 255, 0);">Roles</font></strong><font style="background-color:rgba(255, 255, 255, 0);">: 角色用来关联权限，角色主要三类：<br></font><font style="background-color:rgba(255, 255, 255, 0);">root角色:默认创建root用户时即创建了root角色，该角色拥有所有权限；<br></font><font style="background-color:rgba(255, 255, 255, 0);">guest角色:默认自动创建，主要用于非认证使用。普通角色，<br></font><font style="background-color:rgba(255, 255, 255, 0);">由root用户创建角色，并分配指定权限。</font></li><li><strong><font style="background-color:rgba(255, 255, 255, 0);">Permissions</font></strong><font style="background-color:rgba(255, 255, 255, 0);">: 权限分为只读、只写、可读写三种权限，权限即对指定目录或key的读写权限。</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">如果没有指定任何验证方式，即未显示指定以什么用户进行访问，那么默认会设定为 guest 角色。默认情况下 guest 也是具有全局访问权限的</font></p><h3 id="7d94de1c"><font style="background-color:rgba(255, 255, 255, 0);">用户管理</font></h3><font style="background-color:rgba(255, 255, 255, 0);">其主要用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl user &lt;subcommand&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">其主要子命令主要如下所示：</font></p><table><thead><tr><th><strong><font style="background-color:rgba(255, 255, 255, 0);">子命令</font></strong></th><th><strong><font style="background-color:rgba(255, 255, 255, 0);">常用用法</font></strong></th><th><strong><font style="background-color:rgba(255, 255, 255, 0);">功能描述</font></strong></th></tr></thead><tbody><tr><td><font style="background-color:rgba(255, 255, 255, 0);">add</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl user add &lt; user name or user:password &gt; [options] [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">添加新用户</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">delete</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl user delete &lt; user name &gt; [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">删除用户</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">list</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl user list [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">列出所有用户</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">get</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl user get &lt; user name &gt; [options] [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">获取用户详细信息</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">passwd</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl user passwd &lt; user name &gt; [options] [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">修改密码</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">grant-role</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl user grant-role &lt; user name &gt; &lt; role name &gt; [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">赋予用户角色</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">revoke-role</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl user revoke-role &lt; user name &gt; &lt; role name &gt; [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">删除用户角色</font></td></tr></tbody></table><h3 id="3f856ec2"><font style="background-color:rgba(255, 255, 255, 0);">角色管理</font></h3><font style="background-color:rgba(255, 255, 255, 0);">其主要用法如下所示：</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">etcdctl role &lt;subcommand&gt; [flags]</span><br></pre></td></tr></table></figure><p><font style="background-color:rgba(255, 255, 255, 0);"></font></p><p><font style="background-color:rgba(255, 255, 255, 0);">其主要子命令主要如下所示：</font></p><table><thead><tr><th><strong><font style="background-color:rgba(255, 255, 255, 0);">子命令</font></strong></th><th><strong><font style="background-color:rgba(255, 255, 255, 0);">常用用法</font></strong></th><th><strong><font style="background-color:rgba(255, 255, 255, 0);">功能描述</font></strong></th></tr></thead><tbody><tr><td><font style="background-color:rgba(255, 255, 255, 0);">add</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl role add &lt; role name &gt; [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">添加角色</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">delete</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl role delete[flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">删除角色</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">list</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl role list [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">列出所有角色</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">get</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl role get[flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">获取角色详情</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">grant-permission</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl role grant-permission [options] &lt; role name &gt; &lt; permission type &gt; &lt; key &gt; [endkey] [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">把key操作权限授予给一个角色</font></td></tr><tr><td><font style="background-color:rgba(255, 255, 255, 0);">revoke-permission</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">etcdctl role revoke-permission &lt; role name &gt; &lt; key &gt; [endkey] [flags]</font></td><td><font style="background-color:rgba(255, 255, 255, 0);">从角色中撤销key操作权限</font></td></tr></tbody></table><h3 id="2c28d63a"><font style="background-color:rgba(255, 255, 255, 0);">开启root身份验证</font></h3><font style="background-color:rgba(255, 255, 255, 0);">在开启身份验证后，注意事项如下所示：</font><ul><li><font style="background-color:rgba(255, 255, 255, 0);">开启身份验证：所有etcdctl命令操作都需要指定用户参数–user，参数值为用户名:密码</font></li><li><font style="background-color:rgba(255, 255, 255, 0);">开启证书验证：所有etcdctl命令操作都需要添加证书参数–cacert</font></li></ul><p><font style="background-color:rgba(255, 255, 255, 0);">开启root身份验证的步骤如下所示：</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 添加root 用户，密码为123456</span><br><span class="line">[root@tiaoban ~]# etcdctl user add root:123456</span><br><span class="line">User root created</span><br><span class="line"># 开启身份验证，开启为enable，取消为disable</span><br><span class="line">[root@tiaoban ~]# etcdctl auth enable --user=root:123456</span><br><span class="line">Authentication Enabled</span><br><span class="line"># 在开启身份验证后，直接获取键值报错</span><br><span class="line">[root@tiaoban ~]# etcdctl get name</span><br><span class="line">&#123;&quot;level&quot;:&quot;warn&quot;,&quot;ts&quot;:&quot;2023-03-19T19:00:03.922+0800&quot;,&quot;caller&quot;:&quot;clientv3/retry_interceptor.go:62&quot;,&quot;msg&quot;:&quot;retrying of unary invoker failed&quot;,&quot;target&quot;:&quot;endpoint://client-bdd66650-a0b8-4fb4-ab60-47336cfb7523/192.168.10.100:2379&quot;,&quot;attempt&quot;:0,&quot;error&quot;:&quot;rpc error: code = InvalidArgument desc = etcdserver: user name is empty&quot;&#125;</span><br><span class="line">Error: etcdserver: user name is empty</span><br><span class="line"># 添加用户信息访问</span><br><span class="line">[root@tiaoban ~]# etcdctl get name --user=root:123456</span><br><span class="line">name</span><br><span class="line">cuiliang</span><br></pre></td></tr></table></figure><h3 id="debce981"><font style="background-color:rgba(255, 255, 255, 0);">角色授权</font></h3><font style="background-color:rgba(255, 255, 255, 0);">在开启了root身份验证后，就可以对普通用户和角色操作了。  </font>**<font style="background-color:rgba(255, 255, 255, 0);">用户增删改查</font>**<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 增加普通用户</span><br><span class="line">[root@tiaoban ~]# etcdctl user add test:123 --user=root:123456</span><br><span class="line">User test created</span><br><span class="line"># 获取用户信息</span><br><span class="line">[root@tiaoban ~]# etcdctl user get test --user=root:123456</span><br><span class="line">User: test</span><br><span class="line">Roles:</span><br><span class="line"># 查看所有用户</span><br><span class="line">[root@tiaoban ~]# etcdctl user list --user=root:123456</span><br><span class="line">root</span><br><span class="line">test</span><br><span class="line"># 修改用户密码</span><br><span class="line">[root@tiaoban ~]# etcdctl user passwd test --user=root:123456</span><br><span class="line">Password of test: </span><br><span class="line">Type password of test again for confirmation: </span><br><span class="line">Password updated</span><br><span class="line"># 删除用户</span><br><span class="line">[root@tiaoban ~]# etcdctl user delete test --user=root:123456</span><br><span class="line">User test deleted</span><br></pre></td></tr></table></figure><p><strong><font style="background-color:rgba(255, 255, 255, 0);">角色增删改查</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 添加角色</span><br><span class="line">[root@tiaoban ~]# etcdctl role add test-role --user=root:123456</span><br><span class="line">Role test-role created</span><br><span class="line"># 获取角色详细信息</span><br><span class="line">[root@tiaoban ~]# etcdctl role get test-role --user=root:123456</span><br><span class="line">Role test-role</span><br><span class="line">KV Read:</span><br><span class="line">KV Write:</span><br><span class="line"># 获取所有角色</span><br><span class="line">[root@tiaoban ~]# etcdctl role list --user=root:123456</span><br><span class="line">root</span><br><span class="line">test-role</span><br><span class="line"># 删除角色</span><br><span class="line">[root@tiaoban ~]# etcdctl role delete test-role --user=root:123456</span><br><span class="line">Role test-role deleted</span><br></pre></td></tr></table></figure><p><strong><font style="background-color:rgba(255, 255, 255, 0);">用户角色绑定</font></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 增加普通用户</span><br><span class="line">[root@tiaoban ~]# etcdctl user add test:123 --user=root:123456</span><br><span class="line">User test created</span><br><span class="line"># 添加角色</span><br><span class="line">[root@tiaoban ~]# etcdctl role add test-role --user=root:123456</span><br><span class="line">Role test-role created</span><br><span class="line"># 将角色绑定给指定用户</span><br><span class="line">[root@tiaoban ~]# etcdctl user grant-role test test-role --user=root:123456</span><br><span class="line">Role test-role is granted to user test</span><br><span class="line"># 查看用户信息</span><br><span class="line">[root@tiaoban ~]# etcdctl user get test --user=root:123456</span><br><span class="line">User: test</span><br><span class="line">Roles: test-role</span><br><span class="line"></span><br><span class="line"># 取消用户与角色绑定</span><br><span class="line">[root@tiaoban ~]# etcdctl user revoke-role test test-role --user=root:123456</span><br><span class="line">Role test-role is revoked from user test</span><br><span class="line"># 查看用户信息</span><br><span class="line">[root@tiaoban ~]# etcdctl user get test --user=root:123456</span><br><span class="line">User: test</span><br><span class="line">Roles:</span><br></pre></td></tr></table></figure><p><strong><font style="background-color:rgba(255, 255, 255, 0);">角色授权</font></strong><font style="background-color:rgba(255, 255, 255, 0);"><br></font><font style="background-color:rgba(255, 255, 255, 0);">权限分为：只读（read）、只写(write)和读写(readwrite)权限</font></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># 使用test用户获取name值会报错，权限拒绝</span><br><span class="line">[root@tiaoban ~]# etcdctl get name --user=test:123</span><br><span class="line">&#123;&quot;level&quot;:&quot;warn&quot;,&quot;ts&quot;:&quot;2023-03-19T19:10:50.515+0800&quot;,&quot;caller&quot;:&quot;clientv3/retry_interceptor.go:62&quot;,&quot;msg&quot;:&quot;retrying of unary invoker failed&quot;,&quot;target&quot;:&quot;endpoint://client-dbe4e470-b1f4-40a1-b48f-71fcab9f32f0/192.168.10.100:2379&quot;,&quot;attempt&quot;:0,&quot;error&quot;:&quot;rpc error: code = PermissionDenied desc = etcdserver: permission denied&quot;&#125;</span><br><span class="line">Error: etcdserver: permission denied</span><br><span class="line"></span><br><span class="line"># 按key进行授权，test-role角色可以读写name</span><br><span class="line">[root@tiaoban ~]# etcdctl role grant-permission test-role readwrite name  --user=root:123456</span><br><span class="line">Role test-role updated</span><br><span class="line"># 查看角色权限详情</span><br><span class="line">[root@tiaoban ~]# etcdctl role get test-role --user=root:123456</span><br><span class="line">Role test-role</span><br><span class="line">KV Read:</span><br><span class="line">        name</span><br><span class="line">KV Write:</span><br><span class="line">        name</span><br><span class="line"></span><br><span class="line"># 也可以按key的prefix进行授权</span><br><span class="line">[root@tiaoban ~]# etcdctl role grant-permission test-role readwrite foo --prefix=true --user=root:123456</span><br><span class="line">Role test-role updated</span><br><span class="line"># 查看角色权限详情</span><br><span class="line">[root@tiaoban ~]# etcdctl role get test-role --user=root:123456</span><br><span class="line">Role test-role</span><br><span class="line">KV Read:</span><br><span class="line">        [foo, fop) (prefix foo)</span><br><span class="line">        name</span><br><span class="line">KV Write:</span><br><span class="line">        [foo, fop) (prefix foo)</span><br><span class="line">        name</span><br><span class="line"></span><br><span class="line"># 撤消角色授权</span><br><span class="line">[root@tiaoban ~]# etcdctl role revoke-permission test-role name --user=root:123456</span><br><span class="line">Permission of key name is revoked from role test-role</span><br><span class="line"># 查看角色权限详情</span><br><span class="line">[root@tiaoban ~]# etcdctl role get test-role --user=root:123456</span><br><span class="line">Role test-role</span><br><span class="line">KV Read:</span><br><span class="line">        [foo, fop) (prefix foo)</span><br><span class="line">KV Write:</span><br><span class="line">        [foo, fop) (prefix foo)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
